var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","new128","split128","ppv_lite86","extract","insert","u128x1","u32x4x2","u64x2x2","u128x2","Generate only the basic implementations necessary to be…","ppv_lite86::x86_64","try_from","try_into","borrow_mut","result","type_id","borrow","typeid","instance","vec128_storage","vec256_storage","vec512_storage","default","RotateEachWord32","RotateEachWord64","UnsafeFrom","LaneWords4","MultiLane","StoreBytes","SseMachine","Avx2Machine","Returns the character's displayed width in columns, or…","width_cjk","Returns the string's displayed width in columns.","UnicodeWidthChar","UnicodeWidthStr","ordering","formatter","ResultVoidExt","ResultVoidErrExt","demangle","trydemangleerror","Demangle","TryDemangleError","lazy_static","An iterator over the values of a map.","Returns an iterator visiting all values in ascending order…","Returns an iterator visiting all key-value pairs in…","option","into_iter","to_owned","clone_into","size_hint","intoiterator","next_back","index_mut","VacantEntry","OccupiedEntry","ValuesMut","IntoIter","partial_cmp","An iterator over the substrings of a string which, after…","View the underlying data (the part yet to be iterated) as…","graphemeincomplete","as_str","graphemes","Returns an iterator over substrings of `self` separated on…","Returns an iterator over substrings of `self`, split on…","graphemeindices","graphemecursor","uwordbounds","uwordboundindices","unicodesentences","usentencebounds","usentenceboundindices","GraphemeIncomplete","GraphemeIndices","Graphemes","GraphemeCursor","UWordBoundIndices","UWordBounds","UnicodeSegmentation","UnicodeWords","USentenceBounds","USentenceBoundIndices","UnicodeSentences","UNICODE_VERSION","Receiver","A colour is one specific type of ANSI escape code, and can…","Colour #0 (foreground code `30`, background code `40`).","Colour #1 (foreground code `31`, background code `41`).","Colour #2 (foreground code `32`, background code `42`).","Colour #3 (foreground code `33`, background code `43`).","Colour #4 (foreground code `34`, background code `44`).","Colour #5 (foreground code `35`, background code `45`).","Colour #6 (foreground code `36`, background code `46`).","Colour #7 (foreground code `37`, background code `47`).","A colour number from 0 to 255, for use in 256-colour…","A 24-bit RGB color, as specified by ISO-8613-3.","Returns a `Style` with the hidden property set.","Returns a `Style` with the bold property set.","Returns a `Style` with the dimmed property set.","Returns a `Style` with the italic property set.","underline","Returns a `Style` with the underline property set.","Returns a `Style` with the blink property set.","Returns a `Style` with the reverse property set.","strikethrough","Returns a `Style` with the background colour property set.","Paints the given text with this colour, returning an ANSI…","ansigenericstring","ANSIStrings","ANSIByteStrings","to_string","ANSIGenericStrings","ANSIGenericString","ANSIString","ANSIByteString","Returns true if and only if the given character is a…","unicodeworderror","The span of this class.","regex_syntax::ast","regex_syntax::ast::ErrorKind","original","Assertion","A single zero-width assertion.","Repetition","A grouped regular expression.","Alternation","An alternation of regular expressions.","A concatenation of regular expressions.","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","A perl character class, e.g., `\\d` or `\\W`.","Bracketed","A bracketed character class set, which may contain zero or…","CaptureName","ParserBuilder","A builder for a regular expression parser.","parserbuilder","withcomments","classsetitem","classsetbinaryop","position","classasciikind","regex_syntax","ClassUnicode","ErrorKind","WordBoundary","A set of characters represented by Unicode scalar values.","StartLine","StartText","Unicode","GroupKind","CaptureIndex","NonCapturing","regex_syntax::hir","RepetitionKind","The kind of a repetition operator.","ZeroOrOne","ZeroOrMore","OneOrMore","RepetitionRange","Executes an implementation of `Visitor` in constant stack…","Literal","literals","is_empty","Create a new printer.","Print the given `Ast` to the given writer. The writer must…","translatorbuilder","translator","translate","All implementors of `Visitor` must provide a `finish`…","visit_pre","visit_post","visit_alternation_in","Return the type of this error.","errorkind","The original pattern string in which this error occurred.","Return the span at which this error occurred.","literal","repetition","Return true if and only if this HIR is required to match…","Return true if and only if this HIR contains any…","is_always_utf8","classunicode","case_fold_simple","Expand this character class such that it contains all case…","casefolderror","classunicoderange","Create a new class from a sequence of ranges.","classbytes","Create a new class with no ranges.","Add a new range to this set.","Return an iterator over all ranges in this class.","Return the underlying ranges as a slice.","intersect","difference","symmetric_difference","classbytesrange","Return the start of this range.","Return the end of this range.","is_negated","is_match_empty","Create a new parser builder with a default configuration.","Build a parser from this configuration with the given…","nest_limit","Set the nesting limit for this parser.","Whether to support octal syntax or not.","allow_invalid_utf8","ignore_whitespace","Enable verbose mode in the regular expression.","case_insensitive","multi_line","dot_matches_new_line","swap_greed","Enable or disable the Unicode flag (`u`) by default.","Create a new parser with a default configuration.","regex_syntax::ast::parse","regex_syntax::ast::print","regex_syntax::hir::literal","regex_syntax::hir::print","regex_syntax::hir::translate","regex_syntax::utf8","alternation","classsetunion","flagsitem","wordboundary","groupkind","repetitionkind","repetitionrange","utf8sequence","utf8range","literalkind","specialliteralkind","hexliteralkind","classperl","classperlkind","classascii","classunicodekind","classunicodeopkind","classbracketed","classset","classsetrange","classsetbinaryopkind","assertion","assertionkind","repetitionop","capturename","setflags","flagsitemkind","description","This method is called before beginning traversal of the AST.","This method is called on an `Ast` before descending into…","This method is called on an `Ast` after descending all of…","This method is called between child nodes of an…","visit_class_set_item_pre","This method is called on every `ClassSetItem` before…","visit_class_set_item_post","This method is called on every `ClassSetItem` after…","visit_class_set_binary_op_pre","This method is called on every `ClassSetBinaryOp` before…","visit_class_set_binary_op_post","This method is called on every `ClassSetBinaryOp` after…","visit_class_set_binary_op_in","This method is called between the left hand and right hand…","This method is called before beginning traversal of the HIR.","This method is called on an `Hir` before descending into…","This method is called on an `Hir` after descending all of…","This method is called between child nodes of an alternation.","WithComments","ClassPerl","ClassAscii","ClassBracketed","ClassSetRange","ClassSetUnion","ClassSetBinaryOp","RepetitionOp","FlagsItem","LiteralKind","SpecialLiteralKind","HexLiteralKind","ClassPerlKind","ClassAsciiKind","ClassUnicodeKind","ClassUnicodeOpKind","ClassSetItem","ClassSetBinaryOpKind","AssertionKind","FlagsItemKind","TranslatorBuilder","Translator","ClassUnicodeRange","ClassBytes","ClassBytesRange","Utf8Range","Utf8Sequence","Utf8Sequences","UnicodeWordError","CaseFoldError","ClassUnicodeIter","ClassBytesIter","StrSimError","An invalid/unexpected character.","xmlparser","xmlparser::Token","external_id","ElementEnd","ExternalId","streamerror","Returns a byte from a current stream position.","strspan","reference","Returns a end position of the span.","Extension methods for XML-subset only operations.","is_xml_name","textpos","elementend","externalid","entitydefinition","StreamError","Reference","EntityDefinition","XmlCharExt","XmlByteExt","Tokenizer","Error type of this crate.","UnexpectedCharacter","UnexpectedEndOfJson","ExceededDepthLimit","FailedUtf8Parsing","WrongType","jsonvalue","Writes the JSON as byte stream into an implementor of…","Prints out the value as JSON string.","Pretty prints out the value as JSON string. Takes an…","Create an empty iterator that always returns `None`","as_fixed_point_u64","Obtain an integer at a fixed decimal point. This is useful…","as_fixed_point_i64","Analog to `as_fixed_point_u64`, except returning a signed…","json::short","json::object","json::number","JsonValue","with_capacity","from_iter","parseerror","ParseError","hyphensplitter","initial_indent","subsequent_indent","break_words","wrap_iter","Lazily wrap a line of text at `self.width` characters.…","intowrapiter","wrapper","WordSplitter","HyphenSplitter","NoHyphenation","IntoWrapIter","Returns the element for the current thread, or creates it…","Returns the element for the current thread, if it exists.","get_or_try","iter_mut","Returns a mutable iterator over the local values of all…","Removes all thread-specific values from the `ThreadLocal`,…","get_or_default","Returns the element for the current thread, or creates a…","cachedthreadlocal","threadlocal","CachedThreadLocal","ThreadLocal","CachedIntoIter","CachedIterMut","IterMut","roxmltree","A processing instruction.","descendants","namespace","document","attribute","ancestors","expandedname","prevsiblings","nextsiblings","firstchildren","lastchildren","children","traverse","nodetype","Attribute","Namespace","ExpandedName","Ancestors","PrevSiblings","NextSiblings","FirstChildren","LastChildren","Descendants","Position in text.","Returns the error position.","Constructs a new `TextPos`.","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","Creates a new iterator that yields all positions of needle…","imr_multiaddr","imr_interface","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","statvfs64","if_nameindex","ipv6_mreq","itimerval","ip_mreq_source","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_vm","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","siginfo_t","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","max_align_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","ip_mreqn","in6_addr","sigset_t","timezone","fpos64_t","levelfilter","setloggererror","metadata","The module path of the message, if it is a `'static` string.","recordbuilder","arguments","module_path","module_path_static","file_static","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","parselevelerror","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","ParseLevelError","aho_corasick","aho_corasick::ErrorKind","ahocorasick","Build an Aho-Corasick automaton using the configuration…","ahocorasickbuilder","match_kind","matchkind","MatchKind","LeftmostFirst","Use leftmost-first match semantics, which reports leftmost…","LeftmostLongest","Use leftmost-longest match semantics, which reports…","searcher","Return the first occurrence of any of the patterns in this…","find_iter","heap_bytes","Returns the approximate total amount of heap used by this…","aho_corasick::packed","builder","AhoCorasick","AhoCorasickBuilder","FindIter","FindOverlappingIter","StreamFindIter","getrandom","nonzerou32","pathbuf","backtrace_state","ENAMETOOLONG","ENOTEMPTY","EMULTIHOP","EOVERFLOW","EDESTADDRREQ","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EREMOTEIO","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","EHWPOISON","EWOULDBLOCK","EDEADLOCK","errnosentinel","partialeq","F_DUPFD_CLOEXEC","F_ADD_SEALS","F_GET_SEALS","F_GETPIPE_SZ","F_SETPIPE_SZ","readlinkat","splicefflags","fallocate","AT_SYMLINK_NOFOLLOW","AT_NO_AUTOMOUNT","AT_EMPTY_PATH","atflags","O_ACCMODE","O_CLOEXEC","O_DIRECTORY","O_LARGEFILE","O_NOATIME","O_NOFOLLOW","O_NONBLOCK","O_TMPFILE","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","from_bits","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","from_bits_unchecked","Convert from underlying bit representation, preserving all…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","intersects","Returns `true` if there are flags common to both `self`…","contains","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","sealflag","FD_CLOEXEC","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_ZERO_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_UNSHARE_RANGE","fallocateflags","getifaddrs","interfaceaddressiterator","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","moduleinitflags","deletemoduleflags","MS_RDONLY","MS_NOSUID","MS_NOEXEC","MS_SYNCHRONOUS","MS_REMOUNT","MS_MANDLOCK","MS_DIRSYNC","MS_NOATIME","MS_NODIRATIME","MS_SILENT","MS_POSIXACL","MS_UNBINDABLE","MS_PRIVATE","MS_SHARED","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_ACTIVE","MS_NOUSER","MS_RMT_MASK","MS_MGC_VAL","MS_MGC_MSK","msflags","MNT_FORCE","MNT_DETACH","MNT_EXPIRE","mntflags","mq_unlink","mq_receive","mq_getattr","mq_setattr","O_RDONLY","O_WRONLY","mq_oflag","if_nametoindex","IFF_BROADCAST","IFF_DEBUG","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_NOARP","IFF_PROMISC","IFF_ALLMULTI","IFF_MASTER","IFF_SLAVE","IFF_MULTICAST","IFF_PORTSEL","IFF_AUTOMEDIA","IFF_DYNAMIC","IFF_LOWER_UP","IFF_DORMANT","IFF_NO_PI","interfaceflags","pollflags","POLLRDNORM","POLLWRNORM","POLLRDBAND","POLLWRBAND","ws_xpixel","ws_ypixel","The master port in a virtual pty pair","posix_openpt","ptymaster","ptsname_r","Get the name of the slave pseudoterminal (see `ptsname(3)`)","openptyresult","forkptyresult","sched_setaffinity","sched_yield","cloneflags","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWCGROUP","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","LIO_WRITE","LIO_NOWAIT","aiocancelstat","aio_suspend","sigevnotify","lioopcode","borrowmut","from_slice","aio_return","epoll_create","epoll_create1","epoll_ctl","epoll_wait","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLRDHUP","EPOLLEXCLUSIVE","EPOLLWAKEUP","EPOLLONESHOT","epollflags","EPOLL_CLOEXEC","epollcreateflags","nix::sys","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","efdflags","MFD_CLOEXEC","MFD_ALLOW_SEALING","memfdcreateflag","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_HWPOISON","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_SOFT_OFFLINE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","MADV_FREE","munlockall","protflags","shm_unlink","PROT_NONE","PROT_READ","PROT_WRITE","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","MAP_SHARED","MAP_PRIVATE","MAP_FIXED","MAP_ANONYMOUS","MAP_32BIT","MAP_GROWSDOWN","MAP_DENYWRITE","Compatibility flag. Ignored.","MAP_EXECUTABLE","MAP_LOCKED","MAP_NORESERVE","MAP_POPULATE","MAP_NONBLOCK","MAP_HUGETLB","MAP_STACK","mapflags","MS_INVALIDATE","MCL_CURRENT","MCL_FUTURE","mlockallflags","pthread_self","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_ATTACH","PTRACE_DETACH","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","addresstype","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","PTRACE_O_EXITKILL","options","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","quotatype","QIF_BLIMITS","QIF_SPACE","QIF_ILIMITS","QIF_INODES","QIF_BTIME","QIF_ITIME","QIF_LIMITS","QIF_USAGE","QIF_TIMES","quotavalidflags","RB_HALT_SYSTEM","RB_POWER_OFF","RB_AUTOBOOT","RB_SW_SUSPEND","FD_SETSIZE","sendfile","SIGSTKFLT","SIGVTALRM","SIG_BLOCK","SIG_UNBLOCK","SIG_SETMASK","SigAction","Use the given signal-catching function, which takes in the…","nix::sys::signal","nix::sys::signal::SigevNotify","si_value","sighandler","pthread_sigmask","sigprocmask","sigmaskhow","SIGUNUSED","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","saflags","ssi_signo","ssi_errno","ssi_overrun","ssi_trapno","ssi_status","ssi_utime","ssi_stime","ssi_addr_lsb","ssi_syscall","ssi_call_addr","signalfd","SFD_NONBLOCK","SFD_CLOEXEC","sfdflags","cmsg_level","cmsg_type","msg_namelen","msg_iovlen","msg_control","msg_controllen","msg_flags","sa_family_t","sa_family","sin_family","sin6_family","sin6_port","sin6_flowinfo","sin6_addr","sin6_scope_id","ss_family","sun_family","AppleTalk","Received version of…","ScmRights","ScmCredentials","cmsgbuffer","socketpair","sockprotocol","addressfamily","Accept a connection on a socket","sockflag","msgflags","getsockopt","setsockopt","getpeername","getsockname","shutdown","from_i32","socketaddr","from_std","ipv4addr","ipv6addr","unixaddr","inetaddr","Ipv4PacketInfo","nix::sys::socket","Represents a socket option that can be accessed or set.…","SOCK_NONBLOCK","SOCK_CLOEXEC","MSG_DONTWAIT","MSG_CTRUNC","MSG_ERRQUEUE","MSG_CMSG_CLOEXEC","FollowSymlink","NoFollowSymlink","filestat","Change the access and modification times of a file.","ST_SYNCHRONOUS","ST_MANDLOCK","ST_IMMUTABLE","ST_NODIRATIME","Do not update access times on files","ST_RELATIME","fsblkcnt_t","fsfilcnt_t","_POSIX_VDISABLE","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcsendbreak","inputflags","outputflags","tcflag_t","controlflags","localflags","suseconds_t","process_vm_writev","process_vm_readv","from_mut_slice","waitpidflag","waitstatus","__WNOTHREAD","IN_CLOSE_WRITE","IN_CLOSE_NOWRITE","IN_MOVED_FROM","IN_MOVED_TO","IN_DELETE_SELF","IN_MOVE_SELF","IN_Q_OVERFLOW","IN_DONT_FOLLOW","IN_ALL_EVENTS","addwatchflags","IN_NONBLOCK","initflags","watchdescriptor","nix::unistd","The implementation supports the Non-Robust Mutex Priority…","The implementation supports the Robust Mutex Priority…","The implementation provides a C-language compilation…","PTHREAD_STACK_MIN","Change the ownership of the file at `path` to be owned by…","Replace the current process image with a new one (see…","Replace the current process image with a new one and…","sethostname","gethostname","Truncate a file to a specified length","getgrouplist","pathconfvar","accessflags","Generates a wrapper function for a \"bad\" ioctl that writes…","Generates a wrapper function for a \"bad\" ioctl that reads…","Generates a wrapper function for an ioctl that reads and…","nix::ifaddrs","nix::mqueue","nix::net::if_","nix::sys::aio","nix::sys::epoll","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","nix::sys::ptrace","nix::sys::quota","nix::sys::reboot","nix::sys::select","nix::sys::signalfd","nix::sys::socket::sockopt","nix::sys::stat","nix::sys::statvfs","nix::sys::sysinfo","nix::sys::termios","nix::sys::time","nix::sys::uio","nix::sys::utsname","nix::sys::wait","nix::sys::inotify","nix::ucontext","as_bytes_mut","unixcredentials","ipmembershiprequest","ipv6membershiprequest","milliseconds","microseconds","nanoseconds","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","controlmessageowned","nix::fcntl","nix::mount","nix::sched","nix::errno","nix::kmod","nix::poll","aiofsyncmode","signaliterator","netlinkaddr","fchmodatflags","utimensatflags","baudrate","forkresult","fchownatflags","mmapadvise","rebootmode","specialcharacterindices","interfaceaddress","socktype","sysconfvar","nix::dir","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","sub_assign","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","nix::pty","as_raw_fd","ErrnoSentinel","SpliceFFlags","FallocateFlags","InterfaceAddress","ModuleInitFlags","DeleteModuleFlags","InterfaceFlags","OpenptyResult","ForkptyResult","AioFsyncMode","AioCancelStat","EpollCreateFlags","MemFdCreateFlag","MlockAllFlags","QuotaValidFlags","SigevNotify","NetlinkAddr","AddressFamily","SockProtocol","ControlMessageOwned","ControlMessage","UnixCredentials","IpMembershipRequest","Ipv6MembershipRequest","FchmodatFlags","UtimensatFlags","SpecialCharacterIndices","OutputFlags","ControlFlags","TimeValLike","RemoteIoVec","WaitPidFlag","InotifyEvent","AddWatchFlags","FchownatFlags","PathconfVar","AccessFlags","InterfaceAddressIterator","SignalIterator","CmsgIterator","IpAddMembership","IpDropMembership","Ipv6AddMembership","Ipv6DropMembership","IpMulticastTtl","IpMulticastLoop","ReceiveTimeout","SendTimeout","SocketError","PeerCredentials","TcpKeepIdle","RcvBufForce","SndBufForce","OriginalDst","ReceiveTimestamp","IpTransparent","TcpCongestion","Ipv6RecvPacketInfo","AlgSetAeadAuthSize","WatchDescriptor","InvalidUtf8","RegexBuilder","A configurable builder for a regular expression.","RegexSetBuilder","A configurable builder for a set of regular expressions.","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a…","CaptureMatches","An iterator that yields all non-overlapping capture groups…","Yields all substrings delimited by a regular expression…","Yields at most `N` substrings delimited by a regular…","CaptureNames","An iterator over the names of all possible captures.","CaptureLocations","CaptureLocations is a low level representation of the raw…","SubCaptureMatches","An iterator that yields all capturing matches in the order…","ReplacerRef","By-reference adaptor for a `Replacer`","Match multiple (possibly overlapping) regular expressions…","A set of matches returned by a regex set.","SetMatchesIntoIter","An owned iterator over the set of matches from a regex set.","SetMatchesIter","A borrowed iterator over the set of matches from a regex…","regexbuilder","Create a new regular expression builder with the given…","Consume the builder and compile the regular expression.","Set the value for the case insensitive (`i`) flag.","Set the value for the multi-line matching (`m`) flag.","Set the value for the any character (`s`) flag, where in…","Set the value for the greedy swap (`U`) flag.","Set the value for the ignore whitespace (`x`) flag.","Set the value for the Unicode (`u`) flag.","Set the approximate size limit of the compiled regular…","dfa_size_limit","Set the approximate size of the cache used by the DFA.","regex::bytes","regexsetbuilder","size_limit","Consume the builder and compile the regular expressions…","no_expansion","Return a fixed unchanging replacement byte string.","Return a `Replacer` that borrows and wraps this `Replacer`.","replacerref","replace_all","capturelocations","Create a new regex set with the given regular expressions.","regexset","Returns true if and only if one of the regexes in this set…","Returns the set of regular expressions that match in the…","Returns the total number of regular expressions in this set.","Returns the patterns that this set will match on.","matched_any","Whether this set contains any matches.","Whether the regex at the given index matched.","The total number of regexes in the set that created these…","Returns an iterator over indexes in the regex that matched.","setmatchesiter","Returns the starting byte offset of the match in the…","Returns the ending byte offset of the match in the haystack.","Returns the range over the starting and ending byte…","Returns the matched text.","Compiles a regular expression. Once compiled, it can be…","Returns true if and only if the regex matches the string…","Returns the start and end byte range of the leftmost-first…","Returns an iterator for each successive non-overlapping…","Returns the capture groups corresponding to the…","captures","captures_iter","Returns an iterator over all the non-overlapping capture…","capturematches","Returns an iterator of substrings of `text` delimited by a…","Returns an iterator of at most `limit` substrings of…","Replaces the leftmost-first match with the replacement…","Replaces all non-overlapping matches in `text` with the…","Replaces at most `limit` non-overlapping matches in `text`…","shortest_match","Returns the end location of a match in the text given.","shortest_match_at","Returns the same as shortest_match, but starts the search…","is_match_at","Returns the same as is_match, but starts the search at the…","Returns the same as find, but starts the search at the…","captures_read","This is like `captures`, but uses `CaptureLocations`…","captures_read_at","Returns the original string of this regex.","capture_names","Returns an iterator over the capture names.","capturenames","captures_len","Returns the number of captures.","capture_locations","Returns an empty set of capture locations that can be…","Returns the start and end positions of the Nth capture…","Returns the total number of capturing groups.","Returns the match associated with the capture group at…","Returns the match for the capture group named `name`. If…","subcapturematches","Expands all instances of `$name` in `replacement` to the…","Returns the number of captured groups.","Replacer describes types that can be used to replace…","replace_append","Appends text to `dst` to replace the current match.","setmatches","Shows the original regular expression.","Attempts to parse a string into a regular expression","Return a fixed unchanging replacement string.","SetMatches","Escapes all regular expression meta characters in `text`.","INTERNAL_START","Codes below this point represent OS Errors (i.e. positive…","CUSTOM_START","Codes at or above this point can be used by users to…","raw_os_error","Extract the raw OS error code (if this error came from the…","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","Implement `fill_bytes` by reading chunks from the output…","rand_core","rand_core::block","try_fill_bytes","fill_bytes","seed_from_u64","BlockRngCore","SeedableRng","An iterator for getting multiple values out of an argument…","AllowLeadingHyphen","NextLineHelp","Occurs when the user provides an unrecognized…","Sets a string describing what the program does. This will…","Adds additional help information to be displayed in…","Sets a string of the version number to be displayed when…","appsettings","Prints the full help message to [`io::stdout()`] using a…","clapresult","Writes the full help message to the user to a…","Writes the version message to the user to a [`io::Write`]…","Generate a completions file for a specified shell at…","argmatches","visible_alias","visible_aliases","Specifies that if the value is not passed in as an…","display_order","argsettings","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…","requires_all","Sets the requirement rules of this group. This is not to…","conflicts_with","conflicts_with_all","Convenience macro getting a typed value `T` where `T`…","Convenience macro getting a typed value [`Vec<T>`] where…","subcommand","ArgSettings","AppSettings","from_str","CaseInsensitive","bytesorwidestring","symbolname","backtraceframe","symbol_address","backtrace","backtracesymbol","BytesOrWideString","BacktraceFmt","BacktraceFrameFmt","BacktraceFrame","BacktraceSymbol","A cryptographically secure random number generator that…","get_word_pos","Get the offset from the start of the stream, in 32-bit…","set_word_pos","Set the offset from the start of the stream, in 32-bit…","Set the stream number.","set_stream","ChaCha with 20 rounds","chacha20core","chacha12core","chacha8core","from_seed","ChaCha20Rng","ChaCha12Rng","ChaCha12Core","ChaCha20Core","ChaCha8Core","next_u32","next_u64","longest_common_prefix","replacement","Tell if lines which match the previous history entry are…","Tell if lines which begin with a space character are saved…","completiontype","Tell if lines are automatically added to the history.","outputstreamtype","Horizontal space taken by a tab.","max_history_size","Set the maximum length for the history.","history_ignore_space","completion_type","Set `completion_type`.","completion_prompt_limit","The number of possible completions that determines when…","keyseq_timeout","Choose between Emacs or Vi mode.","auto_add_history","Set bell style: beep, flash or nothing.","Forces colorization on or off.","output_stream","rustyline","Takes the currently edited `line` with the cursor…","repeatcount","with_config","Load the history from the specified file.","Save the history in the specified file.","Add a new entry in the history.","Return an immutable reference to the history object.","rustyline::completion","rustyline::config","rustyline::error","rustyline::highlight","rustyline::hint","rustyline::history","rustyline::line_buffer","config_mut","set_max_history_size","set_history_ignore_dups","set_history_ignore_space","set_color_mode","colormode","highlight_char","bellstyle","historyduplicates","direction","charsearch","FilenameCompleter","HistoryDuplicates","CompletionType","OutputStreamType","ReadlineError","Highlighter","MatchingBracketHighlighter","HistoryHinter","starts_with","Representation of an owned and self-contained backtrace.","The Error type.","The kind of the error.","The kind of an error.","A convenient variant for String.","error_chain::example_generated","Convenient wrapper around `std::Result`.","Additional methods for `Result`, for easy interaction with…","If the `Result` is an `Err` then `chain_err` evaluates the…","Constructs an error from a kind, and generates a backtrace.","Constructs a chained error from another error and a kind,…","with_boxed_chain","Construct a chained error from another boxed error and a…","Returns the kind of the error.","Iterates over the error chain.","Returns the backtrace associated with this error.","chain_err","Extends the error chain with a new entry.","A short description of the error. This method is identical…","A string describing the error kind.","error_chain","with_chain","error_chain::example_generated::inner","from_kind","internalbacktrace","extract_backtrace","Captures a backtrace at the callsite of this function,…","new_unresolved","Similar to `new` except that this does not resolve any…","Returns the frames from when this backtrace was captured.","If this backtrace was created from `new_unresolved` then…","ResultExt","ChainedError","Backtrace","DisplayChain","A distribution to sample floating point numbers uniformly…","bernoullierror","bernoulli","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","WeightedIndex","A distribution using weighted sampling to pick a…","weightederror","rand::distributions::weighted","weightedindex","choose_multiple","sample_iter","Fill `dest` entirely with random bytes (uniform value…","rand::distributions::uniform","rand::distributions::weighted::alias_method","rand::rngs","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","rand::seq","unitspheresurface","indexvecintoiter","BernoulliError","SampleUniform","UniformSampler","SampleBorrow","UnitSphereSurface","WeightedError","Distribution","ReseedingRng","SliceRandom","IteratorRandom","AsByteSliceMut","OpenClosed01","Alphanumeric","StandardNormal","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error type of random number generators","A random number generator that retrieves randomness from…","Construct from any type supporting `std::error::Error`","Reference the inner error (`std` only)","Unwrap the inner error (`std` only)","Retrieve the error code, if any.","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","from_entropy","Creates a new instance of the RNG seeded via [`getrandom`].","dsa::output","dsa::output::Output","dsa::commands","dsa::error","basevalue"];
searchIndex["aho_corasick"]={"doc":"A library for finding occurrences of many patterns at…","i":[[3,R[568],R[549],"An automaton for searching multiple strings in linear time.",N,N],[3,R[569],E,"A builder for configuring an Aho-Corasick automaton.",N,N],[3,R[570],E,"An iterator of non-overlapping matches in a particular…",N,N],[3,R[571],E,"An iterator of overlapping matches in a particular haystack.",N,N],[3,R[572],E,"An iterator that reports Aho-Corasick matches in a stream.",N,N],[3,"Error",E,"An error that occurred during the construction of an…",N,N],[3,"Match",E,"A representation of a match reported by an Aho-Corasick…",N,N],[4,R[556],E,"A knob for controlling the match semantics of an…",N,N],[13,"Standard",E,"Use standard match semantics, which support overlapping…",0,N],[13,R[557],E,R[558],0,N],[13,R[559],E,R[560],0,N],[4,R[147],E,"The kind of error that occurred.",N,N],[13,"StateIDOverflow",E,"An error that occurs when constructing an automaton would…",1,N],[12,"max",R[550],"The maximum possible state ID.",1,N],[13,"PremultiplyOverflow",R[549],"An error that occurs when premultiplication of state IDs…",1,N],[12,"max",R[550],"The maximum possible state id.",1,N],[12,"requested_max",E,"The maximum ID required by premultiplication.",1,N],[11,"new",R[549],"Create a new Aho-Corasick automaton using the default…",2,[[["i"]],[R[551]]]],[11,"new_auto_configured",E,"Build an Aho-Corasick automaton with an automatically…",2,[[],[R[551]]]],[11,"is_match",E,"Returns true if and only if this automaton matches the…",2,[[["asref"],["self"]],["bool"]]],[11,"earliest_find",E,"Returns the location of the first detected match in…",2,[[["asref"],["self"]],[["match"],[R[49],["match"]]]]],[11,"find",E,"Returns the location of the first match according to the…",2,[[["asref"],["self"]],[["match"],[R[49],["match"]]]]],[11,R[563],E,"Returns an iterator of non-overlapping matches, using the…",2,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter",E,"Returns an iterator of overlapping matches in the given…",2,[[["self"],["b"]],["findoverlappingiter"]]],[11,R[1239],E,"Replace all matches with a corresponding value in the…",2,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes",E,"Replace all matches using raw bytes with a corresponding…",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_all_with",E,"Replace all matches using a closure called on each match.…",2,[[["str"],["f"],["self"],["string"]]]],[11,"replace_all_with_bytes",E,"Replace all matches using raw bytes with a closure called…",2,[[["vec"],["self"],["f"]]]],[11,"stream_find_iter",E,"Returns an iterator of non-overlapping matches in the…",2,[[["read"],["self"]],[["read"],["streamfinditer"]]]],[11,"stream_replace_all",E,"Search for and replace all matches of this automaton in…",2,[[["w"],["self"],["r"]],[R[15]]]],[11,"stream_replace_all_with",E,"Search the given reader and replace all matches of this…",2,[[["w"],["f"],["self"],["r"]],[R[15]]]],[11,R[554],E,"Returns the match kind used by this automaton.",2,[[["self"]],[R[555]]]],[11,"max_pattern_len",E,"Returns the length of the longest pattern matched by this…",2,[[["self"]],["usize"]]],[11,"pattern_count",E,"Return the total number of patterns matched by this…",2,[[["self"]],["usize"]]],[11,"supports_overlapping",E,"Returns true if and only if this automaton supports…",2,[[["self"]],["bool"]]],[11,"supports_stream",E,"Returns true if and only if this automaton supports stream…",2,[[["self"]],["bool"]]],[11,R[564],E,R[565],2,[[["self"]],["usize"]]],[11,"new",E,"Create a new builder for configuring an Aho-Corasick…",3,[[],[R[553]]]],[11,"build",E,R[552],3,[[["i"],["self"]],[R[551]]]],[11,"build_with_size",E,R[552],3,[[["i"],["self"]],[[R[15],[R[551],"error"]],["error"],[R[551]]]]],[11,"auto_configure",E,"Automatically configure the settings on this builder…",3,[[["self"]],[R[553]]]],[11,R[554],E,"Set the desired match semantics.",3,[[["self"],[R[555]]],[R[553]]]],[11,"anchored",E,"Enable anchored mode, which requires all matches to start…",3,[[["self"],["bool"]],[R[553]]]],[11,"ascii_case_insensitive",E,"Enable ASCII-aware case insensitive matching.",3,[[["self"],["bool"]],[R[553]]]],[11,"dense_depth",E,"Set the limit on how many NFA states use a dense…",3,[[["self"],["usize"]],[R[553]]]],[11,"dfa",E,"Compile the standard Aho-Corasick automaton into a…",3,[[["self"],["bool"]],[R[553]]]],[11,"prefilter",E,"Enable heuristic prefilter optimizations.",3,[[["self"],["bool"]],[R[553]]]],[11,"byte_classes",E,"Shrink the size of the transition alphabet by mapping…",3,[[["self"],["bool"]],[R[553]]]],[11,"premultiply",E,"Premultiply state identifiers in the transition table.…",3,[[["self"],["bool"]],[R[553]]]],[11,"kind",E,"Return the kind of this error.",4,[[["self"]],[R[177]]]],[0,"packed",E,"A lower level API for packed multiple substring search,…",N,N],[3,"Builder",R[566],"A builder for constructing a packed searcher from a…",N,N],[3,"Config",E,"The configuration for a packed multiple pattern searcher.",N,N],[3,R[570],E,"An iterator over non-overlapping matches from a packed…",N,N],[3,"Searcher",E,"A packed searcher for quickly finding occurrences of…",N,N],[4,R[556],E,"A knob for controlling the match semantics of a packed…",N,N],[13,R[557],E,R[558],5,N],[13,R[559],E,R[560],5,N],[11,"new",E,"Create a new default configuration. A default…",6,[[],["config"]]],[11,R[567],E,"Create a packed builder from this configuration. The…",6,[[["self"]],[R[567]]]],[11,R[554],E,"Set the match semantics for this configuration.",6,[[["self"],[R[555]]],["config"]]],[11,"new",E,"Create a new builder for constructing a multi-pattern…",7,[[],[R[567]]]],[11,"build",E,"Build a searcher from the patterns added to this builder…",7,[[["self"]],[[R[561]],[R[49],[R[561]]]]]],[11,"add",E,"Add the given pattern to this set to match.",7,[[["self"],["asref"]],[R[567]]]],[11,"extend",E,"Add the given iterator of patterns to this set to match.",7,[[["self"],["i"]],[R[567]]]],[11,"new",E,"A convenience function for constructing a searcher from an…",8,[[["i"]],[[R[561]],[R[49],[R[561]]]]]],[11,"find",E,R[562],8,[[["asref"],["self"]],[["match"],[R[49],["match"]]]]],[11,"find_at",E,R[562],8,[[["asref"],["usize"],["self"]],[["match"],[R[49],["match"]]]]],[11,R[563],E,"Return an iterator of non-overlapping occurrences of the…",8,[[["self"],["b"]],["finditer"]]],[11,R[554],E,"Returns the match kind used by this packed searcher.",8,[[["self"]],[R[555]]]],[11,"minimum_len",E,"Returns the minimum length of a haystack that is required…",8,[[["self"]],["usize"]]],[11,R[564],E,R[565],8,[[["self"]],["usize"]]],[8,"StateID",R[549],"A trait describing the representation of an automaton's…",N,N],[10,"from_usize",E,"Convert from a `usize` to this implementation's…",9,[[["usize"]],["self"]]],[10,"to_usize",E,"Convert this implementation's representation to a `usize`.",9,[[],["usize"]]],[10,"max_id",E,"Return the maximum state identifier supported by this…",9,[[],["usize"]]],[11,"pattern",E,"Returns the identifier of the pattern that matched.",10,[[["self"]],["usize"]]],[11,"start",E,"The starting position of the match.",10,[[["self"]],["usize"]]],[11,"end",E,"The ending position of the match.",10,[[["self"]],["usize"]]],[11,R[166],E,"Returns true if and only if this match is empty. That is,…",10,[[["self"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[50],E,E,11,[[],["i"]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[50],E,E,12,[[],["i"]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[50],E,E,13,[[],["i"]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[114],E,E,4,[[["self"]],["string"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",R[566],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[50],E,E,14,[[],["i"]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"next",R[549],E,11,[[["self"]],[["match"],[R[49],["match"]]]]],[11,"next",E,E,12,[[["self"]],[["match"],[R[49],["match"]]]]],[11,"next",E,E,13,[[["self"]],[[R[15],["match"]],[R[49],[R[15]]]]]],[11,"next",R[566],E,14,[[["self"]],[["match"],[R[49],["match"]]]]],[11,"clone",R[549],E,2,[[["self"]],[R[551]]]],[11,"clone",E,E,3,[[["self"]],[R[553]]]],[11,"clone",E,E,0,[[["self"]],[R[555]]]],[11,"clone",E,E,4,[[["self"]],["error"]]],[11,"clone",E,E,1,[[["self"]],[R[177]]]],[11,"clone",R[566],E,5,[[["self"]],[R[555]]]],[11,"clone",E,E,6,[[["self"]],["config"]]],[11,"clone",E,E,7,[[["self"]],[R[567]]]],[11,"clone",E,E,8,[[["self"]],[R[561]]]],[11,"clone",R[549],E,10,[[["self"]],["match"]]],[11,R[23],E,E,3,[[],[R[553]]]],[11,R[23],E,E,0,[[],[R[555]]]],[11,R[23],R[566],E,5,[[],[R[555]]]],[11,R[23],E,E,6,[[],["config"]]],[11,R[23],E,E,7,[[],[R[567]]]],[11,"eq",R[549],E,0,[[[R[555]],["self"]],["bool"]]],[11,"eq",R[566],E,5,[[["self"],[R[555]]],["bool"]]],[11,"eq",R[549],E,10,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["match"]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,11,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[566],E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[549],E,10,[[["self"],[R[38]]],[R[15]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,R[251],E,E,4,[[["self"]],["str"]]]],"p":[[4,R[556]],[4,R[147]],[3,R[568]],[3,R[569]],[3,"Error"],[4,R[556]],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,R[570]],[3,R[571]],[3,R[572]],[3,R[570]]]};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix",E,"Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix",E,"Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style",E,"A style is a collection of properties that can format a…",N,N],[12,"foreground",E,"The style's foreground colour, if it has one.",0,N],[12,"background",E,"The style's background colour, if it has one.",0,N],[12,"is_bold",E,"Whether this style is bold.",0,N],[12,"is_dimmed",E,"Whether this style is dimmed.",0,N],[12,"is_italic",E,"Whether this style is italic.",0,N],[12,"is_underline",E,"Whether this style is underlined.",0,N],[12,"is_blink",E,"Whether this style is blinking.",0,N],[12,"is_reverse",E,"Whether this style has reverse colours.",0,N],[12,"is_hidden",E,"Whether this style is hidden.",0,N],[12,"is_strikethrough",E,"Whether this style is struckthrough.",0,N],[3,R[116],E,"An `ANSIGenericString` includes a generic string type and…",N,N],[3,R[115],E,"A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0",E,E,1,N],[4,"Colour",E,R[89],N,N],[13,"Black",E,R[90],2,N],[13,"Red",E,R[91],2,N],[13,"Green",E,R[92],2,N],[13,"Yellow",E,R[93],2,N],[13,"Blue",E,R[94],2,N],[13,"Purple",E,R[95],2,N],[13,"Cyan",E,R[96],2,N],[13,"White",E,R[97],2,N],[13,"Fixed",E,R[98],2,N],[13,"RGB",E,R[99],2,N],[4,"Color",E,R[89],N,N],[13,"Black",E,R[90],2,N],[13,"Red",E,R[91],2,N],[13,"Green",E,R[92],2,N],[13,"Yellow",E,R[93],2,N],[13,"Blue",E,R[94],2,N],[13,"Purple",E,R[95],2,N],[13,"Cyan",E,R[96],2,N],[13,"White",E,R[97],2,N],[13,"Fixed",E,R[98],2,N],[13,"RGB",E,R[99],2,N],[5,R[112],E,"A function to construct an `ANSIStrings` instance.",N,[[],["ansistrings"]]],[5,R[113],E,"A function to construct an `ANSIByteStrings` instance.",N,[[],["ansibytestrings"]]],[11,"prefix",E,"The prefix for this style.",0,[[],["prefix"]]],[11,"infix",E,"The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix",E,"The suffix for this style.",0,[[],["suffix"]]],[11,"prefix",E,"The prefix for this colour.",2,[[],["prefix"]]],[11,"infix",E,"The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix",E,"The suffix for this colour.",2,[[],["suffix"]]],[11,"new",E,"Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold",E,R[101],0,[[["self"]],["style"]]],[11,"dimmed",E,R[102],0,[[["self"]],["style"]]],[11,"italic",E,R[103],0,[[["self"]],["style"]]],[11,R[104],E,R[105],0,[[["self"]],["style"]]],[11,"blink",E,R[106],0,[[["self"]],["style"]]],[11,"reverse",E,R[107],0,[[["self"]],["style"]]],[11,"hidden",E,R[100],0,[[["self"]],["style"]]],[11,R[108],E,R[100],0,[[["self"]],["style"]]],[11,"fg",E,"Returns a `Style` with the foreground colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"on",E,R[109],0,[[["colour"],["self"]],["style"]]],[11,"is_plain",E,"Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal",E,"Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold",E,R[101],2,[[],["style"]]],[11,"dimmed",E,R[102],2,[[],["style"]]],[11,"italic",E,R[103],2,[[],["style"]]],[11,R[104],E,R[105],2,[[],["style"]]],[11,"blink",E,R[106],2,[[],["style"]]],[11,"reverse",E,R[107],2,[[],["style"]]],[11,"hidden",E,R[100],2,[[],["style"]]],[11,R[108],E,"Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on",E,R[109],2,[[["colour"]],["style"]]],[11,"paint",E,R[110],0,[[["i"]],[[R[111]],["toowned"],["sized"]]]],[11,"paint",E,R[110],2,[[["i"]],[[R[111]],["toowned"],["sized"]]]],[6,R[117],E,"An ANSI String is a string coupled with the `Style` to…",N,N],[6,R[118],E,"An `ANSIByteString` represents a formatted series of…",N,N],[6,R[112],E,"A set of `ANSIString`s collected together, in order to be…",N,N],[6,R[113],E,"A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[114],E,E,3,[[["self"]],["string"]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[114],E,E,4,[[["self"]],["string"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[114],E,E,5,[[["self"]],["string"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[114],E,E,6,[[["self"]],["string"]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[114],E,E,1,[[["self"]],["string"]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"from",E,"You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from",E,E,6,[[["i"]],[R[111]]]],[11,"clone",E,E,3,[[["self"]],["prefix"]]],[11,"clone",E,E,4,[[["self"]],["infix"]]],[11,"clone",E,E,5,[[["self"]],["suffix"]]],[11,"clone",E,E,0,[[["self"]],["style"]]],[11,"clone",E,E,2,[[["self"]],["colour"]]],[11,"clone",E,E,6,[[["self"]],[R[111]]]],[11,R[23],E,"Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"eq",E,E,0,[[["self"],["style"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["style"]],["bool"]]],[11,"eq",E,E,2,[[["colour"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["colour"],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[111]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[111]],["self"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"deref",E,E,6,[[["self"]],["s"]]],[11,"write_to",E,"Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["w"],["self"]],[R[15]]]],[11,"write_to",E,"Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["w"],["self"]],[R[15]]]]],"p":[[3,"Style"],[3,R[115]],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,R[116]],[6,R[117]],[6,R[112]],[6,R[118]],[6,R[113]]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout",E,E,0,N],[13,"Stderr",E,E,0,N],[13,"Stdin",E,E,0,N],[5,"is",E,"returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt",E,"returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"clone",E,E,0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame",R[1361],"A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol",E,"A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName",E,"A wrapper around a symbol name to provide ergonomic…",N,N],[3,R[1364],E,"A formatter for backtraces.",N,N],[3,R[1365],E,"A formatter for just one frame of a backtrace.",N,N],[3,R[1476],E,R[1443],N,N],[3,R[1366],E,"Captured version of a frame in a backtrace.",N,N],[3,R[1367],E,"Captured version of a symbol in a backtrace.",N,N],[4,R[1363],E,"A platform independent representation of a string. When…",N,N],[13,"Bytes",E,"A slice, typically provided on Unix platforms.",0,N],[13,"Wide",E,"Wide strings typically from Windows.",0,N],[4,"PrintFmt",E,"The styles of printing that we can print",N,N],[13,"Short",E,"Prints a terser backtrace which ideally only contains…",1,N],[13,"Full",E,"Prints a backtrace that contains all possible information",1,N],[5,"trace_unsynchronized",E,"Same as `trace`, only unsafe as it's unsynchronized.",N,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized",E,"Same as `resolve_frame`, only unsafe as it's unsynchronized.",N,[[["frame"],["f"]]]],[5,"resolve_unsynchronized",E,"Same as `resolve`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"clear_symbol_cache",E,"Attempt to reclaim that cached memory used to symbolicate…",N,[[]]],[5,"trace",E,"Inspects the current call-stack, passing all active frames…",N,[[["fnmut"]]]],[5,"resolve",E,"Resolve an address to a symbol, passing the symbol to the…",N,[[["fnmut"]]]],[5,"resolve_frame",E,"Resolve a previously capture frame to a symbol, passing…",N,[[["frame"],["fnmut"]]]],[11,"ip",E,"Returns the current instruction pointer of this frame.",2,[[["self"]]]],[11,R[1360],E,"Returns the starting symbol address of the frame of this…",2,[[["self"]]]],[11,"name",E,"Returns the name of this function.",3,[[["self"]],[[R[49],[R[1358]]],[R[1358]]]]],[11,"addr",E,"Returns the starting address of this function.",3,[[["self"]],[R[49]]]],[11,"filename_raw",E,"Returns the raw filename as a slice. This is mainly useful…",3,[[["self"]],[[R[1357]],[R[49],[R[1357]]]]]],[11,"lineno",E,"Returns the line number for where this symbol is currently…",3,[[["self"]],[["u32"],[R[49],["u32"]]]]],[11,"filename",E,"Returns the file name where this function was defined.",3,[[["self"]],[[R[49],["path"]],["path"]]]],[11,"new",E,"Creates a new symbol name from the raw underlying bytes.",4,[[],[R[1358]]]],[11,R[65],E,"Returns the raw (mangled) symbol name as a `str` if the…",4,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"as_bytes",E,"Returns the raw symbol name as a list of bytes",4,[[["self"]]]],[11,"to_str_lossy",E,"Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["str"],["cow",["str"]]]]],[11,"into_path_buf",E,"Provides a `Path` representation of `BytesOrWideString`.",0,[[],[R[575]]]],[11,"new",E,"Create a new `BacktraceFmt` which will write output to the…",5,[[[R[38]],["fnmut"],["printfmt"]],["self"]]],[11,"add_context",E,"Prints a preamble for the backtrace about to be printed.",5,[[["self"]],[R[15]]]],[11,"frame",E,"Adds a frame to the backtrace output.",5,[[["self"]],["backtraceframefmt"]]],[11,"finish",E,"Completes the backtrace output.",5,[[["self"]],[R[15]]]],[11,"backtrace_frame",E,"Prints a `BacktraceFrame` with this frame formatter.",6,[[["self"],[R[1359]]],[R[15]]]],[11,"backtrace_symbol",E,"Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[[R[1362]],["self"],[R[1359]]],[R[15]]]],[11,"symbol",E,"Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["self"],["frame"],["symbol"]],[R[15]]]],[11,"print_raw",E,"Adds a raw frame to the backtrace output.",6,[[["u32"],[R[1358]],[R[49],[R[1357]]],[R[49],[R[1358]]],["self"],[R[1357]],[R[49],["u32"]]],[R[15]]]],[11,"new",E,R[1469],7,[[],[R[1361]]]],[11,R[1470],E,R[1471],7,[[],[R[1361]]]],[11,"frames",E,R[1472],7,[[["self"]]]],[11,"resolve",E,R[1473],7,[[["self"]]]],[11,"ip",E,"Same as `Frame::ip`",8,[[["self"]]]],[11,R[1360],E,"Same as `Frame::symbol_address`",8,[[["self"]]]],[11,"symbols",E,"Returns the list of symbols that this frame corresponds to.",8,[[["self"]]]],[11,"name",E,"Same as `Symbol::name`",9,[[["self"]],[[R[49],[R[1358]]],[R[1358]]]]],[11,"addr",E,"Same as `Symbol::addr`",9,[[["self"]],[R[49]]]],[11,"filename",E,"Same as `Symbol::filename`",9,[[["self"]],[[R[49],["path"]],["path"]]]],[11,"lineno",E,"Same as `Symbol::lineno`",9,[[["self"]],[["u32"],[R[49],["u32"]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,R[114],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,"from",E,E,7,[[["vec",[R[1359]]],[R[1359]]],["self"]]],[11,"fmt",E,E,4,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,2,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,3,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,4,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"eq",E,E,1,[[["printfmt"],["self"]],["bool"]]],[11,"drop",E,E,6,[[["self"]]]],[11,"into",E,E,7,[[],[["vec",[R[1359]]],[R[1359]]]]],[11,"clone",E,E,2,[[["self"]],["frame"]]],[11,"clone",E,E,1,[[["self"]],["printfmt"]]],[11,"clone",E,E,7,[[["self"]],[R[1361]]]],[11,"clone",E,E,8,[[["self"]],[R[1359]]]],[11,"clone",E,E,9,[[["self"]],[R[1362]]]],[11,R[23],E,E,7,[[],[R[1361]]]]],"p":[[4,R[1363]],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,R[1364]],[3,R[1365]],[3,R[1476]],[3,R[1366]],[3,R[1367]]]};
searchIndex["backtrace_sys"]={"doc":E,"i":[[4,R[576],"backtrace_sys",E,N,N],[5,"backtrace_create_state",E,E,N,N],[5,"backtrace_syminfo",E,E,N,N],[5,"backtrace_pcinfo",E,E,N,N],[6,"backtrace_syminfo_callback",E,E,N,N],[6,"backtrace_full_callback",E,E,N,N],[6,"backtrace_error_callback",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]]],"p":[[4,R[576]]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["c2_chacha"]={"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha",E,N,N],[8,"Machine","c2_chacha::guts",E,N,N],[16,"u32x4",E,E,0,N],[16,"u64x2",E,E,0,N],[16,R[6],E,E,0,N],[16,R[7],E,E,0,N],[16,R[8],E,E,0,N],[16,"u64x4",E,E,0,N],[16,R[9],E,E,0,N],[16,"u32x4x4",E,E,0,N],[16,"u64x2x4",E,E,0,N],[16,"u128x4",E,E,0,N],[11,"unpack",E,E,0,[[["s"]],["v"]]],[11,"vec",E,E,0,[[["a"]],["v"]]],[11,"read_le",E,E,0,[[],["v"]]],[11,"read_be",E,E,0,[[],["v"]]],[10,R[19],E,E,0,[[],["self"]]],[3,"ChaCha",E,E,N,N],[3,"State",E,E,N,N],[11,"new",E,E,1,[[],["self"]]],[11,"refill4",E,"Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill",E,"Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param",E,E,1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param",E,E,1,[[["u32"],["self"]],["u64"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,1,[[["self"]],["chacha"]]],[11,"clone",E,E,2,[[["self"]],["state"]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup",E,"`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"ArgMatches",E,"Used to get information about the arguments that where…",N,N],[3,"OsValues",E,R[1326],N,N],[3,"SubCommand",E,"The abstract representation of a command line subcommand.",N,N],[3,"Values",E,R[1326],N,N],[3,"App",E,"Used to create a representation of a command line program…",N,N],[3,"Error",E,"Command Line Argument Parser Error",N,N],[12,"message",E,"Formatted error message",0,N],[12,"kind",E,"The type of error",0,N],[12,"info",E,"Any additional information passed along, such as the…",0,N],[4,R[1353],E,"Various settings that apply to arguments and may be set,…",N,N],[13,"Required",E,"The argument must be used",1,N],[13,"Multiple",E,"The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues",E,"The argument allows empty values such as `--option \"\"`",1,N],[13,"Global",E,"The argument should be propagated down through all child…",1,N],[13,"Hidden",E,"The argument should not be shown in help text",1,N],[13,"TakesValue",E,"The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter",E,"Determines if the argument allows values to be grouped via…",1,N],[13,R[1328],E,"Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter",E,"Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues",E,"Hides the possible values from the help string",1,N],[13,R[1327],E,"Allows vals that start with a '-'",1,N],[13,"RequireEquals",E,"Require options use `--option=val` syntax",1,N],[13,"Last",E,"Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue",E,"Hides the default value from the help string",1,N],[13,R[1356],E,"Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues",E,"Hides ENV values in the help message",1,N],[13,"HiddenShortHelp",E,"The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp",E,"The argument should not be shown in long help text",1,N],[4,R[1354],E,"Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8",E,"Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf",E,"Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,R[1327],E,"Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers",E,"Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional",E,"Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands",E,"Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands",E,"Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp",E,"Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp",E,"Uses colorized help messages.",2,N],[13,"ColorAuto",E,"Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways",E,"Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever",E,"Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage",E,"Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues",E,"Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpFlags",E,"Disables `-h` and `--help` [`App`] without affecting any…",2,N],[13,"DisableHelpSubcommand",E,"Disables the `help` subcommand",2,N],[13,"DisableVersion",E,"Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder",E,"Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion",E,"Specifies to use the version of the current command for…",2,N],[13,"Hidden",E,"Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp",E,"Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands",E,"Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName",E,"Specifies that the parser should not assume the first…",2,N],[13,R[1328],E,"Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown",E,"DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs",E,"Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp",E,"Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8",E,"Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired",E,"Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg",E,"Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage",E,"Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands",E,"Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError",E,"Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,R[147],E,"Command line argument parser kind of error",N,N],[13,"InvalidValue",E,"Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument",E,"Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand",E,R[1329],3,N],[13,"UnrecognizedSubcommand",E,R[1329],3,N],[13,"EmptyValue",E,"Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation",E,"Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues",E,"Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues",E,"Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues",E,"Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict",E,"Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument",E,"Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand",E,"Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand",E,"Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage",E,"Occurs when the user provides multiple values to an…",3,N],[13,R[1194],E,"Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed",E,"Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed",E,"Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound",E,"Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io",E,"Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format",E,"Represents a [Format error] (which is a part of…",3,N],[4,"Shell",E,"Describes which shell to produce a completions file for",N,N],[13,"Bash",E,"Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish",E,"Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh",E,"Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell",E,"Generates a completion file for PowerShell",4,N],[13,"Elvish",E,"Generates a completion file for Elvish",4,N],[11,"new",E,"Creates a new instance of an application requiring a name.…",5,[[["into",["string"]],["string"]],["self"]]],[11,"get_name",E,"Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name",E,"Get the name of the binary",5,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"with_defaults",E,"Creates a new instance of an application requiring a name,…",5,[[["into",["string"]],["string"]],["self"]]],[11,"author",E,"Sets a string of author(s) that will be displayed to the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"bin_name",E,"Overrides the system-determined binary name. This should…",5,[[["into",["string"]],["string"]],["self"]]],[11,"about",E,R[1330],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_about",E,R[1330],5,[[["into",["str"]],["str"]],["self"]]],[11,"name",E,"Sets the program's name. This will be displayed when…",5,[[["into",["string"]],["string"]],["self"]]],[11,"after_help",E,R[1331],5,[[["into",["str"]],["str"]],["self"]]],[11,"before_help",E,R[1331],5,[[["into",["str"]],["str"]],["self"]]],[11,"version",E,R[1332],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_version",E,R[1332],5,[[["into",["str"]],["str"]],["self"]]],[11,"usage",E,"Sets a custom usage string to override the auto-generated…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help",E,"Sets a custom help message and overrides the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help_short",E,"Sets the [`short`] for the auto-generated `help` argument.",5,[[["str"],["asref",["str"]]],["self"]]],[11,"version_short",E,"Sets the [`short`] for the auto-generated `version`…",5,[[["str"],["asref",["str"]]],["self"]]],[11,"help_message",E,"Sets the help text for the auto-generated `help` argument.",5,[[["into",["str"]],["str"]],["self"]]],[11,"version_message",E,"Sets the help text for the auto-generated `version`…",5,[[["into",["str"]],["str"]],["self"]]],[11,"template",E,"Sets the help template to be used, overriding the default…",5,[[["into",["str"]],["str"]],["self"]]],[11,"setting",E,"Enables a single command, or [`SubCommand`], level settings.",5,[[[R[1333]]],["self"]]],[11,"settings",E,"Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting",E,"Enables a single setting that is propagated down through…",5,[[[R[1333]]],["self"]]],[11,"global_settings",E,"Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting",E,"Disables a single command, or [`SubCommand`], level setting.",5,[[[R[1333]]],["self"]]],[11,"unset_settings",E,"Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width",E,"Sets the terminal width at which to wrap help messages.…",5,[[["usize"]],["self"]]],[11,"max_term_width",E,"Sets the max terminal width at which to wrap help…",5,[[["usize"]],["self"]]],[11,"arg",E,"Adds an [argument] to the list of valid possibilities.",5,[[["arg"],["into",["arg"]]],["self"]]],[11,"args",E,"Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage",E,"A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage",E,"Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`SubCommand`] alias, which function as…",5,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,R[1340],E,"Allows adding a [`SubCommand`] alias that functions…",5,[[["into",["str"]],["str"]],["self"]]],[11,R[1341],E,"Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group",E,"Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup"]],["self"]]],[11,"groups",E,"Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,R[1352],E,"Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands",E,"Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,R[1343],E,"Allows custom ordering of [`SubCommand`]s within the help…",5,[[["usize"]],["self"]]],[11,"print_help",E,R[1334],5,[[["self"]],[R[1335]]]],[11,"print_long_help",E,R[1334],5,[[["self"]],[R[1335]]]],[11,"write_help",E,R[1336],5,[[["w"],["self"]],[R[1335]]]],[11,"write_long_help",E,R[1336],5,[[["w"],["self"]],[R[1335]]]],[11,"write_version",E,R[1337],5,[[["w"],["self"]],[R[1335]]]],[11,"write_long_version",E,R[1337],5,[[["w"],["self"]],[R[1335]]]],[11,"gen_completions",E,R[1338],5,[[["into",["string"]],["string"],["into",["osstring"]],["osstring"],["self"],["shell"]]]],[11,"gen_completions_to",E,R[1338],5,[[["into",["string"]],["string"],["w"],["self"],["shell"]]]],[11,"get_matches",E,"Starts the parsing process, upon a failed parse an error…",5,[[],[R[1339]]]],[11,"get_matches_safe",E,"Starts the parsing process. This method will return a…",5,[[],[[R[1335],[R[1339]]],[R[1339]]]]],[11,"get_matches_from",E,"Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],[R[1339]]]],[11,"get_matches_from_safe",E,"Starts the parsing process. A combination of…",5,[[["i"]],[[R[1335],[R[1339]]],[R[1339]]]]],[11,"get_matches_from_safe_borrow",E,"Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[[R[1335],[R[1339]]],[R[1339]]]]],[11,"with_name",E,"Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage",E,"Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short",E,"Sets the short version of the argument without the…",6,[[["str"],["asref",["str"]]],["self"]]],[11,"long",E,"Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,R[1340],E,"Allows adding a [`Arg`] alias that functions exactly like…",6,[[["into",["str"]],["str"]],["self"]]],[11,R[1341],E,"Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help",E,"Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help",E,"Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last",E,"Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required",E,"Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals",E,"Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values",E,"Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless",E,"Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all",E,"Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one",E,"Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,R[1348],E,"Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,R[1349],E,"The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with",E,"Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all",E,"Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires",E,"Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if",E,"Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs",E,"Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if",E,"Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs",E,"Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,R[1346],E,"Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value",E,"Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values",E,"Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value",E,"Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index",E,"Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple",E,"Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator",E,"Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global",E,"Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values",E,"Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden",E,"Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values",E,"Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value",E,"Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,R[212],E,"When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group",E,"Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups",E,"Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values",E,"Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator",E,"Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os",E,"Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values",E,"Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values",E,"Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter",E,"Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter",E,"Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter",E,"Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names",E,"Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name",E,"Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value",E,"Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os",E,"Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if",E,"Specifies the value of the argument if `arg` has been used…",6,[[[R[49],["str"]],["str"],["str"]],["self"]]],[11,"default_value_if_os",E,"Provides a conditional default value in the exact same…",6,[[["osstr"],["str"],[R[49],["osstr"]]],["self"]]],[11,"default_value_ifs",E,"Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os",E,"Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env",E,R[1342],6,[[["str"]],["self"]]],[11,"env_os",E,R[1342],6,[[["osstr"]],["self"]]],[11,"hide_env_values",E,"@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help",E,"When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,R[1343],E,"Allows custom ordering of args within the help message.…",6,[[["usize"]],["self"]]],[11,"raw",E,"Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help",E,"Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help",E,"Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set",E,"Checks if one of the [`ArgSettings`] settings is set for…",6,[[["self"],[R[1344]]],["bool"]]],[11,"set",E,"Sets one of the [`ArgSettings`] settings for the argument.",6,[[[R[1344]]],["self"]]],[11,"unset",E,"Unsets one of the [`ArgSettings`] settings for the argument.",6,[[[R[1344]]],["self"]]],[11,"value_of",E,"Gets the value of a specific [option] or [positional]…",7,[[["str"],["self"],["asref",["str"]]],[[R[49],["str"]],["str"]]]],[11,"value_of_lossy",E,"Gets the lossy value of a specific argument. If the…",7,[[["str"],["self"],["asref",["str"]]],[[R[49],["cow"]],["cow",["str"]]]]],[11,"value_of_os",E,"Gets the OS version of a string value of a specific…",7,[[["str"],["self"],["asref",["str"]]],[["osstr"],[R[49],["osstr"]]]]],[11,"values_of",E,"Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["str"],["self"],["asref",["str"]]],[["values"],[R[49],["values"]]]]],[11,"values_of_lossy",E,"Gets the lossy values of a specific argument. If the…",7,[[["str"],["self"],["asref",["str"]]],[[R[49],["vec"]],["vec",["string"]]]]],[11,"values_of_os",E,"Gets a [`OsValues`] struct which is implements…",7,[[["str"],["self"],["asref",["str"]]],[[R[49],["osvalues"]],["osvalues"]]]],[11,"is_present",E,"Returns `true` if an argument was present at runtime,…",7,[[["str"],["self"],["asref",["str"]]],["bool"]]],[11,"occurrences_of",E,"Returns the number of times an argument was used at…",7,[[["str"],["self"],["asref",["str"]]],["u64"]]],[11,"index_of",E,"Gets the starting index of the argument in respect to all…",7,[[["str"],["self"],["asref",["str"]]],[[R[49],["usize"]],["usize"]]]],[11,"indices_of",E,"Gets all indices of the argument in respect to all other…",7,[[["str"],["self"],["asref",["str"]]],[[R[49],["indices"]],["indices"]]]],[11,"subcommand_matches",E,R[1345],7,[[["str"],["self"],["asref",["str"]]],[[R[49],[R[1339]]],[R[1339]]]]],[11,"subcommand_name",E,R[1345],7,[[["self"]],[[R[49],["str"]],["str"]]]],[11,R[1352],E,"This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage",E,"Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name",E,"Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name",E,"Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg",E,"Adds an [argument] to this group by name",9,[[["str"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to this group by name",9,[[],["self"]]],[11,"multiple",E,"Allows more than one of the ['Arg']s in this group to be…",9,[[["bool"]],["self"]]],[11,"required",E,"Sets the group as required or not. A required group will…",9,[[["bool"]],["self"]]],[11,"requires",E,R[1347],9,[[["str"]],["self"]]],[11,R[1346],E,R[1347],9,[[],["self"]]],[11,R[1348],E,"Sets the exclusion rules of this group. Exclusion (aka…",9,[[["str"]],["self"]]],[11,R[1349],E,"Sets the exclusion rules of this group. Exclusion rules…",9,[[],["self"]]],[11,"use_stderr",E,"Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit",E,"Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description",E,"Create an error with a custom description.",0,[[["str"],[R[177]]],["self"]]],[11,"variants",E,"A list of possible variants in `&'static str` form",4,[[]]],[6,"Result",E,"Short hand for [`Result`] type",N,N],[14,"value_t",E,R[1350],N,N],[14,"value_t_or_exit",E,R[1350],N,N],[14,"values_t",E,R[1351],N,N],[14,"values_t_or_exit",E,R[1351],N,N],[14,"_clap_count_exprs",E,"Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum",E,"Convenience macro to generate more complete enums with…",N,N],[14,"crate_version",E,"Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors",E,"Allows you to pull the authors for the app from your…",N,N],[14,"crate_description",E,"Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name",E,"Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate",E,"Allows you to build the `App` instance from your…",N,N],[14,"clap_app",E,"Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[50],E,E,10,[[],["i"]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[50],E,E,11,[[],["i"]]],[11,R[51],E,E,11,[[["self"]],[T]]],[11,R[52],E,E,11,[[["self"],[T]]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[114],E,E,5,[[["self"]],["string"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[114],E,E,4,[[["self"]],["string"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"from",E,E,6,[[["arg"]],["self"]]],[11,"from",E,E,9,[[["arggroup"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"next",E,E,11,[[["self"]],[[R[49],["str"]],["str"]]]],[11,R[53],E,E,11,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[["osstr"],[R[49],["osstr"]]]]],[11,R[53],E,E,10,[[["self"]]]],[11,R[55],E,E,11,[[["self"]],[[R[49],["str"]],["str"]]]],[11,R[55],E,E,10,[[["self"]],[["osstr"],[R[49],["osstr"]]]]],[11,"clone",E,E,2,[[["self"]],[R[1333]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["arg"]]],[11,"clone",E,E,7,[[["self"]],[R[1339]]]],[11,"clone",E,E,11,[[["self"]],["values"]]],[11,"clone",E,E,10,[[["self"]],["osvalues"]]],[11,"clone",E,E,8,[[["self"]],[R[1352]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[1344]]]],[11,"clone",E,E,3,[[["self"]],[R[177]]]],[11,"clone",E,E,4,[[["self"]],["shell"]]],[11,R[23],E,E,6,[[],["arg"]]],[11,R[23],E,E,7,[[],["self"]]],[11,R[23],E,E,11,[[],["self"]]],[11,R[23],E,E,10,[[],["self"]]],[11,R[23],E,E,9,[[],["arggroup"]]],[11,"eq",E,E,2,[[["self"],[R[1333]]],["bool"]]],[11,"eq",E,E,6,[[["arg"],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[1344]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[177]],["self"]],["bool"]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,11,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,R[1355],E,E,2,[[["str"]],[R[15]]]],[11,R[1355],E,E,1,[[["str"]],[R[15]]]],[11,R[1355],E,E,4,[[["str"]],[R[15]]]],[11,R[251],E,E,0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,R[1353]],[4,R[1354]],[4,R[147]],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["dirs"]={"doc":"The dirs crate is","i":[[5,"home_dir","dirs","Returns the path to the user's home directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"cache_dir",E,"Returns the path to the user's cache directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"config_dir",E,"Returns the path to the user's config directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"data_dir",E,"Returns the path to the user's data directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"data_local_dir",E,"Returns the path to the user's local data directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"executable_dir",E,"Returns the path to the user's executable directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"runtime_dir",E,"Returns the path to the user's runtime directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"audio_dir",E,"Returns the path to the user's audio directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"desktop_dir",E,"Returns the path to the user's desktop directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"document_dir",E,"Returns the path to the user's document directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"download_dir",E,"Returns the path to the user's download directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"font_dir",E,"Returns the path to the user's font directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"picture_dir",E,"Returns the path to the user's picture directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"public_dir",E,"Returns the path to the user's public directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"template_dir",E,"Returns the path to the user's template directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"video_dir",E,"Returns the path to the user's video directory.",N,[[],[[R[49],[R[575]]],[R[575]]]]]],"p":[]};
searchIndex["dirs_sys"]={"doc":E,"i":[[5,"is_absolute_path","dirs_sys",E,N,[[["osstring"]],[[R[49],[R[575]]],[R[575]]]]],[5,"home_dir",E,E,N,[[],[[R[49],[R[575]]],[R[575]]]]],[5,"user_dir",E,E,N,[[["str"]],[[R[49],[R[575]]],[R[575]]]]],[5,"user_dirs",E,E,N,[[["path"]],[["string"],[R[575]],["hashmap",["string",R[575]]]]]]],"p":[]};
searchIndex["dsa"]={"doc":"A tool aiming to provide a cli client for DSA (Das…","i":[[3,"Hero","dsa","Public container for the hero attributes.",N,N],[12,"name",E,"Hero's name, e.g. Elvenor Elvington",0,N],[12,"health",E,"Maximum health as per base+(KO+KO+KK)/2",0,N],[12,"stamina",E,"Maximum stamina as per base+(MU+KO+GE)/2",0,N],[12,"astral",E,"Maximum astral points as per base+(MU+IN+CH)/2",0,N],[12,"basevalues",E,"The basic attributes (MU, KL, etc.)",0,N],[12,"skills",E,"All skills documented in the xml, as a map of name to…",0,N],[4,"BaseValue",E,"Base values of a Hero.",N,N],[13,"Courage",E,"MU, Mut, courage",1,N],[13,"Intelligence",E,"KL, Klugheit, intelligence",1,N],[13,"Intuition",E,"IN, Intuition",1,N],[13,"Charisma",E,"CH, Charisma",1,N],[13,"Prestidigitation",E,"FF, Fingerfertigkeit, prestidigitation",1,N],[13,"Dexterity",E,"GE, Gewandtheit, dexterity",1,N],[13,"Constitution",E,"KO, Konstitution, constitution",1,N],[13,"Strength",E,"KK, Körperkraft, strength",1,N],[13,"SocialStatus",E,"GS, Sozialstatus, socialstatus",1,N],[13,"MagicResistance",E,"MR, Magieresistenz, magicrestistance",1,N],[13,"Initiative",E,"INI, Initiative",1,N],[13,"CloseCombat",E,"AT, Attacke, nahkampf, combat, closecombat",1,N],[13,"Parry",E,"PA, Parrieren, parry",1,N],[13,"RangedCombat",E,"FK, Fernkampf, ranged, rangedcombat",1,N],[5,"app",E,"Helper to create the basic app with options common between…",N,[[],["app"]]],[0,"error",E,"Error chain created using error-chain.",N,N],[3,"Error",R[1544],R[1444],N,N],[12,"0",E,R[1445],2,N],[4,R[147],E,R[1446],N,N],[13,"Msg",E,R[1447],3,N],[13,"Io",E,E,3,N],[13,"XmlParser",E,E,3,N],[13,"NumberParsing",E,E,3,N],[13,"CommandLineParsing",E,E,3,N],[13,"LineEditing",E,E,3,N],[13,"ShellSyntax",E,E,3,N],[6,"Result",E,R[1449],N,N],[8,R[1474],E,R[1450],N,N],[10,R[1459],E,R[1451],4,[[["f"]],[[R[15],["error"]],["error"]]]],[11,R[1466],E,R[1452],2,[[[R[177]]],["error"]]],[11,R[1464],E,R[1453],2,[[["k"],["e"]],["error"]]],[11,R[1454],E,R[1455],2,[[["error"],["k"],["box",["error"]]],["error"]]],[11,"kind",E,R[1456],2,[[["self"]],[R[177]]]],[11,"iter",E,R[1457],2,[[["self"]],["iter"]]],[11,R[1361],E,R[1458],2,[[["self"]],[[R[49],[R[1361]]],[R[1361]]]]],[11,R[1459],E,R[1460],2,[[["f"]],["error"]]],[11,R[251],E,R[1461],2,[[["self"]],["str"]]],[11,R[251],E,R[1462],3,[[["self"]],["str"]]],[0,"output","dsa","Output formatting.",N,N],[4,"Format",R[1541],"Enum of possible formats, can be converted to a Formatter.",N,N],[13,"HumanReadable",E,E,5,N],[13,"Json",E,E,5,N],[4,"Output",E,"Types of output generated by an Action.",N,N],[13,"Roll",E,"The result of a dice roll for a certain skill.",6,N],[12,"success",R[1542],"Whether or not it was successful.",6,N],[12,"critical",E,"Whether the success/fail is critical.",6,N],[12,"remainder",E,"How many points of the skill did remain.",6,N],[12,"base",E,"The basevalue to be rolled against.",6,N],[12,"mods",E,"The sum of all modifiers placed on the roll.",6,N],[12,"checks",E,"Which BaseValues were rolled against.",6,N],[12,"stat",E,"The corresponding stat values.",6,N],[12,"dice",E,"The raw dice rolls.",6,N],[13,"Gauge",R[1541],"Any kind of gauge used to keep track during a cli session,…",6,N],[12,"name",R[1542],"The name of the tracked attribute.",6,N],[12,"current",E,"The current value.",6,N],[12,"max",E,"The maximum value.",6,N],[13,"Dump",R[1541],"Dump of the hero structure.",6,N],[8,"Formatter",E,"Converts an Output to a String based on its own rules.",N,N],[10,"format",E,"Convert the Output to a String for further presentation to…",7,[[["output"],["self"]],["string"]]],[11,"variants",E,E,5,[[]]],[0,"commands","dsa","The commands which can be plugged into the command line App.",N,N],[3,"Cli",R[1543],E,N,N],[3,"Roll",E,E,N,N],[3,"Tracker",E,"A generic tracker for a property during a cli session.",N,N],[3,"Dump",E,"Simply dumps the hero, ready to be displayed by the used…",N,N],[8,"Action","dsa","A command line action providing usage and call…",N,N],[10,"usage",E,"Command line argument definition of the subcommand of the…",8,[[["self"]],["app"]]],[10,"call",E,"A method which maps self, as well as the current Hero and…",8,[[[R[1339]],["self"],["hero"]],[["vec",["output"]],[R[15],["vec"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[1544],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[114],E,E,3,[[["self"]],["string"]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",R[1541],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[114],E,E,5,[[["self"]],["string"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",R[1543],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"usage",E,E,10,[[["self"]],["app"]]],[11,"call",E,E,10,[[[R[1339]],["self"],["hero"]],[["vec",["output"]],[R[15],["vec"]]]]],[11,"usage",E,E,11,[[["self"]],["app"]]],[11,"call",E,E,11,[[[R[1339]],["self"],["hero"]],[["vec",["output"]],[R[15],["vec"]]]]],[11,"usage",E,E,12,[[["self"]],["app"]]],[11,"call",E,E,12,[[[R[1339]],["self"],["hero"]],[["vec",["output"]],[R[15],["vec"]]]]],[11,"usage",E,E,9,[[["self"]],["app"]]],[11,"call",E,E,9,[[[R[1339]],["self"],["hero"]],[["vec",["output"]],[R[15],["vec"]]]]],[11,"into",R[1541],"Returns a formatter for the respective enum kind.",5,[[],[["box",[R[38]]],[R[38]]]]],[11,"from",R[1544],E,2,[[["error"]],["self"]]],[11,"from",E,E,2,[[["error"]],["self"]]],[11,"from",E,E,2,[[["parseinterror"]],["self"]]],[11,"from",E,E,2,[[["error"]],["self"]]],[11,"from",E,E,2,[[["readlineerror"]],["self"]]],[11,"from",E,E,2,[[[R[347]]],["self"]]],[11,"from",E,E,2,[[[R[177]]],["self"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[["string"]],["self"]]],[11,"from",E,E,3,[[["str"]],["self"]]],[11,"from",E,E,3,[[["string"]],["self"]]],[11,"from",E,E,3,[[["error"]],["self"]]],[11,"clone",R[1541],E,5,[[["self"]],["format"]]],[11,"clone",E,E,6,[[["self"]],["output"]]],[11,"clone","dsa",E,0,[[["self"]],["hero"]]],[11,"clone",E,E,1,[[["self"]],[R[1545]]]],[11,R[23],E,E,0,[[],["hero"]]],[11,"cmp",R[1541],E,5,[[["self"],["format"]],[R[37]]]],[11,"cmp","dsa",E,1,[[["self"],[R[1545]]],[R[37]]]],[11,"eq",R[1541],E,5,[[["self"],["format"]],["bool"]]],[11,"eq","dsa",E,1,[[["self"],[R[1545]]],["bool"]]],[11,R[61],R[1541],E,5,[[["self"],["format"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],"dsa",E,1,[[["self"],[R[1545]]],[[R[49],[R[37]]],[R[37]]]]],[11,"fmt",R[1544],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1541],E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1544],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1541],E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt","dsa",E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,R[1355],R[1541],E,5,[[["str"]],[R[15]]]],[11,R[1355],"dsa",E,0,[[["str"]],[R[15]]]],[11,R[1355],E,E,1,[[["str"]],[R[15]]]],[11,"hash",R[1541],E,5,[[["self"],["__h"]]]],[11,"hash","dsa",E,1,[[["self"],["__h"]]]],[11,R[251],R[1544],E,2,[[["self"]],["str"]]],[11,"source",E,E,2,[[["self"]],[[R[49],["error"]],["error"]]]],[11,"new",E,E,2,[[[R[177]],["state"]],["error"]]],[11,R[1466],E,E,2,[[],["self"]]],[11,R[1464],E,E,2,[[["k"],["e"]],["self"]]],[11,"kind",E,E,2,[[["self"]]]],[11,"iter",E,E,2,[[["self"]],["iter"]]],[11,R[1459],E,E,2,[[["f"]],["self"]]],[11,R[1361],E,E,2,[[["self"]],[[R[49],[R[1361]]],[R[1361]]]]],[11,R[1468],E,E,2,[[["error"]],[[R[1467]],[R[49],[R[1467]]]]]],[11,"new_action",R[1543],E,11,[[],[["box",["action"]],["action"]]]],[11,"new_action",E,E,12,[[["isize"],["str"]],[["box",["action"]],["action"]]]]],"p":[[3,"Hero"],[4,"BaseValue"],[3,"Error"],[4,R[147]],[8,R[1474]],[4,"Format"],[4,"Output"],[8,"Formatter"],[8,"Action"],[3,"Dump"],[3,"Cli"],[3,"Roll"],[3,"Tracker"]]};
searchIndex["dsa_cli"]={"doc":E,"i":[],"p":[]};
searchIndex["error_chain"]={"doc":"A library for consistent and reliable error handling","i":[[3,R[1476],R[1463],R[1443],N,N],[3,"Iter",E,"Iterator over the error chain using the `Error::cause()`…",N,N],[3,R[1477],E,"A struct which formats an error for output.",N,N],[0,"example_generated",E,"These modules show an example of code generated by the…",N,N],[3,"Error",R[1448],R[1444],N,N],[12,"0",E,R[1445],0,N],[4,R[147],E,R[1446],N,N],[13,"Msg",E,R[1447],1,N],[13,"Inner",E,"Link to another `ErrorChain`.",1,N],[13,"Io",E,"Link to a `std::io::Error` type.",1,N],[13,"Custom",E,"A custom error kind.",1,N],[0,"inner",E,"Another code generated by the macro.",N,N],[3,"Error",R[1465],R[1444],N,N],[12,"0",E,R[1445],2,N],[4,R[147],E,R[1446],N,N],[13,"Msg",E,R[1447],3,N],[6,"Result",E,R[1449],N,N],[8,R[1474],E,R[1450],N,N],[10,R[1459],E,R[1451],4,[[["f"]],[[R[15],["error"]],["error"]]]],[11,R[1466],E,R[1452],2,[[[R[177]]],["error"]]],[11,R[1464],E,R[1453],2,[[["k"],["e"]],["error"]]],[11,R[1454],E,R[1455],2,[[["error"],["k"],["box",["error"]]],["error"]]],[11,"kind",E,R[1456],2,[[["self"]],[R[177]]]],[11,"iter",E,R[1457],2,[[["self"]],["iter"]]],[11,R[1361],E,R[1458],2,[[["self"]],[[R[1361]],[R[49],[R[1361]]]]]],[11,R[1459],E,R[1460],2,[[["f"]],["error"]]],[11,R[251],E,R[1461],2,[[["self"]],["str"]]],[11,R[251],E,R[1462],3,[[["self"]],["str"]]],[6,"Result",R[1448],R[1449],N,N],[8,R[1474],E,R[1450],N,N],[10,R[1459],E,R[1451],5,[[["f"]],[[R[15],["error"]],["error"]]]],[11,R[1466],E,R[1452],0,[[[R[177]]],["error"]]],[11,R[1464],E,R[1453],0,[[["k"],["e"]],["error"]]],[11,R[1454],E,R[1455],0,[[["error"],["k"],["box",["error"]]],["error"]]],[11,"kind",E,R[1456],0,[[["self"]],[R[177]]]],[11,"iter",E,R[1457],0,[[["self"]],["iter"]]],[11,R[1361],E,R[1458],0,[[["self"]],[[R[1361]],[R[49],[R[1361]]]]]],[11,R[1459],E,R[1460],0,[[["f"]],["error"]]],[11,R[251],E,R[1461],0,[[["self"]],["str"]]],[11,R[251],E,R[1462],1,[[["self"]],["str"]]],[8,"ExitCode",R[1463],"Represents a value that can be used as the exit status of…",N,N],[10,"code",E,"Returns the value to use as the exit status.",6,[[],["i32"]]],[8,R[1475],E,"This trait is implemented on all the errors generated by…",N,N],[16,R[147],E,"Associated kind type.",7,N],[10,R[1466],E,R[1452],7,[[],["self"]]],[10,R[1464],E,R[1453],7,[[["k"],["e"]],["self"]]],[10,"kind",E,R[1456],7,[[["self"]]]],[10,"iter",E,R[1457],7,[[["self"]],["iter"]]],[10,R[1361],E,R[1458],7,[[["self"]],[[R[1361]],[R[49],[R[1361]]]]]],[11,"display_chain",E,"Returns an object which implements `Display` for printing…",7,[[["self"]],["displaychain"]]],[10,R[1459],E,R[1460],7,[[["f"]],["self"]]],[11,"new",E,"Returns a new iterator over the error chain using…",8,[[[R[49],["error"]],["error"]],["iter"]]],[14,"stringify_internal",E,"From https://github.com/tailhook/quick-error Changes: -…",N,N],[14,"write_internal",E,"Macro used interally for output expanding an expression ",N,N],[14,R[1463],E,"Macro for generating error types and traits. See crate…",N,N],[14,"quick_main",E,"Convenient wrapper to be able to use `?` and such in the…",N,N],[14,"bail",E,"Exits a function early with an error",N,N],[14,"ensure",E,"Exits a function early with an error if the condition is…",N,N],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[50],E,E,8,[[],["i"]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[114],E,E,10,[[["self"]],["string"]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",R[1448],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[114],E,E,1,[[["self"]],["string"]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",R[1465],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[114],E,E,3,[[["self"]],["string"]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",R[1463],E,9,[[],[[R[1359]],["vec",[R[1359]]]]]],[11,"clone",E,E,9,[[["self"]],[R[1361]]]],[11,R[23],E,E,9,[[],[R[1361]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[["error"],[R[15],["error"]]]]],[11,"from",E,E,9,[[[R[1359]],["vec",[R[1359]]]],[R[1361]]]],[11,"new",R[1465],E,2,[[["state"],[R[177]]],["error"]]],[11,R[1466],E,E,2,[[],["self"]]],[11,R[1464],E,E,2,[[["k"],["e"]],["self"]]],[11,"kind",E,E,2,[[["self"]]]],[11,"iter",E,E,2,[[["self"]],["iter"]]],[11,R[1459],E,E,2,[[["f"]],["self"]]],[11,R[1361],E,E,2,[[["self"]],[[R[1361]],[R[49],[R[1361]]]]]],[11,R[1468],E,E,2,[[["error"]],[[R[49],[R[1467]]],[R[1467]]]]],[11,"new",R[1448],E,0,[[[R[177]],["state"]],["error"]]],[11,R[1466],E,E,0,[[],["self"]]],[11,R[1464],E,E,0,[[["k"],["e"]],["self"]]],[11,"kind",E,E,0,[[["self"]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[1459],E,E,0,[[["f"]],["self"]]],[11,R[1361],E,E,0,[[["self"]],[[R[1361]],[R[49],[R[1361]]]]]],[11,R[1468],E,E,0,[[["error"]],[[R[49],[R[1467]]],[R[1467]]]]],[11,"from",R[1465],E,2,[[[R[177]]],["self"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[["string"]],["self"]]],[11,"from",E,E,3,[[["str"]],["self"]]],[11,"from",E,E,3,[[["string"]],["self"]]],[11,"from",E,E,3,[[["error"]],["self"]]],[11,"from",R[1448],E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[[R[177]]],["self"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[["string"]],["self"]]],[11,"from",E,E,1,[[[R[177]]],["self"]]],[11,"from",E,E,1,[[["str"]],["self"]]],[11,"from",E,E,1,[[["string"]],["self"]]],[11,"from",E,E,1,[[["error"]],["self"]]],[11,"next",R[1463],E,8,[[["self"]],[[R[49],["error"]],["error"]]]],[11,"fmt",R[1465],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1448],E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1463],E,10,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1465],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1448],E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1463],E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[38]]],[R[15]]]],[11,R[251],R[1465],E,2,[[["self"]],["str"]]],[11,"source",E,E,2,[[["self"]],[[R[49],["error"]],["error"]]]],[11,R[251],R[1448],E,0,[[["self"]],["str"]]],[11,"source",E,E,0,[[["self"]],[[R[49],["error"]],["error"]]]],[11,"new",R[1463],R[1469],9,[[],[R[1361]]]],[11,R[1470],E,R[1471],9,[[],[R[1361]]]],[11,"frames",E,R[1472],9,[[["self"]]]],[11,"resolve",E,R[1473],9,[[["self"]]]]],"p":[[3,"Error"],[4,R[147]],[3,"Error"],[4,R[147]],[8,R[1474]],[8,R[1474]],[8,"ExitCode"],[8,R[1475]],[3,"Iter"],[3,R[1476]],[3,R[1477]]]};
searchIndex["getrandom"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"Error",R[573],"A small and `no_std` compatible error type.",N,N],[5,R[573],E,"Fill `dest` with random bytes from the system's preferred…",N,[[],[[R[15],["error"]],["error"]]]],[18,"UNKNOWN",E,"Unknown error.",0,N],[18,"UNAVAILABLE",E,"System entropy source is unavailable.",0,N],[18,R[1305],E,R[1306],0,N],[18,R[1307],E,R[1308],0,N],[11,R[1309],E,R[1310],0,[[],[[R[49],["i32"]],["i32"]]]],[11,"code",E,"Extract the bare error code.",0,[[],[R[574]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[R[574]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["json"]={"doc":E,"i":[[4,"Error","json",R[326],N,N],[13,R[327],E,E,0,N],[12,"ch","json::Error",E,0,N],[12,"line",E,E,0,N],[12,"column",E,E,0,N],[13,R[328],"json",E,0,N],[13,R[329],E,E,0,N],[13,R[330],E,E,0,N],[13,R[331],E,E,0,N],[4,R[344],E,E,N,N],[13,"Null",E,E,1,N],[13,"Short",E,E,1,N],[13,"String",E,E,1,N],[13,"Number",E,E,1,N],[13,"Boolean",E,E,1,N],[13,"Object",E,E,1,N],[13,"Array",E,E,1,N],[4,"JsonError",E,R[326],N,N],[13,R[327],E,E,0,N],[12,"ch","json::JsonError",E,0,N],[12,"line",E,E,0,N],[12,"column",E,E,0,N],[13,R[328],"json",E,0,N],[13,R[329],E,E,0,N],[13,R[330],E,E,0,N],[13,R[331],E,E,0,N],[5,"parse",E,E,N,[[["str"]],[[R[332]],[R[15],[R[332]]]]]],[5,"from",E,"Convenience for `JsonValue::from(value)`",N,[[[T]],[R[332]]]],[5,"stringify",E,"Pretty prints out the value as JSON string.",N,[[[T]],["string"]]],[5,"stringify_pretty",E,"Pretty prints out the value as JSON string. Second…",N,[[["u16"],[T]],["string"]]],[11,"new_object",E,"Create an empty `JsonValue::Object` instance. When…",1,[[],[R[332]]]],[11,"new_array",E,"Create an empty `JsonValue::Array` instance. When creating…",1,[[],[R[332]]]],[11,"dump",E,R[334],1,[[["self"]],["string"]]],[11,"pretty",E,R[335],1,[[["u16"],["self"]],["string"]]],[11,"to_writer",E,R[333],1,[[["w"],["self"]]]],[11,"write",E,R[333],1,[[["w"],["self"]],[R[15]]]],[11,"write_pretty",E,R[333],1,[[["w"],["u16"],["self"]],[R[15]]]],[11,"is_string",E,E,1,[[["self"]],["bool"]]],[11,"is_number",E,E,1,[[["self"]],["bool"]]],[11,"is_boolean",E,E,1,[[["self"]],["bool"]]],[11,"is_null",E,E,1,[[["self"]],["bool"]]],[11,"is_object",E,E,1,[[["self"]],["bool"]]],[11,"is_array",E,E,1,[[["self"]],["bool"]]],[11,R[166],E,"Checks whether the value is empty. Returns true for:",1,[[["self"]],["bool"]]],[11,R[65],E,E,1,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"as_number",E,E,1,[[["self"]],[["number"],[R[49],["number"]]]]],[11,"as_f64",E,E,1,[[["self"]],[["f64"],[R[49],["f64"]]]]],[11,"as_f32",E,E,1,[[["self"]],[["f32"],[R[49],["f32"]]]]],[11,"as_u64",E,E,1,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"as_u32",E,E,1,[[["self"]],[["u32"],[R[49],["u32"]]]]],[11,"as_u16",E,E,1,[[["self"]],[[R[49],["u16"]],["u16"]]]],[11,"as_u8",E,E,1,[[["self"]],[[R[49],["u8"]],["u8"]]]],[11,"as_usize",E,E,1,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,"as_i64",E,E,1,[[["self"]],[[R[49],["i64"]],["i64"]]]],[11,"as_i32",E,E,1,[[["self"]],[[R[49],["i32"]],["i32"]]]],[11,"as_i16",E,E,1,[[["self"]],[["i16"],[R[49],["i16"]]]]],[11,"as_i8",E,E,1,[[["self"]],[[R[49],["i8"]],["i8"]]]],[11,"as_isize",E,E,1,[[["self"]],[["isize"],[R[49],["isize"]]]]],[11,"as_bool",E,E,1,[[["self"]],[[R[49],["bool"]],["bool"]]]],[11,R[337],E,R[338],1,[[["u16"],["self"]],[[R[49],["u64"]],["u64"]]]],[11,R[339],E,R[340],1,[[["u16"],["self"]],[[R[49],["i64"]],["i64"]]]],[11,"take",E,"Take over the ownership of the value, leaving `Null` in…",1,[[["self"]],[R[332]]]],[11,"take_string",E,"Checks that self is a string, returns an owned Rust…",1,[[["self"]],[["string"],[R[49],["string"]]]]],[11,"push",E,"Works on `JsonValue::Array` - pushes a new value to the…",1,[[["self"],[T]],[R[15]]]],[11,"pop",E,"Works on `JsonValue::Array` - remove and return last…",1,[[["self"]],[R[332]]]],[11,R[649],E,"Works on `JsonValue::Array` - checks if the array contains…",1,[[["self"],[T]],["bool"]]],[11,"has_key",E,"Works on `JsonValue::Object` - checks if the object has a…",1,[[["str"],["self"]],["bool"]]],[11,"len",E,"Returns length of array or object (number of keys),…",1,[[["self"]],["usize"]]],[11,"members",E,"Works on `JsonValue::Array` - returns an iterator over…",1,[[["self"]],["members"]]],[11,"members_mut",E,"Works on `JsonValue::Array` - returns a mutable iterator…",1,[[["self"]],["membersmut"]]],[11,"entries",E,"Works on `JsonValue::Object` - returns an iterator over…",1,[[["self"]],["entries"]]],[11,"entries_mut",E,"Works on `JsonValue::Object` - returns a mutable iterator…",1,[[["self"]],["entriesmut"]]],[11,R[5],E,"Works on `JsonValue::Object` - inserts a new entry, or…",1,[[["str"],["self"],[T]],[R[15]]]],[11,"remove",E,"Works on `JsonValue::Object` - remove a key and return the…",1,[[["str"],["self"]],[R[332]]]],[11,"array_remove",E,"Works on `JsonValue::Array` - remove an entry and return…",1,[[["self"],["usize"]],[R[332]]]],[11,"clear",E,"When called on an array or an object, will wipe them…",1,[[["self"]]]],[11,"wrong_type",E,E,0,[[["str"]],["self"]]],[0,"short",E,E,N,N],[3,"Short",R[341],E,N,N],[17,"MAX_LEN",E,E,N,N],[11,R[777],E,"Creates a `Short` from a `&str` slice. This method can…",2,[[["str"]],["self"]]],[11,R[65],E,"Cheaply obtain a `&str` slice out of the `Short`.",2,[[["self"]],["str"]]],[0,"object","json",E,N,N],[3,"Object",R[342],"A binary tree implementation of a string -> `JsonValue`…",N,N],[3,"Iter",E,E,N,N],[3,R[375],E,E,N,N],[11,"new",E,"Create a new, empty instance of `Object`. Empty `Object`…",3,[[],["self"]]],[11,R[345],E,"Create a new `Object` with memory preallocated for…",3,[[["usize"]],["self"]]],[11,R[5],E,"Insert a new entry, or override an existing one. Note that…",3,[[["str"],["self"],[R[332]]]]],[11,"override_last",E,E,3,[[[R[332]],["self"]]]],[11,"get",E,E,3,[[["str"],["self"]],[[R[49],[R[332]]],[R[332]]]]],[11,"get_mut",E,E,3,[[["str"],["self"]],[[R[332]],[R[49],[R[332]]]]]],[11,"remove",E,"Attempts to remove the value behind `key`, if successful…",3,[[["str"],["self"]],[[R[332]],[R[49],[R[332]]]]]],[11,"len",E,E,3,[[["self"]],["usize"]]],[11,R[166],E,E,3,[[["self"]],["bool"]]],[11,"clear",E,"Wipe the `Object` clear. The capacity will remain untouched.",3,[[["self"]]]],[11,"iter",E,E,3,[[["self"]],["iter"]]],[11,R[364],E,E,3,[[["self"]],["itermut"]]],[11,"dump",E,R[334],3,[[["self"]],["string"]]],[11,"pretty",E,R[335],3,[[["u16"],["self"]],["string"]]],[11,"empty",E,R[336],4,[[],["self"]]],[11,"empty",E,R[336],5,[[],["self"]]],[0,"number","json",E,N,N],[3,"Number",R[343],"Number representation used inside `JsonValue`. You can…",N,N],[17,"NAN",E,"NaN value represented in `Number` type. NaN is equal to…",N,N],[11,"from_parts_unchecked",E,"Construct a new `Number` from parts. This can't create a…",6,[[["i16"],["u64"],["bool"]],["self"]]],[11,"from_parts",E,"Construct a new `Number` from parts, stripping unnecessary…",6,[[["i16"],["u64"],["bool"]],["self"]]],[11,"as_parts",E,"Reverse to `from_parts` - obtain parts from an existing…",6,[[["self"]]]],[11,"is_sign_positive",E,E,6,[[["self"]],["bool"]]],[11,"is_zero",E,E,6,[[["self"]],["bool"]]],[11,"is_nan",E,E,6,[[["self"]],["bool"]]],[11,R[166],E,"Test if the number is NaN or has a zero value.",6,[[["self"]],["bool"]]],[11,R[337],E,R[338],6,[[["u16"],["self"]],[[R[49],["u64"]],["u64"]]]],[11,R[339],E,R[340],6,[[["u16"],["self"]],[[R[49],["i64"]],["i64"]]]],[0,"iterators","json",E,N,N],[6,"Members","json::iterators","Iterator over members of `JsonValue::Array`.",N,N],[6,"MembersMut",E,"Mutable iterator over members of `JsonValue::Array`.",N,N],[6,"Entries",E,"Iterator over key value pairs of `JsonValue::Object`.",N,N],[6,"EntriesMut",E,"Mutable iterator over key value pairs of…",N,N],[6,"Result","json","Result type used by this crate.",N,N],[6,"Array",E,E,N,N],[14,"array",E,"Helper macro for creating instances of `JsonValue::Array`.",N,N],[14,"object",E,"Helper macro for creating instances of `JsonValue::Object`.",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[114],E,E,1,[[["self"]],["string"]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",R[341],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",R[342],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[50],E,E,4,[[],["i"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[50],E,E,5,[[],["i"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",R[343],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[114],E,E,6,[[["self"]],["string"]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"from","json",E,1,[[["str"]],[R[332]]]],[11,"from",E,E,1,[[[R[49]]],[R[332]]]],[11,"from",E,E,1,[[["vec"]],[R[332]]]],[11,"from",E,E,1,[[],[R[332]]]],[11,"from",E,E,1,[[["hashmap"]],[R[332]]]],[11,"from",E,E,1,[[["btreemap"]],[R[332]]]],[11,"from",E,E,1,[[["string"]],[R[332]]]],[11,"from",E,E,1,[[["isize"]],[R[332]]]],[11,"from",E,E,1,[[["usize"]],[R[332]]]],[11,"from",E,E,1,[[["i8"]],[R[332]]]],[11,"from",E,E,1,[[["i16"]],[R[332]]]],[11,"from",E,E,1,[[["i32"]],[R[332]]]],[11,"from",E,E,1,[[["i64"]],[R[332]]]],[11,"from",E,E,1,[[["u8"]],[R[332]]]],[11,"from",E,E,1,[[["u16"]],[R[332]]]],[11,"from",E,E,1,[[["u32"]],[R[332]]]],[11,"from",E,E,1,[[["u64"]],[R[332]]]],[11,"from",E,E,1,[[["f32"]],[R[332]]]],[11,"from",E,E,1,[[["f64"]],[R[332]]]],[11,"from",E,E,1,[[["number"]],[R[332]]]],[11,"from",E,E,1,[[["object"]],[R[332]]]],[11,"from",E,E,1,[[["bool"]],[R[332]]]],[11,"from",R[343],E,6,[[["f64"]],["number"]]],[11,"from",E,E,6,[[["f32"]],["number"]]],[11,"from",E,E,6,[[["isize"]],["number"]]],[11,"from",E,E,6,[[["i8"]],["number"]]],[11,"from",E,E,6,[[["i16"]],["number"]]],[11,"from",E,E,6,[[["i32"]],["number"]]],[11,"from",E,E,6,[[["i64"]],["number"]]],[11,"from",E,E,6,[[["usize"]],["number"]]],[11,"from",E,E,6,[[["u8"]],["number"]]],[11,"from",E,E,6,[[["u16"]],["number"]]],[11,"from",E,E,6,[[["u32"]],["number"]]],[11,"from",E,E,6,[[["u64"]],["number"]]],[11,"next",R[342],E,4,[[["self"]],[R[49]]]],[11,"next",E,E,5,[[["self"]],[R[49]]]],[11,R[55],E,E,4,[[["self"]],[R[49]]]],[11,R[55],E,E,5,[[["self"]],[R[49]]]],[11,"len",E,E,4,[[["self"]],["usize"]]],[11,"len",E,E,5,[[["self"]],["usize"]]],[11,"clone","json",E,1,[[["self"]],[R[332]]]],[11,"clone",R[341],E,2,[[["self"]],["short"]]],[11,"clone",R[342],E,3,[[["self"]],["self"]]],[11,"clone",R[343],E,6,[[["self"]],["number"]]],[11,"eq","json",E,1,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["string"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["isize"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,1,[[["i8"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["i32"]],["bool"]]],[11,"eq",E,E,1,[[["i64"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,1,[[["u16"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["u32"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,1,[[["f32"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["f64"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["number"],["self"]],["bool"]]],[11,"eq",R[343],E,6,[[["self"],[R[332]]],["bool"]]],[11,"eq","json",E,1,[[["self"],["object"]],["bool"]]],[11,"eq",R[342],E,3,[[["self"],[R[332]]],["bool"]]],[11,"eq","json",E,1,[[["self"],["bool"]],["bool"]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"eq",R[341],E,2,[[["short"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["string"],["self"]],["bool"]]],[11,"eq",R[342],E,3,[[["self"],["object"]],["bool"]]],[11,"eq",R[343],E,6,[[["number"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["f64"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["f32"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["isize"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["i8"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["i32"]],["bool"]]],[11,"eq",E,E,6,[[["i64"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,6,[[["u16"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["u32"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["u64"]],["bool"]]],[11,"fmt","json",E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[341],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[343],E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt","json",E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[341],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[342],E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[343],E,6,[[["self"],[R[38]]],[R[15]]]],[11,"neg",E,E,6,[[],["number"]]],[11,"deref",R[341],E,2,[[["self"]],["str"]]],[11,"index","json",E,1,[[["self"],["usize"]],[R[332]]]],[11,"index",E,E,1,[[["str"],["self"]],[R[332]]]],[11,"index",E,E,1,[[["string"],["self"]],[R[332]]]],[11,"index",E,E,1,[[["string"],["self"]],[R[332]]]],[11,"index",R[342],E,3,[[["str"],["self"]],[R[332]]]],[11,"index",E,E,3,[[["string"],["self"]],[R[332]]]],[11,"index",E,E,3,[[["string"],["self"]],[R[332]]]],[11,R[56],"json",E,1,[[["self"],["usize"]],[R[332]]]],[11,R[56],E,E,1,[[["str"],["self"]],[R[332]]]],[11,R[56],E,E,1,[[["self"],["string"]],[R[332]]]],[11,R[56],E,E,1,[[["self"],["string"]],[R[332]]]],[11,R[56],R[342],E,3,[[["str"],["self"]],[R[332]]]],[11,R[56],E,E,3,[[["self"],["string"]],[R[332]]]],[11,R[56],E,E,3,[[["self"],["string"]],[R[332]]]],[11,R[346],E,E,3,[[[R[54]]],["self"]]],[11,R[251],"json",E,0,[[["self"]],["str"]]]],"p":[[4,"Error"],[4,R[344]],[3,"Short"],[3,"Object"],[3,"Iter"],[3,R[375]],[3,"Number"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[45],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[45],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[500],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[436],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,R[738],E,E,10,N],[12,R[739],E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[437],E,E,N,N],[12,R[410],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[501],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,R[406],E,E,18,N],[12,R[407],E,E,18,N],[3,R[438],E,E,N,N],[12,R[406],E,E,19,N],[12,R[407],E,E,19,N],[12,"imr_sourceaddr",E,E,19,N],[3,R[502],E,E,N,N],[12,R[961],E,E,20,N],[12,"sa_data",E,E,20,N],[3,R[439],E,E,N,N],[12,R[962],E,E,21,N],[12,"sin_port",E,E,21,N],[12,"sin_addr",E,E,21,N],[12,"sin_zero",E,E,21,N],[3,R[440],E,E,N,N],[12,R[963],E,E,22,N],[12,R[964],E,E,22,N],[12,R[965],E,E,22,N],[12,R[966],E,E,22,N],[12,R[967],E,E,22,N],[3,R[503],E,E,N,N],[12,"ai_flags",E,E,23,N],[12,"ai_family",E,E,23,N],[12,"ai_socktype",E,E,23,N],[12,"ai_protocol",E,E,23,N],[12,"ai_addrlen",E,E,23,N],[12,"ai_addr",E,E,23,N],[12,"ai_canonname",E,E,23,N],[12,"ai_next",E,E,23,N],[3,R[441],E,E,N,N],[12,"sll_family",E,E,24,N],[12,"sll_protocol",E,E,24,N],[12,"sll_ifindex",E,E,24,N],[12,"sll_hatype",E,E,24,N],[12,"sll_pkttype",E,E,24,N],[12,"sll_halen",E,E,24,N],[12,"sll_addr",E,E,24,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,25,N],[12,"tm_min",E,E,25,N],[12,"tm_hour",E,E,25,N],[12,"tm_mday",E,E,25,N],[12,"tm_mon",E,E,25,N],[12,"tm_year",E,E,25,N],[12,"tm_wday",E,E,25,N],[12,"tm_yday",E,E,25,N],[12,"tm_isdst",E,E,25,N],[12,"tm_gmtoff",E,E,25,N],[12,"tm_zone",E,E,25,N],[3,R[442],E,E,N,N],[12,"sched_priority",E,E,26,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,27,N],[12,"dli_fbase",E,E,27,N],[12,"dli_sname",E,E,27,N],[12,"dli_saddr",E,E,27,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,28,N],[12,"thousands_sep",E,E,28,N],[12,"grouping",E,E,28,N],[12,"int_curr_symbol",E,E,28,N],[12,"currency_symbol",E,E,28,N],[12,"mon_decimal_point",E,E,28,N],[12,"mon_thousands_sep",E,E,28,N],[12,"mon_grouping",E,E,28,N],[12,"positive_sign",E,E,28,N],[12,"negative_sign",E,E,28,N],[12,"int_frac_digits",E,E,28,N],[12,"frac_digits",E,E,28,N],[12,"p_cs_precedes",E,E,28,N],[12,"p_sep_by_space",E,E,28,N],[12,"n_cs_precedes",E,E,28,N],[12,"n_sep_by_space",E,E,28,N],[12,"p_sign_posn",E,E,28,N],[12,"n_sign_posn",E,E,28,N],[12,"int_p_cs_precedes",E,E,28,N],[12,"int_p_sep_by_space",E,E,28,N],[12,"int_n_cs_precedes",E,E,28,N],[12,"int_n_sep_by_space",E,E,28,N],[12,"int_p_sign_posn",E,E,28,N],[12,"int_n_sign_posn",E,E,28,N],[3,R[443],E,E,N,N],[12,"ipi_ifindex",E,E,29,N],[12,"ipi_spec_dst",E,E,29,N],[12,"ipi_addr",E,E,29,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,30,N],[12,"ifa_name",E,E,30,N],[12,"ifa_flags",E,E,30,N],[12,"ifa_addr",E,E,30,N],[12,"ifa_netmask",E,E,30,N],[12,"ifa_ifu",E,E,30,N],[12,"ifa_data",E,E,30,N],[3,R[444],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[408],E,E,31,N],[12,R[409],E,E,31,N],[12,"arp_dev",E,E,31,N],[3,R[445],E,E,N,N],[12,"arp_pa",E,E,32,N],[12,"arp_ha",E,E,32,N],[12,R[408],E,E,32,N],[12,R[409],E,E,32,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,33,N],[12,"ar_pro",E,E,33,N],[12,"ar_hln",E,E,33,N],[12,"ar_pln",E,E,33,N],[12,"ar_op",E,E,33,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,34,N],[12,"msg_len",E,E,34,N],[3,R[446],E,E,N,N],[12,"events",E,E,35,N],[12,"u64",E,E,35,N],[3,R[447],E,E,N,N],[12,R[969],E,E,36,N],[12,"sun_path",E,E,36,N],[3,R[448],E,E,N,N],[12,R[968],E,E,37,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,38,N],[12,"nodename",E,E,38,N],[12,"release",E,E,38,N],[12,"version",E,E,38,N],[12,"machine",E,E,38,N],[12,"domainname",E,E,38,N],[3,R[504],E,E,N,N],[12,"sigev_value",E,E,39,N],[12,"sigev_signo",E,E,39,N],[12,"sigev_notify",E,E,39,N],[12,"sigev_notify_thread_id",E,E,39,N],[3,R[505],E,E,N,N],[12,"rlim_cur",E,E,40,N],[12,"rlim_max",E,E,40,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,41,N],[12,"gl_pathv",E,E,41,N],[12,"gl_offs",E,E,41,N],[12,"gl_flags",E,E,41,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,42,N],[12,"pw_passwd",E,E,42,N],[12,"pw_uid",E,E,42,N],[12,"pw_gid",E,E,42,N],[12,"pw_gecos",E,E,42,N],[12,"pw_dir",E,E,42,N],[12,"pw_shell",E,E,42,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,43,N],[12,"sp_pwdp",E,E,43,N],[12,"sp_lstchg",E,E,43,N],[12,"sp_min",E,E,43,N],[12,"sp_max",E,E,43,N],[12,"sp_warn",E,E,43,N],[12,"sp_inact",E,E,43,N],[12,"sp_expire",E,E,43,N],[12,"sp_flag",E,E,43,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,44,N],[12,"dqb_bsoftlimit",E,E,44,N],[12,"dqb_curspace",E,E,44,N],[12,"dqb_ihardlimit",E,E,44,N],[12,"dqb_isoftlimit",E,E,44,N],[12,"dqb_curinodes",E,E,44,N],[12,"dqb_btime",E,E,44,N],[12,"dqb_itime",E,E,44,N],[12,"dqb_valid",E,E,44,N],[3,R[449],E,E,N,N],[12,R[939],E,E,45,N],[12,R[940],E,E,45,N],[12,"ssi_code",E,E,45,N],[12,"ssi_pid",E,E,45,N],[12,"ssi_uid",E,E,45,N],[12,"ssi_fd",E,E,45,N],[12,"ssi_tid",E,E,45,N],[12,"ssi_band",E,E,45,N],[12,R[941],E,E,45,N],[12,R[942],E,E,45,N],[12,R[943],E,E,45,N],[12,"ssi_int",E,E,45,N],[12,"ssi_ptr",E,E,45,N],[12,R[944],E,E,45,N],[12,R[945],E,E,45,N],[12,"ssi_addr",E,E,45,N],[12,R[946],E,E,45,N],[12,R[947],E,E,45,N],[12,R[948],E,E,45,N],[12,"ssi_arch",E,E,45,N],[3,R[450],E,E,N,N],[12,R[410],E,E,46,N],[12,"it_value",E,E,46,N],[3,"fsid_t",E,E,N,N],[3,R[451],E,E,N,N],[12,"mr_ifindex",E,E,47,N],[12,"mr_type",E,E,47,N],[12,"mr_alen",E,E,47,N],[12,"mr_address",E,E,47,N],[3,R[432],E,E,N,N],[3,R[435],E,E,N,N],[12,"if_index",E,E,48,N],[12,"if_name",E,E,48,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,49,N],[12,"msgmap",E,E,49,N],[12,"msgmax",E,E,49,N],[12,"msgmnb",E,E,49,N],[12,"msgmni",E,E,49,N],[12,"msgssz",E,E,49,N],[12,"msgtql",E,E,49,N],[12,"msgseg",E,E,49,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,50,N],[12,"sem_op",E,E,50,N],[12,"sem_flg",E,E,50,N],[3,R[452],E,E,N,N],[12,"time",E,E,51,N],[12,"type_",E,E,51,N],[12,"code",E,E,51,N],[12,"value",E,E,51,N],[3,R[506],E,E,N,N],[12,"bustype",E,E,52,N],[12,"vendor",E,E,52,N],[12,"product",E,E,52,N],[12,"version",E,E,52,N],[3,R[453],E,E,N,N],[12,"value",E,E,53,N],[12,"minimum",E,E,53,N],[12,"maximum",E,E,53,N],[12,"fuzz",E,E,53,N],[12,"flat",E,E,53,N],[12,"resolution",E,E,53,N],[3,R[454],E,E,N,N],[12,"flags",E,E,54,N],[12,"len",E,E,54,N],[12,"index",E,E,54,N],[12,"keycode",E,E,54,N],[12,"scancode",E,E,54,N],[3,R[455],E,E,N,N],[12,"type_",E,E,55,N],[12,"codes_size",E,E,55,N],[12,"codes_ptr",E,E,55,N],[3,R[456],E,E,N,N],[12,"length",E,E,56,N],[12,"delay",E,E,56,N],[3,R[457],E,E,N,N],[12,"button",E,E,57,N],[12,"interval",E,E,57,N],[3,R[458],E,E,N,N],[12,"attack_length",E,E,58,N],[12,"attack_level",E,E,58,N],[12,"fade_length",E,E,58,N],[12,"fade_level",E,E,58,N],[3,R[459],E,E,N,N],[12,"level",E,E,59,N],[12,R[411],E,E,59,N],[3,R[460],E,E,N,N],[12,"start_level",E,E,60,N],[12,"end_level",E,E,60,N],[12,R[411],E,E,60,N],[3,R[461],E,E,N,N],[12,"right_saturation",E,E,61,N],[12,"left_saturation",E,E,61,N],[12,"right_coeff",E,E,61,N],[12,"left_coeff",E,E,61,N],[12,"deadband",E,E,61,N],[12,"center",E,E,61,N],[3,R[462],E,E,N,N],[12,"waveform",E,E,62,N],[12,"period",E,E,62,N],[12,"magnitude",E,E,62,N],[12,"offset",E,E,62,N],[12,"phase",E,E,62,N],[12,R[411],E,E,62,N],[12,"custom_len",E,E,62,N],[12,"custom_data",E,E,62,N],[3,R[463],E,E,N,N],[12,"strong_magnitude",E,E,63,N],[12,"weak_magnitude",E,E,63,N],[3,R[464],E,E,N,N],[12,"type_",E,E,64,N],[12,"id",E,E,64,N],[12,R[1432],E,E,64,N],[12,"trigger",E,E,64,N],[12,"replay",E,E,64,N],[12,U,E,E,64,N],[3,R[465],E,E,N,N],[12,"dlpi_addr",E,E,65,N],[12,"dlpi_name",E,E,65,N],[12,"dlpi_phdr",E,E,65,N],[12,"dlpi_phnum",E,E,65,N],[12,"dlpi_adds",E,E,65,N],[12,"dlpi_subs",E,E,65,N],[12,"dlpi_tls_modid",E,E,65,N],[12,"dlpi_tls_data",E,E,65,N],[3,R[507],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[412],E,E,66,N],[12,R[413],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[414],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[415],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[416],E,E,66,N],[3,R[508],E,E,N,N],[12,"e_ident",E,E,67,N],[12,"e_type",E,E,67,N],[12,R[412],E,E,67,N],[12,R[413],E,E,67,N],[12,"e_entry",E,E,67,N],[12,"e_phoff",E,E,67,N],[12,"e_shoff",E,E,67,N],[12,"e_flags",E,E,67,N],[12,"e_ehsize",E,E,67,N],[12,R[414],E,E,67,N],[12,"e_phnum",E,E,67,N],[12,R[415],E,E,67,N],[12,"e_shnum",E,E,67,N],[12,R[416],E,E,67,N],[3,R[509],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[3,R[510],E,E,N,N],[12,"st_name",E,E,69,N],[12,"st_info",E,E,69,N],[12,"st_other",E,E,69,N],[12,"st_shndx",E,E,69,N],[12,"st_value",E,E,69,N],[12,"st_size",E,E,69,N],[3,R[511],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[512],E,E,N,N],[12,"p_type",E,E,71,N],[12,"p_flags",E,E,71,N],[12,"p_offset",E,E,71,N],[12,"p_vaddr",E,E,71,N],[12,"p_paddr",E,E,71,N],[12,"p_filesz",E,E,71,N],[12,"p_memsz",E,E,71,N],[12,"p_align",E,E,71,N],[3,R[513],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[417],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[418],E,E,72,N],[12,R[419],E,E,72,N],[3,R[514],E,E,N,N],[12,"sh_name",E,E,73,N],[12,"sh_type",E,E,73,N],[12,"sh_flags",E,E,73,N],[12,"sh_addr",E,E,73,N],[12,R[417],E,E,73,N],[12,"sh_size",E,E,73,N],[12,"sh_link",E,E,73,N],[12,"sh_info",E,E,73,N],[12,R[418],E,E,73,N],[12,R[419],E,E,73,N],[3,R[515],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[420],E,E,74,N],[3,R[516],E,E,N,N],[12,"ch_type",E,E,75,N],[12,"ch_reserved",E,E,75,N],[12,"ch_size",E,E,75,N],[12,R[420],E,E,75,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,76,N],[12,"uid",E,E,76,N],[12,"gid",E,E,76,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,77,N],[12,"mnt_dir",E,E,77,N],[12,"mnt_type",E,E,77,N],[12,"mnt_opts",E,E,77,N],[12,"mnt_freq",E,E,77,N],[12,"mnt_passno",E,E,77,N],[3,R[466],E,E,N,N],[3,R[467],E,E,N,N],[3,R[468],E,E,N,N],[12,"cmd",E,E,78,N],[12,"version",E,E,78,N],[12,"reserved",E,E,78,N],[3,R[469],E,E,N,N],[12,"ipi6_addr",E,E,79,N],[12,"ipi6_ifindex",E,E,79,N],[3,R[470],E,E,N,N],[12,"req",E,E,80,N],[12,"ip",E,E,80,N],[12,"dev",E,E,80,N],[12,"stamp",E,E,80,N],[12,"updated",E,E,80,N],[12,"ha",E,E,80,N],[3,R[471],E,E,N,N],[12,"wd",E,E,81,N],[12,"mask",E,E,81,N],[12,"cookie",E,E,81,N],[12,"len",E,E,81,N],[3,R[472],E,E,N,N],[12,"svm_family",E,E,82,N],[12,"svm_reserved1",E,E,82,N],[12,"svm_port",E,E,82,N],[12,"svm_cid",E,E,82,N],[12,"svm_zero",E,E,82,N],[3,R[473],E,E,N,N],[12,"nl_family",E,E,83,N],[12,"nl_pid",E,E,83,N],[12,"nl_groups",E,E,83,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,84,N],[12,"d_off",E,E,84,N],[12,"d_reclen",E,E,84,N],[12,"d_type",E,E,84,N],[12,"d_name",E,E,84,N],[3,R[517],E,E,N,N],[12,"d_ino",E,E,85,N],[12,"d_off",E,E,85,N],[12,"d_reclen",E,E,85,N],[12,"d_type",E,E,85,N],[12,"d_name",E,E,85,N],[3,R[474],E,E,N,N],[12,"salg_family",E,E,86,N],[12,"salg_type",E,E,86,N],[12,"salg_feat",E,E,86,N],[12,"salg_mask",E,E,86,N],[12,"salg_name",E,E,86,N],[3,R[475],E,E,N,N],[12,"ivlen",E,E,87,N],[12,"iv",E,E,87,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,88,N],[12,"mq_maxmsg",E,E,88,N],[12,"mq_msgsize",E,E,88,N],[12,"mq_curmsgs",E,E,88,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,89,N],[12,"stx_blksize",E,E,89,N],[12,"stx_attributes",E,E,89,N],[12,"stx_nlink",E,E,89,N],[12,"stx_uid",E,E,89,N],[12,"stx_gid",E,E,89,N],[12,"stx_mode",E,E,89,N],[12,"__statx_pad1",E,E,89,N],[12,"stx_ino",E,E,89,N],[12,"stx_size",E,E,89,N],[12,"stx_blocks",E,E,89,N],[12,"stx_attributes_mask",E,E,89,N],[12,"stx_atime",E,E,89,N],[12,"stx_btime",E,E,89,N],[12,"stx_ctime",E,E,89,N],[12,"stx_mtime",E,E,89,N],[12,"stx_rdev_major",E,E,89,N],[12,"stx_rdev_minor",E,E,89,N],[12,"stx_dev_major",E,E,89,N],[12,"stx_dev_minor",E,E,89,N],[12,"__statx_pad2",E,E,89,N],[3,R[476],E,E,N,N],[12,"tv_sec",E,E,90,N],[12,"tv_nsec",E,E,90,N],[12,"__statx_timestamp_pad1",E,E,90,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,91,N],[12,"aio_lio_opcode",E,E,91,N],[12,"aio_reqprio",E,E,91,N],[12,"aio_buf",E,E,91,N],[12,"aio_nbytes",E,E,91,N],[12,"aio_sigevent",E,E,91,N],[12,"aio_offset",E,E,91,N],[3,R[477],E,E,N,N],[12,"e_termination",E,E,92,N],[12,"e_exit",E,E,92,N],[3,R[478],E,E,N,N],[12,"tv_sec",E,E,93,N],[12,"tv_usec",E,E,93,N],[3,R[518],E,E,N,N],[12,"gl_pathc",E,E,94,N],[12,"gl_pathv",E,E,94,N],[12,"gl_offs",E,E,94,N],[12,"gl_flags",E,E,94,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,95,N],[12,R[955],E,E,95,N],[12,"msg_iov",E,E,95,N],[12,R[956],E,E,95,N],[12,R[957],E,E,95,N],[12,R[958],E,E,95,N],[12,R[959],E,E,95,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,96,N],[12,R[953],E,E,96,N],[12,R[954],E,E,96,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,97,N],[12,"c_oflag",E,E,97,N],[12,"c_cflag",E,E,97,N],[12,"c_lflag",E,E,97,N],[12,"c_line",E,E,97,N],[12,"c_cc",E,E,97,N],[12,"c_ispeed",E,E,97,N],[12,"c_ospeed",E,E,97,N],[3,R[479],E,E,N,N],[12,"arena",E,E,98,N],[12,"ordblks",E,E,98,N],[12,"smblks",E,E,98,N],[12,"hblks",E,E,98,N],[12,"hblkhd",E,E,98,N],[12,"usmblks",E,E,98,N],[12,"fsmblks",E,E,98,N],[12,"uordblks",E,E,98,N],[12,"fordblks",E,E,98,N],[12,"keepcost",E,E,98,N],[3,R[519],E,E,N,N],[12,"nlmsg_len",E,E,99,N],[12,"nlmsg_type",E,E,99,N],[12,"nlmsg_flags",E,E,99,N],[12,"nlmsg_seq",E,E,99,N],[12,"nlmsg_pid",E,E,99,N],[3,R[520],E,E,N,N],[12,"error",E,E,100,N],[12,"msg",E,E,100,N],[3,R[480],E,E,N,N],[12,"group",E,E,101,N],[3,R[481],E,E,N,N],[12,"nm_block_size",E,E,102,N],[12,"nm_block_nr",E,E,102,N],[12,"nm_frame_size",E,E,102,N],[12,"nm_frame_nr",E,E,102,N],[3,R[482],E,E,N,N],[12,"nm_status",E,E,103,N],[12,"nm_len",E,E,103,N],[12,"nm_group",E,E,103,N],[12,"nm_pid",E,E,103,N],[12,"nm_uid",E,E,103,N],[12,"nm_gid",E,E,103,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,104,N],[12,"nla_type",E,E,104,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,105,N],[12,"rt_dst",E,E,105,N],[12,"rt_gateway",E,E,105,N],[12,"rt_genmask",E,E,105,N],[12,"rt_flags",E,E,105,N],[12,"rt_pad2",E,E,105,N],[12,"rt_pad3",E,E,105,N],[12,"rt_tos",E,E,105,N],[12,"rt_class",E,E,105,N],[12,"rt_pad4",E,E,105,N],[12,"rt_metric",E,E,105,N],[12,"rt_dev",E,E,105,N],[12,"rt_mtu",E,E,105,N],[12,"rt_window",E,E,105,N],[12,"rt_irtt",E,E,105,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,106,N],[12,"ut_pid",E,E,106,N],[12,"ut_line",E,E,106,N],[12,"ut_id",E,E,106,N],[12,"ut_user",E,E,106,N],[12,"ut_host",E,E,106,N],[12,"ut_exit",E,E,106,N],[12,"ut_session",E,E,106,N],[12,"ut_tv",E,E,106,N],[12,"ut_addr_v6",E,E,106,N],[3,R[527],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,107,N],[12,"loads",E,E,107,N],[12,"totalram",E,E,107,N],[12,"freeram",E,E,107,N],[12,"sharedram",E,E,107,N],[12,"bufferram",E,E,107,N],[12,"totalswap",E,E,107,N],[12,"freeswap",E,E,107,N],[12,"procs",E,E,107,N],[12,"pad",E,E,107,N],[12,"totalhigh",E,E,107,N],[12,"freehigh",E,E,107,N],[12,"mem_unit",E,E,107,N],[12,"_f",E,E,107,N],[3,R[521],E,E,N,N],[12,"msg_perm",E,E,108,N],[12,"msg_stime",E,E,108,N],[12,"msg_rtime",E,E,108,N],[12,"msg_ctime",E,E,108,N],[12,"msg_qnum",E,E,108,N],[12,"msg_qbytes",E,E,108,N],[12,"msg_lspid",E,E,108,N],[12,"msg_lrpid",E,E,108,N],[3,R[433],E,E,N,N],[12,"sa_sigaction",E,E,109,N],[12,"sa_mask",E,E,109,N],[12,"sa_flags",E,E,109,N],[12,"sa_restorer",E,E,109,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,110,N],[12,"f_bsize",E,E,110,N],[12,R[428],E,E,110,N],[12,"f_bfree",E,E,110,N],[12,R[429],E,E,110,N],[12,"f_files",E,E,110,N],[12,"f_ffree",E,E,110,N],[12,"f_fsid",E,E,110,N],[12,R[426],E,E,110,N],[12,R[427],E,E,110,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,111,N],[12,"l_whence",E,E,111,N],[12,"l_start",E,E,111,N],[12,"l_len",E,E,111,N],[12,"l_pid",E,E,111,N],[3,"flock64",E,E,N,N],[12,"l_type",E,E,112,N],[12,"l_whence",E,E,112,N],[12,"l_start",E,E,112,N],[12,"l_len",E,E,112,N],[12,"l_pid",E,E,112,N],[3,R[483],E,E,N,N],[12,"si_signo",E,E,113,N],[12,"si_errno",E,E,113,N],[12,"si_code",E,E,113,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,114,N],[12,"ss_flags",E,E,114,N],[12,"ss_size",E,E,114,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,115,N],[12,"st_ino",E,E,115,N],[12,"st_nlink",E,E,115,N],[12,"st_mode",E,E,115,N],[12,"st_uid",E,E,115,N],[12,"st_gid",E,E,115,N],[12,"st_rdev",E,E,115,N],[12,"st_size",E,E,115,N],[12,R[421],E,E,115,N],[12,R[422],E,E,115,N],[12,"st_atime",E,E,115,N],[12,R[423],E,E,115,N],[12,"st_mtime",E,E,115,N],[12,R[424],E,E,115,N],[12,"st_ctime",E,E,115,N],[12,R[425],E,E,115,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,116,N],[12,"st_ino",E,E,116,N],[12,"st_nlink",E,E,116,N],[12,"st_mode",E,E,116,N],[12,"st_uid",E,E,116,N],[12,"st_gid",E,E,116,N],[12,"st_rdev",E,E,116,N],[12,"st_size",E,E,116,N],[12,R[421],E,E,116,N],[12,R[422],E,E,116,N],[12,"st_atime",E,E,116,N],[12,R[423],E,E,116,N],[12,"st_mtime",E,E,116,N],[12,R[424],E,E,116,N],[12,"st_ctime",E,E,116,N],[12,R[425],E,E,116,N],[3,R[484],E,E,N,N],[12,"f_type",E,E,117,N],[12,"f_bsize",E,E,117,N],[12,R[428],E,E,117,N],[12,"f_bfree",E,E,117,N],[12,R[429],E,E,117,N],[12,"f_files",E,E,117,N],[12,"f_ffree",E,E,117,N],[12,"f_fsid",E,E,117,N],[12,R[426],E,E,117,N],[12,R[427],E,E,117,N],[12,"f_flags",E,E,117,N],[12,"f_spare",E,E,117,N],[3,R[434],E,E,N,N],[12,"f_bsize",E,E,118,N],[12,R[427],E,E,118,N],[12,R[428],E,E,118,N],[12,"f_bfree",E,E,118,N],[12,R[429],E,E,118,N],[12,"f_files",E,E,118,N],[12,"f_ffree",E,E,118,N],[12,"f_favail",E,E,118,N],[12,"f_fsid",E,E,118,N],[12,"f_flag",E,E,118,N],[12,R[431],E,E,118,N],[3,R[485],E,E,N,N],[3,R[486],E,E,N,N],[12,"significand",E,E,119,N],[12,"exponent",E,E,119,N],[3,R[487],E,E,N,N],[12,"element",E,E,120,N],[3,R[488],E,E,N,N],[12,"cwd",E,E,121,N],[12,"swd",E,E,121,N],[12,"ftw",E,E,121,N],[12,"fop",E,E,121,N],[12,"rip",E,E,121,N],[12,"rdp",E,E,121,N],[12,"mxcsr",E,E,121,N],[12,R[430],E,E,121,N],[12,"_st",E,E,121,N],[12,"_xmm",E,E,121,N],[3,R[489],E,E,N,N],[12,"r15",E,E,122,N],[12,"r14",E,E,122,N],[12,"r13",E,E,122,N],[12,"r12",E,E,122,N],[12,"rbp",E,E,122,N],[12,"rbx",E,E,122,N],[12,"r11",E,E,122,N],[12,"r10",E,E,122,N],[12,"r9",E,E,122,N],[12,"r8",E,E,122,N],[12,"rax",E,E,122,N],[12,"rcx",E,E,122,N],[12,"rdx",E,E,122,N],[12,"rsi",E,E,122,N],[12,"rdi",E,E,122,N],[12,"orig_rax",E,E,122,N],[12,"rip",E,E,122,N],[12,"cs",E,E,122,N],[12,"eflags",E,E,122,N],[12,"rsp",E,E,122,N],[12,"ss",E,E,122,N],[12,"fs_base",E,E,122,N],[12,"gs_base",E,E,122,N],[12,"ds",E,E,122,N],[12,"es",E,E,122,N],[12,"fs",E,E,122,N],[12,"gs",E,E,122,N],[3,"user",E,E,N,N],[12,"regs",E,E,123,N],[12,"u_fpvalid",E,E,123,N],[12,"i387",E,E,123,N],[12,"u_tsize",E,E,123,N],[12,"u_dsize",E,E,123,N],[12,"u_ssize",E,E,123,N],[12,"start_code",E,E,123,N],[12,"start_stack",E,E,123,N],[12,"signal",E,E,123,N],[12,"u_ar0",E,E,123,N],[12,"u_fpstate",E,E,123,N],[12,"magic",E,E,123,N],[12,"u_comm",E,E,123,N],[12,"u_debugreg",E,E,123,N],[3,R[490],E,E,N,N],[12,"gregs",E,E,124,N],[12,"fpregs",E,E,124,N],[3,R[522],E,E,N,N],[12,"__key",E,E,125,N],[12,"uid",E,E,125,N],[12,"gid",E,E,125,N],[12,"cuid",E,E,125,N],[12,"cgid",E,E,125,N],[12,"mode",E,E,125,N],[12,"__seq",E,E,125,N],[3,R[523],E,E,N,N],[12,"shm_perm",E,E,126,N],[12,"shm_segsz",E,E,126,N],[12,"shm_atime",E,E,126,N],[12,"shm_dtime",E,E,126,N],[12,"shm_ctime",E,E,126,N],[12,"shm_cpid",E,E,126,N],[12,"shm_lpid",E,E,126,N],[12,"shm_nattch",E,E,126,N],[3,R[524],E,E,N,N],[12,"c_iflag",E,E,127,N],[12,"c_oflag",E,E,127,N],[12,"c_cflag",E,E,127,N],[12,"c_lflag",E,E,127,N],[12,"c_line",E,E,127,N],[12,"c_cc",E,E,127,N],[12,"c_ispeed",E,E,127,N],[12,"c_ospeed",E,E,127,N],[3,R[525],E,E,N,N],[12,R[406],E,E,128,N],[12,"imr_address",E,E,128,N],[12,"imr_ifindex",E,E,128,N],[3,R[491],E,E,N,N],[12,"cwd",E,E,129,N],[12,"swd",E,E,129,N],[12,"ftw",E,E,129,N],[12,"fop",E,E,129,N],[12,"rip",E,E,129,N],[12,"rdp",E,E,129,N],[12,"mxcsr",E,E,129,N],[12,R[430],E,E,129,N],[12,"st_space",E,E,129,N],[12,"xmm_space",E,E,129,N],[3,R[492],E,E,N,N],[12,"uc_flags",E,E,130,N],[12,"uc_link",E,E,130,N],[12,"uc_stack",E,E,130,N],[12,"uc_mcontext",E,E,130,N],[12,"uc_sigmask",E,E,130,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,131,N],[12,R[427],E,E,131,N],[12,R[428],E,E,131,N],[12,"f_bfree",E,E,131,N],[12,R[429],E,E,131,N],[12,"f_files",E,E,131,N],[12,"f_ffree",E,E,131,N],[12,"f_favail",E,E,131,N],[12,"f_fsid",E,E,131,N],[12,"f_flag",E,E,131,N],[12,R[431],E,E,131,N],[3,R[493],E,E,N,N],[3,"sem_t",E,E,N,N],[3,R[494],E,E,N,N],[3,R[495],E,E,N,N],[3,R[496],E,E,N,N],[3,R[497],E,E,N,N],[3,R[498],E,E,N,N],[3,R[499],E,E,N,N],[3,R[526],E,E,N,N],[12,"s6_addr",E,E,132,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[528],E,E,N,N],[4,R[529],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[432]]]]],[5,"CPU_SET",E,E,N,[[["usize"],[R[432]]]]],[5,"CPU_CLR",E,E,N,[[["usize"],[R[432]]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[432]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[432]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"isblank",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,R[983],E,E,N,N],[5,R[984],E,E,N,N],[5,R[982],E,E,N,N],[5,R[975],E,E,N,N],[5,"sendto",E,E,N,N],[5,R[985],E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,R[819],E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,R[713],E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,R[848],E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,R[748],E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,R[981],E,E,N,N],[5,"raise",E,E,N,N],[5,R[433],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,R[1054],E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,R[928],E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,R[1015],E,E,N,N],[5,R[1016],E,E,N,N],[5,R[1017],E,E,N,N],[5,R[1018],E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,R[1019],E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,R[741],E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,"truncate",E,E,N,N],[5,"pause",E,E,N,N],[5,R[621],E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[484],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[434],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,R[743],E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,R[672],E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,R[778],E,E,N,N],[5,R[773],E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,R[623],E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,R[949],E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,R[706],E,E,N,N],[5,R[707],E,E,N,N],[5,"mq_timedreceive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_timedsend",E,E,N,N],[5,R[708],E,E,N,N],[5,R[709],E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,R[1027],E,E,N,N],[5,R[1026],E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[435],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,R[821],E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,R[747],E,E,N,N],[5,R[779],E,E,N,N],[5,R[780],E,E,N,N],[5,R[782],E,E,N,N],[5,R[781],E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,R[1053],E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,R[915],E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,R[927],E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,R[1056],E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpname",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,R[573],E,E,N,N],[5,"ioctl",E,E,N,N],[5,R[1361],E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[479],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"pthread_getname_np",E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,113,[[["self"]]]],[11,R[925],E,E,113,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,R[960],E,E,N,N],[6,"speed_t",E,E,N,N],[6,R[1022],E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,R[1012],E,E,N,N],[6,R[1013],E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,R[1025],E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,R[660],E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,R[616],E,E,N,N],[17,R[620],E,E,N,N],[17,R[619],E,E,N,N],[17,R[617],E,E,N,N],[17,R[618],E,E,N,N],[17,R[655],E,E,N,N],[17,R[656],E,E,N,N],[17,R[657],E,E,N,N],[17,R[658],E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,R[710],E,E,N,N],[17,R[711],E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,R[997],E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,R[822],E,E,N,N],[17,R[823],E,E,N,N],[17,R[824],E,E,N,N],[17,R[825],E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,R[828],E,E,N,N],[17,R[829],E,E,N,N],[17,R[830],E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,R[844],E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,R[678],E,E,N,N],[17,R[679],E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,R[680],E,E,N,N],[17,R[681],E,E,N,N],[17,R[682],E,E,N,N],[17,R[683],E,E,N,N],[17,R[684],E,E,N,N],[17,R[685],E,E,N,N],[17,R[686],E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,R[687],E,E,N,N],[17,R[688],E,E,N,N],[17,R[689],E,E,N,N],[17,R[690],E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,R[691],E,E,N,N],[17,R[692],E,E,N,N],[17,R[693],E,E,N,N],[17,R[694],E,E,N,N],[17,R[695],E,E,N,N],[17,R[696],E,E,N,N],[17,R[699],E,E,N,N],[17,R[700],E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,R[612],E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,R[826],E,E,N,N],[17,R[827],E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,R[802],E,E,N,N],[17,R[803],E,E,N,N],[17,R[804],E,E,N,N],[17,R[805],E,E,N,N],[17,R[806],E,E,N,N],[17,R[818],E,E,N,N],[17,R[807],E,E,N,N],[17,R[808],E,E,N,N],[17,R[809],E,E,N,N],[17,R[811],E,E,N,N],[17,R[812],E,E,N,N],[17,R[814],E,E,N,N],[17,R[815],E,E,N,N],[17,R[816],E,E,N,N],[17,R[817],E,E,N,N],[17,R[810],E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,R[714],E,E,N,N],[17,R[715],E,E,N,N],[17,R[716],E,E,N,N],[17,R[717],E,E,N,N],[17,R[718],E,E,N,N],[17,R[719],E,E,N,N],[17,R[720],E,E,N,N],[17,R[721],E,E,N,N],[17,R[722],E,E,N,N],[17,R[723],E,E,N,N],[17,R[724],E,E,N,N],[17,R[725],E,E,N,N],[17,R[726],E,E,N,N],[17,R[727],E,E,N,N],[17,R[728],E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,R[999],E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,R[998],E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,R[1000],E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,R[1001],E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_RECVERR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_ADD_SOURCE_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_SOURCE_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_ADDRFORM",E,E,N,N],[17,"IPV6_2292PKTINFO",E,E,N,N],[17,"IPV6_2292HOPOPTS",E,E,N,N],[17,"IPV6_2292DSTOPTS",E,E,N,N],[17,"IPV6_2292RTHDR",E,E,N,N],[17,"IPV6_2292PKTOPTIONS",E,E,N,N],[17,"IPV6_CHECKSUM",E,E,N,N],[17,"IPV6_2292HOPLIMIT",E,E,N,N],[17,"IPV6_NEXTHOP",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_ROUTER_ALERT",E,E,N,N],[17,"IPV6_MTU_DISCOVER",E,E,N,N],[17,"IPV6_MTU",E,E,N,N],[17,"IPV6_RECVERR",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_JOIN_ANYCAST",E,E,N,N],[17,"IPV6_LEAVE_ANYCAST",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,R[914],E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,R[783],E,E,N,N],[17,R[784],E,E,N,N],[17,R[785],E,E,N,N],[17,R[786],E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,R[703],E,E,N,N],[17,R[704],E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,R[900],E,E,N,N],[17,R[901],E,E,N,N],[17,R[902],E,E,N,N],[17,R[903],E,E,N,N],[17,R[904],E,E,N,N],[17,R[905],E,E,N,N],[17,R[906],E,E,N,N],[17,R[907],E,E,N,N],[17,R[908],E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,R[702],E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,R[750],E,E,N,N],[17,R[751],E,E,N,N],[17,R[752],E,E,N,N],[17,R[753],E,E,N,N],[17,R[754],E,E,N,N],[17,R[755],E,E,N,N],[17,R[756],E,E,N,N],[17,R[757],E,E,N,N],[17,R[758],E,E,N,N],[17,R[759],E,E,N,N],[17,R[760],E,E,N,N],[17,R[761],E,E,N,N],[17,R[762],E,E,N,N],[17,R[763],E,E,N,N],[17,R[765],E,E,N,N],[17,R[766],E,E,N,N],[17,R[767],E,E,N,N],[17,R[768],E,E,N,N],[17,R[769],E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,R[764],E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,R[886],E,E,N,N],[17,R[887],E,E,N,N],[17,R[888],E,E,N,N],[17,R[889],E,E,N,N],[17,R[890],E,E,N,N],[17,R[891],E,E,N,N],[17,R[892],E,E,N,N],[17,R[893],E,E,N,N],[17,R[894],E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,R[878],E,E,N,N],[17,R[879],E,E,N,N],[17,R[880],E,E,N,N],[17,R[881],E,E,N,N],[17,R[882],E,E,N,N],[17,R[883],E,E,N,N],[17,R[884],E,E,N,N],[17,R[1031],E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,R[661],E,E,N,N],[17,R[662],E,E,N,N],[17,R[663],E,E,N,N],[17,R[664],E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,R[624],E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,R[625],E,E,N,N],[17,R[626],E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,R[734],E,E,N,N],[17,R[736],E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,R[697],E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,R[729],E,E,N,N],[17,R[730],E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFLA_COST",E,E,N,N],[17,"IFLA_PRIORITY",E,E,N,N],[17,"IFLA_MASTER",E,E,N,N],[17,"IFLA_WIRELESS",E,E,N,N],[17,"IFLA_PROTINFO",E,E,N,N],[17,"IFLA_TXQLEN",E,E,N,N],[17,"IFLA_MAP",E,E,N,N],[17,"IFLA_WEIGHT",E,E,N,N],[17,"IFLA_OPERSTATE",E,E,N,N],[17,"IFLA_LINKMODE",E,E,N,N],[17,"IFLA_LINKINFO",E,E,N,N],[17,"IFLA_NET_NS_PID",E,E,N,N],[17,"IFLA_IFALIAS",E,E,N,N],[17,"IFLA_NUM_VF",E,E,N,N],[17,"IFLA_VFINFO_LIST",E,E,N,N],[17,"IFLA_STATS64",E,E,N,N],[17,"IFLA_VF_PORTS",E,E,N,N],[17,"IFLA_PORT_SELF",E,E,N,N],[17,"IFLA_AF_SPEC",E,E,N,N],[17,"IFLA_GROUP",E,E,N,N],[17,"IFLA_NET_NS_FD",E,E,N,N],[17,"IFLA_EXT_MASK",E,E,N,N],[17,"IFLA_PROMISCUITY",E,E,N,N],[17,"IFLA_NUM_TX_QUEUES",E,E,N,N],[17,"IFLA_NUM_RX_QUEUES",E,E,N,N],[17,"IFLA_CARRIER",E,E,N,N],[17,"IFLA_PHYS_PORT_ID",E,E,N,N],[17,"IFLA_CARRIER_CHANGES",E,E,N,N],[17,"IFLA_PHYS_SWITCH_ID",E,E,N,N],[17,"IFLA_LINK_NETNSID",E,E,N,N],[17,"IFLA_PHYS_PORT_NAME",E,E,N,N],[17,"IFLA_PROTO_DOWN",E,E,N,N],[17,"IFLA_INFO_UNSPEC",E,E,N,N],[17,"IFLA_INFO_KIND",E,E,N,N],[17,"IFLA_INFO_DATA",E,E,N,N],[17,"IFLA_INFO_XSTATS",E,E,N,N],[17,"IFLA_INFO_SLAVE_KIND",E,E,N,N],[17,"IFLA_INFO_SLAVE_DATA",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,R[731],E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,R[1006],E,E,N,N],[17,R[1007],E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,R[1008],E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,R[1009],E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"SCHED_RESET_ON_FORK",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,R[787],E,E,N,N],[17,R[788],E,E,N,N],[17,R[790],E,E,N,N],[17,R[896],E,E,N,N],[17,R[897],E,E,N,N],[17,R[898],E,E,N,N],[17,R[797],E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,R[912],E,E,N,N],[17,R[910],E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,R[911],E,E,N,N],[17,R[913],E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,R[770],E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,R[771],E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,R[1014],E,E,N,N],[17,R[665],E,E,N,N],[17,R[666],E,E,N,N],[17,R[667],E,E,N,N],[17,R[668],E,E,N,N],[17,R[669],E,E,N,N],[17,R[670],E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,R[799],E,E,N,N],[17,R[800],E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"NFNLGRP_NONE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_NEW",E,E,N,N],[17,"NFNLGRP_CONNTRACK_UPDATE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_DESTROY",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_NEW",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY",E,E,N,N],[17,"NFNLGRP_NFTABLES",E,E,N,N],[17,"NFNLGRP_ACCT_QUOTA",E,E,N,N],[17,"NFNETLINK_V0",E,E,N,N],[17,"NFNL_SUBSYS_NONE",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK_EXP",E,E,N,N],[17,"NFNL_SUBSYS_QUEUE",E,E,N,N],[17,"NFNL_SUBSYS_ULOG",E,E,N,N],[17,"NFNL_SUBSYS_OSF",E,E,N,N],[17,"NFNL_SUBSYS_IPSET",E,E,N,N],[17,"NFNL_SUBSYS_ACCT",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT",E,E,N,N],[17,"NFNL_SUBSYS_CTHELPER",E,E,N,N],[17,"NFNL_SUBSYS_NFTABLES",E,E,N,N],[17,"NFNL_SUBSYS_NFT_COMPAT",E,E,N,N],[17,"NFNL_SUBSYS_COUNT",E,E,N,N],[17,"NFNL_MSG_BATCH_BEGIN",E,E,N,N],[17,"NFNL_MSG_BATCH_END",E,E,N,N],[17,"NFULNL_MSG_PACKET",E,E,N,N],[17,"NFULNL_MSG_CONFIG",E,E,N,N],[17,"NFULA_UNSPEC",E,E,N,N],[17,"NFULA_PACKET_HDR",E,E,N,N],[17,"NFULA_MARK",E,E,N,N],[17,"NFULA_TIMESTAMP",E,E,N,N],[17,"NFULA_IFINDEX_INDEV",E,E,N,N],[17,"NFULA_IFINDEX_OUTDEV",E,E,N,N],[17,"NFULA_IFINDEX_PHYSINDEV",E,E,N,N],[17,"NFULA_IFINDEX_PHYSOUTDEV",E,E,N,N],[17,"NFULA_HWADDR",E,E,N,N],[17,"NFULA_PAYLOAD",E,E,N,N],[17,"NFULA_PREFIX",E,E,N,N],[17,"NFULA_UID",E,E,N,N],[17,"NFULA_SEQ",E,E,N,N],[17,"NFULA_SEQ_GLOBAL",E,E,N,N],[17,"NFULA_GID",E,E,N,N],[17,"NFULA_HWTYPE",E,E,N,N],[17,"NFULA_HWHEADER",E,E,N,N],[17,"NFULA_HWLEN",E,E,N,N],[17,"NFULA_CT",E,E,N,N],[17,"NFULA_CT_INFO",E,E,N,N],[17,"NFULNL_CFG_CMD_NONE",E,E,N,N],[17,"NFULNL_CFG_CMD_BIND",E,E,N,N],[17,"NFULNL_CFG_CMD_UNBIND",E,E,N,N],[17,"NFULNL_CFG_CMD_PF_BIND",E,E,N,N],[17,"NFULNL_CFG_CMD_PF_UNBIND",E,E,N,N],[17,"NFULA_CFG_UNSPEC",E,E,N,N],[17,"NFULA_CFG_CMD",E,E,N,N],[17,"NFULA_CFG_MODE",E,E,N,N],[17,"NFULA_CFG_NLBUFSIZ",E,E,N,N],[17,"NFULA_CFG_TIMEOUT",E,E,N,N],[17,"NFULA_CFG_QTHRESH",E,E,N,N],[17,"NFULA_CFG_FLAGS",E,E,N,N],[17,"NFULNL_COPY_NONE",E,E,N,N],[17,"NFULNL_COPY_META",E,E,N,N],[17,"NFULNL_COPY_PACKET",E,E,N,N],[17,"NFULNL_CFG_F_SEQ",E,E,N,N],[17,"NFULNL_CFG_F_SEQ_GLOBAL",E,E,N,N],[17,"NFULNL_CFG_F_CONNTRACK",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_NEWLINK",E,E,N,N],[17,"RTM_DELLINK",E,E,N,N],[17,"RTM_GETLINK",E,E,N,N],[17,"RTM_SETLINK",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_GETADDR",E,E,N,N],[17,"RTM_NEWROUTE",E,E,N,N],[17,"RTM_DELROUTE",E,E,N,N],[17,"RTM_GETROUTE",E,E,N,N],[17,"RTM_NEWNEIGH",E,E,N,N],[17,"RTM_DELNEIGH",E,E,N,N],[17,"RTM_GETNEIGH",E,E,N,N],[17,"RTM_NEWRULE",E,E,N,N],[17,"RTM_DELRULE",E,E,N,N],[17,"RTM_GETRULE",E,E,N,N],[17,"RTM_NEWQDISC",E,E,N,N],[17,"RTM_DELQDISC",E,E,N,N],[17,"RTM_GETQDISC",E,E,N,N],[17,"RTM_NEWTCLASS",E,E,N,N],[17,"RTM_DELTCLASS",E,E,N,N],[17,"RTM_GETTCLASS",E,E,N,N],[17,"RTM_NEWTFILTER",E,E,N,N],[17,"RTM_DELTFILTER",E,E,N,N],[17,"RTM_GETTFILTER",E,E,N,N],[17,"RTM_NEWACTION",E,E,N,N],[17,"RTM_DELACTION",E,E,N,N],[17,"RTM_GETACTION",E,E,N,N],[17,"RTM_NEWPREFIX",E,E,N,N],[17,"RTM_GETMULTICAST",E,E,N,N],[17,"RTM_GETANYCAST",E,E,N,N],[17,"RTM_NEWNEIGHTBL",E,E,N,N],[17,"RTM_GETNEIGHTBL",E,E,N,N],[17,"RTM_SETNEIGHTBL",E,E,N,N],[17,"RTM_NEWNDUSEROPT",E,E,N,N],[17,"RTM_NEWADDRLABEL",E,E,N,N],[17,"RTM_DELADDRLABEL",E,E,N,N],[17,"RTM_GETADDRLABEL",E,E,N,N],[17,"RTM_GETDCB",E,E,N,N],[17,"RTM_SETDCB",E,E,N,N],[17,"RTM_NEWNETCONF",E,E,N,N],[17,"RTM_GETNETCONF",E,E,N,N],[17,"RTM_NEWMDB",E,E,N,N],[17,"RTM_DELMDB",E,E,N,N],[17,"RTM_GETMDB",E,E,N,N],[17,"RTM_NEWNSID",E,E,N,N],[17,"RTM_DELNSID",E,E,N,N],[17,"RTM_GETNSID",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,R[674],E,E,N,N],[17,R[675],E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"VMADDR_CID_ANY",E,E,N,N],[17,"VMADDR_CID_HYPERVISOR",E,E,N,N],[17,"VMADDR_CID_RESERVED",E,E,N,N],[17,"VMADDR_CID_HOST",E,E,N,N],[17,"VMADDR_PORT_ANY",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,R[1032],E,E,N,N],[17,R[1033],E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,R[1034],E,E,N,N],[17,R[1035],E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,R[1036],E,E,N,N],[17,R[1037],E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,R[1038],E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,R[1039],E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,R[1040],E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,R[1042],E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,R[698],E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,R[996],E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,R[628],E,E,N,N],[17,R[1011],E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,R[849],E,E,N,N],[17,R[850],E,E,N,N],[17,R[851],E,E,N,N],[17,R[852],E,E,N,N],[17,R[853],E,E,N,N],[17,R[854],E,E,N,N],[17,R[855],E,E,N,N],[17,R[856],E,E,N,N],[17,R[857],E,E,N,N],[17,R[858],E,E,N,N],[17,R[863],E,E,N,N],[17,R[867],E,E,N,N],[17,R[868],E,E,N,N],[17,R[869],E,E,N,N],[17,R[870],E,E,N,N],[17,R[871],E,E,N,N],[17,R[872],E,E,N,N],[17,R[873],E,E,N,N],[17,R[874],E,E,N,N],[17,R[875],E,E,N,N],[17,R[876],E,E,N,N],[17,R[877],E,E,N,N],[17,R[789],E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_DELNETCONF",E,E,N,N],[17,"RTM_NEWSTATS",E,E,N,N],[17,"RTM_GETSTATS",E,E,N,N],[17,"RTM_NEWCACHEREPORT",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,R[1049],E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,R[631],E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,R[634],E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,R[632],E,E,N,N],[17,"O_PATH",E,E,N,N],[17,R[635],E,E,N,N],[17,R[813],E,E,N,N],[17,R[833],E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,R[577],E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,R[578],E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,R[579],E,E,N,N],[17,R[580],E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,R[581],E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,R[582],E,E,N,N],[17,R[583],E,E,N,N],[17,R[584],E,E,N,N],[17,R[585],E,E,N,N],[17,R[586],E,E,N,N],[17,R[587],E,E,N,N],[17,R[588],E,E,N,N],[17,R[589],E,E,N,N],[17,R[590],E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,R[591],E,E,N,N],[17,R[592],E,E,N,N],[17,R[593],E,E,N,N],[17,R[594],E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,R[595],E,E,N,N],[17,R[596],E,E,N,N],[17,R[597],E,E,N,N],[17,R[598],E,E,N,N],[17,R[599],E,E,N,N],[17,R[600],E,E,N,N],[17,"EALREADY",E,E,N,N],[17,R[601],E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,R[603],E,E,N,N],[17,R[604],E,E,N,N],[17,R[605],E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,R[606],E,E,N,N],[17,R[607],E,E,N,N],[17,R[608],E,E,N,N],[17,R[609],E,E,N,N],[17,R[610],E,E,N,N],[17,R[611],E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,R[934],E,E,N,N],[17,R[937],E,E,N,N],[17,R[932],E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,R[917],E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,R[916],E,E,N,N],[17,R[930],E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,R[920],E,E,N,N],[17,R[918],E,E,N,N],[17,R[919],E,E,N,N],[17,R[735],E,E,N,N],[17,R[737],E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,R[864],E,E,N,N],[17,R[796],E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,R[950],E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,R[951],E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,R[629],E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,R[933],E,E,N,N],[17,R[935],E,E,N,N],[17,R[936],E,E,N,N],[17,R[931],E,E,N,N],[17,R[792],E,E,N,N],[17,R[795],E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,R[630],E,E,N,N],[17,R[633],E,E,N,N],[17,R[841],E,E,N,N],[17,R[837],E,E,N,N],[17,R[838],E,E,N,N],[17,R[832],E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,R[831],E,E,N,N],[17,R[834],E,E,N,N],[17,R[836],E,E,N,N],[17,R[839],E,E,N,N],[17,R[840],E,E,N,N],[17,R[842],E,E,N,N],[17,R[613],E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,R[602],E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,R[861],E,E,N,N],[17,R[862],E,E,N,N],[17,R[865],E,E,N,N],[17,R[866],E,E,N,N],[17,R[859],E,E,N,N],[17,R[860],E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,R[845],E,E,N,N],[17,R[846],E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,"from",E,E,133,[[[T]],[T]]],[11,R[12],E,E,133,[[[U]],[R[15]]]],[11,"into",E,E,133,[[],[U]]],[11,R[13],E,E,133,[[],[R[15]]]],[11,R[17],E,E,133,[[["self"]],[T]]],[11,R[14],E,E,133,[[["self"]],[T]]],[11,R[16],E,E,133,[[["self"]],[R[18]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,"into",E,E,10,[[],[U]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,"into",E,E,11,[[],[U]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,"into",E,E,12,[[],[U]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,"into",E,E,13,[[],[U]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,"into",E,E,14,[[],[U]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,"into",E,E,15,[[],[U]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,"into",E,E,16,[[],[U]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,"into",E,E,17,[[],[U]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[15]]]],[11,"into",E,E,18,[[],[U]]],[11,R[13],E,E,18,[[],[R[15]]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[R[18]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[15]]]],[11,"into",E,E,19,[[],[U]]],[11,R[13],E,E,19,[[],[R[15]]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[R[18]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[15]]]],[11,"into",E,E,20,[[],[U]]],[11,R[13],E,E,20,[[],[R[15]]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[R[18]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,"into",E,E,21,[[],[U]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[15]]]],[11,"into",E,E,22,[[],[U]]],[11,R[13],E,E,22,[[],[R[15]]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[R[18]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,"into",E,E,23,[[],[U]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[15]]]],[11,"into",E,E,24,[[],[U]]],[11,R[13],E,E,24,[[],[R[15]]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[R[18]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[12],E,E,134,[[[U]],[R[15]]]],[11,"into",E,E,134,[[],[U]]],[11,R[13],E,E,134,[[],[R[15]]]],[11,R[17],E,E,134,[[["self"]],[T]]],[11,R[14],E,E,134,[[["self"]],[T]]],[11,R[16],E,E,134,[[["self"]],[R[18]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,"into",E,E,25,[[],[U]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[15]]]],[11,"into",E,E,26,[[],[U]]],[11,R[13],E,E,26,[[],[R[15]]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[R[18]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,"into",E,E,27,[[],[U]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,"into",E,E,28,[[],[U]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[15]]]],[11,"into",E,E,29,[[],[U]]],[11,R[13],E,E,29,[[],[R[15]]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[R[18]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[15]]]],[11,"into",E,E,30,[[],[U]]],[11,R[13],E,E,30,[[],[R[15]]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[R[18]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[12],E,E,135,[[[U]],[R[15]]]],[11,"into",E,E,135,[[],[U]]],[11,R[13],E,E,135,[[],[R[15]]]],[11,R[17],E,E,135,[[["self"]],[T]]],[11,R[14],E,E,135,[[["self"]],[T]]],[11,R[16],E,E,135,[[["self"]],[R[18]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[12],E,E,31,[[[U]],[R[15]]]],[11,"into",E,E,31,[[],[U]]],[11,R[13],E,E,31,[[],[R[15]]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[R[18]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[15]]]],[11,"into",E,E,32,[[],[U]]],[11,R[13],E,E,32,[[],[R[15]]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[R[18]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[12],E,E,33,[[[U]],[R[15]]]],[11,"into",E,E,33,[[],[U]]],[11,R[13],E,E,33,[[],[R[15]]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[R[18]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[12],E,E,34,[[[U]],[R[15]]]],[11,"into",E,E,34,[[],[U]]],[11,R[13],E,E,34,[[],[R[15]]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[R[18]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[12],E,E,35,[[[U]],[R[15]]]],[11,"into",E,E,35,[[],[U]]],[11,R[13],E,E,35,[[],[R[15]]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[16],E,E,35,[[["self"]],[R[18]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[15]]]],[11,"into",E,E,36,[[],[U]]],[11,R[13],E,E,36,[[],[R[15]]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[16],E,E,36,[[["self"]],[R[18]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[12],E,E,37,[[[U]],[R[15]]]],[11,"into",E,E,37,[[],[U]]],[11,R[13],E,E,37,[[],[R[15]]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[16],E,E,37,[[["self"]],[R[18]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[12],E,E,38,[[[U]],[R[15]]]],[11,"into",E,E,38,[[],[U]]],[11,R[13],E,E,38,[[],[R[15]]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[16],E,E,38,[[["self"]],[R[18]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[12],E,E,39,[[[U]],[R[15]]]],[11,"into",E,E,39,[[],[U]]],[11,R[13],E,E,39,[[],[R[15]]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[R[18]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[12],E,E,40,[[[U]],[R[15]]]],[11,"into",E,E,40,[[],[U]]],[11,R[13],E,E,40,[[],[R[15]]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[R[18]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[12],E,E,41,[[[U]],[R[15]]]],[11,"into",E,E,41,[[],[U]]],[11,R[13],E,E,41,[[],[R[15]]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[R[18]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[15]]]],[11,"into",E,E,42,[[],[U]]],[11,R[13],E,E,42,[[],[R[15]]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[R[18]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[12],E,E,43,[[[U]],[R[15]]]],[11,"into",E,E,43,[[],[U]]],[11,R[13],E,E,43,[[],[R[15]]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[R[18]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[15]]]],[11,"into",E,E,44,[[],[U]]],[11,R[13],E,E,44,[[],[R[15]]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[16],E,E,44,[[["self"]],[R[18]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[12],E,E,45,[[[U]],[R[15]]]],[11,"into",E,E,45,[[],[U]]],[11,R[13],E,E,45,[[],[R[15]]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"]],[T]]],[11,R[16],E,E,45,[[["self"]],[R[18]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[12],E,E,46,[[[U]],[R[15]]]],[11,"into",E,E,46,[[],[U]]],[11,R[13],E,E,46,[[],[R[15]]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[16],E,E,46,[[["self"]],[R[18]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[12],E,E,136,[[[U]],[R[15]]]],[11,"into",E,E,136,[[],[U]]],[11,R[13],E,E,136,[[],[R[15]]]],[11,R[17],E,E,136,[[["self"]],[T]]],[11,R[14],E,E,136,[[["self"]],[T]]],[11,R[16],E,E,136,[[["self"]],[R[18]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[12],E,E,47,[[[U]],[R[15]]]],[11,"into",E,E,47,[[],[U]]],[11,R[13],E,E,47,[[],[R[15]]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[16],E,E,47,[[["self"]],[R[18]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[12],E,E,137,[[[U]],[R[15]]]],[11,"into",E,E,137,[[],[U]]],[11,R[13],E,E,137,[[],[R[15]]]],[11,R[17],E,E,137,[[["self"]],[T]]],[11,R[14],E,E,137,[[["self"]],[T]]],[11,R[16],E,E,137,[[["self"]],[R[18]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[12],E,E,48,[[[U]],[R[15]]]],[11,"into",E,E,48,[[],[U]]],[11,R[13],E,E,48,[[],[R[15]]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[16],E,E,48,[[["self"]],[R[18]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[12],E,E,49,[[[U]],[R[15]]]],[11,"into",E,E,49,[[],[U]]],[11,R[13],E,E,49,[[],[R[15]]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[16],E,E,49,[[["self"]],[R[18]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[12],E,E,50,[[[U]],[R[15]]]],[11,"into",E,E,50,[[],[U]]],[11,R[13],E,E,50,[[],[R[15]]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[16],E,E,50,[[["self"]],[R[18]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[12],E,E,51,[[[U]],[R[15]]]],[11,"into",E,E,51,[[],[U]]],[11,R[13],E,E,51,[[],[R[15]]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"]],[T]]],[11,R[16],E,E,51,[[["self"]],[R[18]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[12],E,E,52,[[[U]],[R[15]]]],[11,"into",E,E,52,[[],[U]]],[11,R[13],E,E,52,[[],[R[15]]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"]],[T]]],[11,R[16],E,E,52,[[["self"]],[R[18]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[12],E,E,53,[[[U]],[R[15]]]],[11,"into",E,E,53,[[],[U]]],[11,R[13],E,E,53,[[],[R[15]]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"]],[T]]],[11,R[16],E,E,53,[[["self"]],[R[18]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[12],E,E,54,[[[U]],[R[15]]]],[11,"into",E,E,54,[[],[U]]],[11,R[13],E,E,54,[[],[R[15]]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"]],[T]]],[11,R[16],E,E,54,[[["self"]],[R[18]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[12],E,E,55,[[[U]],[R[15]]]],[11,"into",E,E,55,[[],[U]]],[11,R[13],E,E,55,[[],[R[15]]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"]],[T]]],[11,R[16],E,E,55,[[["self"]],[R[18]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[12],E,E,56,[[[U]],[R[15]]]],[11,"into",E,E,56,[[],[U]]],[11,R[13],E,E,56,[[],[R[15]]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"]],[T]]],[11,R[16],E,E,56,[[["self"]],[R[18]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[12],E,E,57,[[[U]],[R[15]]]],[11,"into",E,E,57,[[],[U]]],[11,R[13],E,E,57,[[],[R[15]]]],[11,R[17],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"]],[T]]],[11,R[16],E,E,57,[[["self"]],[R[18]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[12],E,E,58,[[[U]],[R[15]]]],[11,"into",E,E,58,[[],[U]]],[11,R[13],E,E,58,[[],[R[15]]]],[11,R[17],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[["self"]],[T]]],[11,R[16],E,E,58,[[["self"]],[R[18]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[12],E,E,59,[[[U]],[R[15]]]],[11,"into",E,E,59,[[],[U]]],[11,R[13],E,E,59,[[],[R[15]]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[["self"]],[T]]],[11,R[16],E,E,59,[[["self"]],[R[18]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[12],E,E,60,[[[U]],[R[15]]]],[11,"into",E,E,60,[[],[U]]],[11,R[13],E,E,60,[[],[R[15]]]],[11,R[17],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[["self"]],[T]]],[11,R[16],E,E,60,[[["self"]],[R[18]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[12],E,E,61,[[[U]],[R[15]]]],[11,"into",E,E,61,[[],[U]]],[11,R[13],E,E,61,[[],[R[15]]]],[11,R[17],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"]],[T]]],[11,R[16],E,E,61,[[["self"]],[R[18]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[12],E,E,62,[[[U]],[R[15]]]],[11,"into",E,E,62,[[],[U]]],[11,R[13],E,E,62,[[],[R[15]]]],[11,R[17],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"]],[T]]],[11,R[16],E,E,62,[[["self"]],[R[18]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[12],E,E,63,[[[U]],[R[15]]]],[11,"into",E,E,63,[[],[U]]],[11,R[13],E,E,63,[[],[R[15]]]],[11,R[17],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[["self"]],[T]]],[11,R[16],E,E,63,[[["self"]],[R[18]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[12],E,E,64,[[[U]],[R[15]]]],[11,"into",E,E,64,[[],[U]]],[11,R[13],E,E,64,[[],[R[15]]]],[11,R[17],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"]],[T]]],[11,R[16],E,E,64,[[["self"]],[R[18]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[12],E,E,65,[[[U]],[R[15]]]],[11,"into",E,E,65,[[],[U]]],[11,R[13],E,E,65,[[],[R[15]]]],[11,R[17],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"]],[T]]],[11,R[16],E,E,65,[[["self"]],[R[18]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[12],E,E,66,[[[U]],[R[15]]]],[11,"into",E,E,66,[[],[U]]],[11,R[13],E,E,66,[[],[R[15]]]],[11,R[17],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"]],[T]]],[11,R[16],E,E,66,[[["self"]],[R[18]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[12],E,E,67,[[[U]],[R[15]]]],[11,"into",E,E,67,[[],[U]]],[11,R[13],E,E,67,[[],[R[15]]]],[11,R[17],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[["self"]],[T]]],[11,R[16],E,E,67,[[["self"]],[R[18]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[12],E,E,68,[[[U]],[R[15]]]],[11,"into",E,E,68,[[],[U]]],[11,R[13],E,E,68,[[],[R[15]]]],[11,R[17],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"]],[T]]],[11,R[16],E,E,68,[[["self"]],[R[18]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[12],E,E,69,[[[U]],[R[15]]]],[11,"into",E,E,69,[[],[U]]],[11,R[13],E,E,69,[[],[R[15]]]],[11,R[17],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"]],[T]]],[11,R[16],E,E,69,[[["self"]],[R[18]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[12],E,E,70,[[[U]],[R[15]]]],[11,"into",E,E,70,[[],[U]]],[11,R[13],E,E,70,[[],[R[15]]]],[11,R[17],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"]],[T]]],[11,R[16],E,E,70,[[["self"]],[R[18]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[12],E,E,71,[[[U]],[R[15]]]],[11,"into",E,E,71,[[],[U]]],[11,R[13],E,E,71,[[],[R[15]]]],[11,R[17],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"]],[T]]],[11,R[16],E,E,71,[[["self"]],[R[18]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[12],E,E,72,[[[U]],[R[15]]]],[11,"into",E,E,72,[[],[U]]],[11,R[13],E,E,72,[[],[R[15]]]],[11,R[17],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"]],[T]]],[11,R[16],E,E,72,[[["self"]],[R[18]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[12],E,E,73,[[[U]],[R[15]]]],[11,"into",E,E,73,[[],[U]]],[11,R[13],E,E,73,[[],[R[15]]]],[11,R[17],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[["self"]],[T]]],[11,R[16],E,E,73,[[["self"]],[R[18]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[12],E,E,74,[[[U]],[R[15]]]],[11,"into",E,E,74,[[],[U]]],[11,R[13],E,E,74,[[],[R[15]]]],[11,R[17],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[["self"]],[T]]],[11,R[16],E,E,74,[[["self"]],[R[18]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[12],E,E,75,[[[U]],[R[15]]]],[11,"into",E,E,75,[[],[U]]],[11,R[13],E,E,75,[[],[R[15]]]],[11,R[17],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[["self"]],[T]]],[11,R[16],E,E,75,[[["self"]],[R[18]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[12],E,E,76,[[[U]],[R[15]]]],[11,"into",E,E,76,[[],[U]]],[11,R[13],E,E,76,[[],[R[15]]]],[11,R[17],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[["self"]],[T]]],[11,R[16],E,E,76,[[["self"]],[R[18]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[12],E,E,77,[[[U]],[R[15]]]],[11,"into",E,E,77,[[],[U]]],[11,R[13],E,E,77,[[],[R[15]]]],[11,R[17],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[["self"]],[T]]],[11,R[16],E,E,77,[[["self"]],[R[18]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[12],E,E,138,[[[U]],[R[15]]]],[11,"into",E,E,138,[[],[U]]],[11,R[13],E,E,138,[[],[R[15]]]],[11,R[17],E,E,138,[[["self"]],[T]]],[11,R[14],E,E,138,[[["self"]],[T]]],[11,R[16],E,E,138,[[["self"]],[R[18]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[12],E,E,139,[[[U]],[R[15]]]],[11,"into",E,E,139,[[],[U]]],[11,R[13],E,E,139,[[],[R[15]]]],[11,R[17],E,E,139,[[["self"]],[T]]],[11,R[14],E,E,139,[[["self"]],[T]]],[11,R[16],E,E,139,[[["self"]],[R[18]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[12],E,E,78,[[[U]],[R[15]]]],[11,"into",E,E,78,[[],[U]]],[11,R[13],E,E,78,[[],[R[15]]]],[11,R[17],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[["self"]],[T]]],[11,R[16],E,E,78,[[["self"]],[R[18]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[12],E,E,79,[[[U]],[R[15]]]],[11,"into",E,E,79,[[],[U]]],[11,R[13],E,E,79,[[],[R[15]]]],[11,R[17],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[["self"]],[T]]],[11,R[16],E,E,79,[[["self"]],[R[18]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[12],E,E,80,[[[U]],[R[15]]]],[11,"into",E,E,80,[[],[U]]],[11,R[13],E,E,80,[[],[R[15]]]],[11,R[17],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[["self"]],[T]]],[11,R[16],E,E,80,[[["self"]],[R[18]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[12],E,E,81,[[[U]],[R[15]]]],[11,"into",E,E,81,[[],[U]]],[11,R[13],E,E,81,[[],[R[15]]]],[11,R[17],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[["self"]],[T]]],[11,R[16],E,E,81,[[["self"]],[R[18]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[12],E,E,82,[[[U]],[R[15]]]],[11,"into",E,E,82,[[],[U]]],[11,R[13],E,E,82,[[],[R[15]]]],[11,R[17],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[["self"]],[T]]],[11,R[16],E,E,82,[[["self"]],[R[18]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[12],E,E,83,[[[U]],[R[15]]]],[11,"into",E,E,83,[[],[U]]],[11,R[13],E,E,83,[[],[R[15]]]],[11,R[17],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[["self"]],[T]]],[11,R[16],E,E,83,[[["self"]],[R[18]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[12],E,E,84,[[[U]],[R[15]]]],[11,"into",E,E,84,[[],[U]]],[11,R[13],E,E,84,[[],[R[15]]]],[11,R[17],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[["self"]],[T]]],[11,R[16],E,E,84,[[["self"]],[R[18]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[12],E,E,85,[[[U]],[R[15]]]],[11,"into",E,E,85,[[],[U]]],[11,R[13],E,E,85,[[],[R[15]]]],[11,R[17],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[["self"]],[T]]],[11,R[16],E,E,85,[[["self"]],[R[18]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[12],E,E,86,[[[U]],[R[15]]]],[11,"into",E,E,86,[[],[U]]],[11,R[13],E,E,86,[[],[R[15]]]],[11,R[17],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[["self"]],[T]]],[11,R[16],E,E,86,[[["self"]],[R[18]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[12],E,E,87,[[[U]],[R[15]]]],[11,"into",E,E,87,[[],[U]]],[11,R[13],E,E,87,[[],[R[15]]]],[11,R[17],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[["self"]],[T]]],[11,R[16],E,E,87,[[["self"]],[R[18]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[12],E,E,88,[[[U]],[R[15]]]],[11,"into",E,E,88,[[],[U]]],[11,R[13],E,E,88,[[],[R[15]]]],[11,R[17],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[["self"]],[T]]],[11,R[16],E,E,88,[[["self"]],[R[18]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[12],E,E,89,[[[U]],[R[15]]]],[11,"into",E,E,89,[[],[U]]],[11,R[13],E,E,89,[[],[R[15]]]],[11,R[17],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[["self"]],[T]]],[11,R[16],E,E,89,[[["self"]],[R[18]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[12],E,E,90,[[[U]],[R[15]]]],[11,"into",E,E,90,[[],[U]]],[11,R[13],E,E,90,[[],[R[15]]]],[11,R[17],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[["self"]],[T]]],[11,R[16],E,E,90,[[["self"]],[R[18]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[12],E,E,91,[[[U]],[R[15]]]],[11,"into",E,E,91,[[],[U]]],[11,R[13],E,E,91,[[],[R[15]]]],[11,R[17],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[["self"]],[T]]],[11,R[16],E,E,91,[[["self"]],[R[18]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[12],E,E,92,[[[U]],[R[15]]]],[11,"into",E,E,92,[[],[U]]],[11,R[13],E,E,92,[[],[R[15]]]],[11,R[17],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[["self"]],[T]]],[11,R[16],E,E,92,[[["self"]],[R[18]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[12],E,E,93,[[[U]],[R[15]]]],[11,"into",E,E,93,[[],[U]]],[11,R[13],E,E,93,[[],[R[15]]]],[11,R[17],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[["self"]],[T]]],[11,R[16],E,E,93,[[["self"]],[R[18]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[12],E,E,94,[[[U]],[R[15]]]],[11,"into",E,E,94,[[],[U]]],[11,R[13],E,E,94,[[],[R[15]]]],[11,R[17],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[["self"]],[T]]],[11,R[16],E,E,94,[[["self"]],[R[18]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[12],E,E,95,[[[U]],[R[15]]]],[11,"into",E,E,95,[[],[U]]],[11,R[13],E,E,95,[[],[R[15]]]],[11,R[17],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[["self"]],[T]]],[11,R[16],E,E,95,[[["self"]],[R[18]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[12],E,E,96,[[[U]],[R[15]]]],[11,"into",E,E,96,[[],[U]]],[11,R[13],E,E,96,[[],[R[15]]]],[11,R[17],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[["self"]],[T]]],[11,R[16],E,E,96,[[["self"]],[R[18]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[12],E,E,97,[[[U]],[R[15]]]],[11,"into",E,E,97,[[],[U]]],[11,R[13],E,E,97,[[],[R[15]]]],[11,R[17],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[["self"]],[T]]],[11,R[16],E,E,97,[[["self"]],[R[18]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[12],E,E,98,[[[U]],[R[15]]]],[11,"into",E,E,98,[[],[U]]],[11,R[13],E,E,98,[[],[R[15]]]],[11,R[17],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[["self"]],[T]]],[11,R[16],E,E,98,[[["self"]],[R[18]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[12],E,E,99,[[[U]],[R[15]]]],[11,"into",E,E,99,[[],[U]]],[11,R[13],E,E,99,[[],[R[15]]]],[11,R[17],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[["self"]],[T]]],[11,R[16],E,E,99,[[["self"]],[R[18]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[12],E,E,100,[[[U]],[R[15]]]],[11,"into",E,E,100,[[],[U]]],[11,R[13],E,E,100,[[],[R[15]]]],[11,R[17],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[["self"]],[T]]],[11,R[16],E,E,100,[[["self"]],[R[18]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[12],E,E,101,[[[U]],[R[15]]]],[11,"into",E,E,101,[[],[U]]],[11,R[13],E,E,101,[[],[R[15]]]],[11,R[17],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[["self"]],[T]]],[11,R[16],E,E,101,[[["self"]],[R[18]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[12],E,E,102,[[[U]],[R[15]]]],[11,"into",E,E,102,[[],[U]]],[11,R[13],E,E,102,[[],[R[15]]]],[11,R[17],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[["self"]],[T]]],[11,R[16],E,E,102,[[["self"]],[R[18]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[12],E,E,103,[[[U]],[R[15]]]],[11,"into",E,E,103,[[],[U]]],[11,R[13],E,E,103,[[],[R[15]]]],[11,R[17],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[["self"]],[T]]],[11,R[16],E,E,103,[[["self"]],[R[18]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[12],E,E,104,[[[U]],[R[15]]]],[11,"into",E,E,104,[[],[U]]],[11,R[13],E,E,104,[[],[R[15]]]],[11,R[17],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[["self"]],[T]]],[11,R[16],E,E,104,[[["self"]],[R[18]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[12],E,E,105,[[[U]],[R[15]]]],[11,"into",E,E,105,[[],[U]]],[11,R[13],E,E,105,[[],[R[15]]]],[11,R[17],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[["self"]],[T]]],[11,R[16],E,E,105,[[["self"]],[R[18]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[12],E,E,106,[[[U]],[R[15]]]],[11,"into",E,E,106,[[],[U]]],[11,R[13],E,E,106,[[],[R[15]]]],[11,R[17],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[["self"]],[T]]],[11,R[16],E,E,106,[[["self"]],[R[18]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[12],E,E,140,[[[U]],[R[15]]]],[11,"into",E,E,140,[[],[U]]],[11,R[13],E,E,140,[[],[R[15]]]],[11,R[17],E,E,140,[[["self"]],[T]]],[11,R[14],E,E,140,[[["self"]],[T]]],[11,R[16],E,E,140,[[["self"]],[R[18]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[12],E,E,107,[[[U]],[R[15]]]],[11,"into",E,E,107,[[],[U]]],[11,R[13],E,E,107,[[],[R[15]]]],[11,R[17],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[["self"]],[T]]],[11,R[16],E,E,107,[[["self"]],[R[18]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[12],E,E,108,[[[U]],[R[15]]]],[11,"into",E,E,108,[[],[U]]],[11,R[13],E,E,108,[[],[R[15]]]],[11,R[17],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[["self"]],[T]]],[11,R[16],E,E,108,[[["self"]],[R[18]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[12],E,E,109,[[[U]],[R[15]]]],[11,"into",E,E,109,[[],[U]]],[11,R[13],E,E,109,[[],[R[15]]]],[11,R[17],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[["self"]],[T]]],[11,R[16],E,E,109,[[["self"]],[R[18]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[12],E,E,110,[[[U]],[R[15]]]],[11,"into",E,E,110,[[],[U]]],[11,R[13],E,E,110,[[],[R[15]]]],[11,R[17],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[["self"]],[T]]],[11,R[16],E,E,110,[[["self"]],[R[18]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[12],E,E,111,[[[U]],[R[15]]]],[11,"into",E,E,111,[[],[U]]],[11,R[13],E,E,111,[[],[R[15]]]],[11,R[17],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[["self"]],[T]]],[11,R[16],E,E,111,[[["self"]],[R[18]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[12],E,E,112,[[[U]],[R[15]]]],[11,"into",E,E,112,[[],[U]]],[11,R[13],E,E,112,[[],[R[15]]]],[11,R[17],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[["self"]],[T]]],[11,R[16],E,E,112,[[["self"]],[R[18]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[12],E,E,113,[[[U]],[R[15]]]],[11,"into",E,E,113,[[],[U]]],[11,R[13],E,E,113,[[],[R[15]]]],[11,R[17],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[["self"]],[T]]],[11,R[16],E,E,113,[[["self"]],[R[18]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[12],E,E,114,[[[U]],[R[15]]]],[11,"into",E,E,114,[[],[U]]],[11,R[13],E,E,114,[[],[R[15]]]],[11,R[17],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[["self"]],[T]]],[11,R[16],E,E,114,[[["self"]],[R[18]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[12],E,E,115,[[[U]],[R[15]]]],[11,"into",E,E,115,[[],[U]]],[11,R[13],E,E,115,[[],[R[15]]]],[11,R[17],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[["self"]],[T]]],[11,R[16],E,E,115,[[["self"]],[R[18]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[12],E,E,116,[[[U]],[R[15]]]],[11,"into",E,E,116,[[],[U]]],[11,R[13],E,E,116,[[],[R[15]]]],[11,R[17],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[["self"]],[T]]],[11,R[16],E,E,116,[[["self"]],[R[18]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[12],E,E,117,[[[U]],[R[15]]]],[11,"into",E,E,117,[[],[U]]],[11,R[13],E,E,117,[[],[R[15]]]],[11,R[17],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[["self"]],[T]]],[11,R[16],E,E,117,[[["self"]],[R[18]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[12],E,E,118,[[[U]],[R[15]]]],[11,"into",E,E,118,[[],[U]]],[11,R[13],E,E,118,[[],[R[15]]]],[11,R[17],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[["self"]],[T]]],[11,R[16],E,E,118,[[["self"]],[R[18]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[12],E,E,141,[[[U]],[R[15]]]],[11,"into",E,E,141,[[],[U]]],[11,R[13],E,E,141,[[],[R[15]]]],[11,R[17],E,E,141,[[["self"]],[T]]],[11,R[14],E,E,141,[[["self"]],[T]]],[11,R[16],E,E,141,[[["self"]],[R[18]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[12],E,E,119,[[[U]],[R[15]]]],[11,"into",E,E,119,[[],[U]]],[11,R[13],E,E,119,[[],[R[15]]]],[11,R[17],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[["self"]],[T]]],[11,R[16],E,E,119,[[["self"]],[R[18]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[12],E,E,120,[[[U]],[R[15]]]],[11,"into",E,E,120,[[],[U]]],[11,R[13],E,E,120,[[],[R[15]]]],[11,R[17],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[["self"]],[T]]],[11,R[16],E,E,120,[[["self"]],[R[18]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[12],E,E,121,[[[U]],[R[15]]]],[11,"into",E,E,121,[[],[U]]],[11,R[13],E,E,121,[[],[R[15]]]],[11,R[17],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[["self"]],[T]]],[11,R[16],E,E,121,[[["self"]],[R[18]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[12],E,E,122,[[[U]],[R[15]]]],[11,"into",E,E,122,[[],[U]]],[11,R[13],E,E,122,[[],[R[15]]]],[11,R[17],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[["self"]],[T]]],[11,R[16],E,E,122,[[["self"]],[R[18]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[12],E,E,123,[[[U]],[R[15]]]],[11,"into",E,E,123,[[],[U]]],[11,R[13],E,E,123,[[],[R[15]]]],[11,R[17],E,E,123,[[["self"]],[T]]],[11,R[14],E,E,123,[[["self"]],[T]]],[11,R[16],E,E,123,[[["self"]],[R[18]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[12],E,E,124,[[[U]],[R[15]]]],[11,"into",E,E,124,[[],[U]]],[11,R[13],E,E,124,[[],[R[15]]]],[11,R[17],E,E,124,[[["self"]],[T]]],[11,R[14],E,E,124,[[["self"]],[T]]],[11,R[16],E,E,124,[[["self"]],[R[18]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[12],E,E,125,[[[U]],[R[15]]]],[11,"into",E,E,125,[[],[U]]],[11,R[13],E,E,125,[[],[R[15]]]],[11,R[17],E,E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[["self"]],[T]]],[11,R[16],E,E,125,[[["self"]],[R[18]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[12],E,E,126,[[[U]],[R[15]]]],[11,"into",E,E,126,[[],[U]]],[11,R[13],E,E,126,[[],[R[15]]]],[11,R[17],E,E,126,[[["self"]],[T]]],[11,R[14],E,E,126,[[["self"]],[T]]],[11,R[16],E,E,126,[[["self"]],[R[18]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[12],E,E,127,[[[U]],[R[15]]]],[11,"into",E,E,127,[[],[U]]],[11,R[13],E,E,127,[[],[R[15]]]],[11,R[17],E,E,127,[[["self"]],[T]]],[11,R[14],E,E,127,[[["self"]],[T]]],[11,R[16],E,E,127,[[["self"]],[R[18]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[12],E,E,128,[[[U]],[R[15]]]],[11,"into",E,E,128,[[],[U]]],[11,R[13],E,E,128,[[],[R[15]]]],[11,R[17],E,E,128,[[["self"]],[T]]],[11,R[14],E,E,128,[[["self"]],[T]]],[11,R[16],E,E,128,[[["self"]],[R[18]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[12],E,E,129,[[[U]],[R[15]]]],[11,"into",E,E,129,[[],[U]]],[11,R[13],E,E,129,[[],[R[15]]]],[11,R[17],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[["self"]],[T]]],[11,R[16],E,E,129,[[["self"]],[R[18]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[12],E,E,130,[[[U]],[R[15]]]],[11,"into",E,E,130,[[],[U]]],[11,R[13],E,E,130,[[],[R[15]]]],[11,R[17],E,E,130,[[["self"]],[T]]],[11,R[14],E,E,130,[[["self"]],[T]]],[11,R[16],E,E,130,[[["self"]],[R[18]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[12],E,E,131,[[[U]],[R[15]]]],[11,"into",E,E,131,[[],[U]]],[11,R[13],E,E,131,[[],[R[15]]]],[11,R[17],E,E,131,[[["self"]],[T]]],[11,R[14],E,E,131,[[["self"]],[T]]],[11,R[16],E,E,131,[[["self"]],[R[18]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[12],E,E,142,[[[U]],[R[15]]]],[11,"into",E,E,142,[[],[U]]],[11,R[13],E,E,142,[[],[R[15]]]],[11,R[17],E,E,142,[[["self"]],[T]]],[11,R[14],E,E,142,[[["self"]],[T]]],[11,R[16],E,E,142,[[["self"]],[R[18]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[12],E,E,143,[[[U]],[R[15]]]],[11,"into",E,E,143,[[],[U]]],[11,R[13],E,E,143,[[],[R[15]]]],[11,R[17],E,E,143,[[["self"]],[T]]],[11,R[14],E,E,143,[[["self"]],[T]]],[11,R[16],E,E,143,[[["self"]],[R[18]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[12],E,E,144,[[[U]],[R[15]]]],[11,"into",E,E,144,[[],[U]]],[11,R[13],E,E,144,[[],[R[15]]]],[11,R[17],E,E,144,[[["self"]],[T]]],[11,R[14],E,E,144,[[["self"]],[T]]],[11,R[16],E,E,144,[[["self"]],[R[18]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[12],E,E,145,[[[U]],[R[15]]]],[11,"into",E,E,145,[[],[U]]],[11,R[13],E,E,145,[[],[R[15]]]],[11,R[17],E,E,145,[[["self"]],[T]]],[11,R[14],E,E,145,[[["self"]],[T]]],[11,R[16],E,E,145,[[["self"]],[R[18]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[12],E,E,146,[[[U]],[R[15]]]],[11,"into",E,E,146,[[],[U]]],[11,R[13],E,E,146,[[],[R[15]]]],[11,R[17],E,E,146,[[["self"]],[T]]],[11,R[14],E,E,146,[[["self"]],[T]]],[11,R[16],E,E,146,[[["self"]],[R[18]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[12],E,E,147,[[[U]],[R[15]]]],[11,"into",E,E,147,[[],[U]]],[11,R[13],E,E,147,[[],[R[15]]]],[11,R[17],E,E,147,[[["self"]],[T]]],[11,R[14],E,E,147,[[["self"]],[T]]],[11,R[16],E,E,147,[[["self"]],[R[18]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[12],E,E,148,[[[U]],[R[15]]]],[11,"into",E,E,148,[[],[U]]],[11,R[13],E,E,148,[[],[R[15]]]],[11,R[17],E,E,148,[[["self"]],[T]]],[11,R[14],E,E,148,[[["self"]],[T]]],[11,R[16],E,E,148,[[["self"]],[R[18]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[12],E,E,149,[[[U]],[R[15]]]],[11,"into",E,E,149,[[],[U]]],[11,R[13],E,E,149,[[],[R[15]]]],[11,R[17],E,E,149,[[["self"]],[T]]],[11,R[14],E,E,149,[[["self"]],[T]]],[11,R[16],E,E,149,[[["self"]],[R[18]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[12],E,E,132,[[[U]],[R[15]]]],[11,"into",E,E,132,[[],[U]]],[11,R[13],E,E,132,[[],[R[15]]]],[11,R[17],E,E,132,[[["self"]],[T]]],[11,R[14],E,E,132,[[["self"]],[T]]],[11,R[16],E,E,132,[[["self"]],[R[18]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[12],E,E,150,[[[U]],[R[15]]]],[11,"into",E,E,150,[[],[U]]],[11,R[13],E,E,150,[[],[R[15]]]],[11,R[17],E,E,150,[[["self"]],[T]]],[11,R[14],E,E,150,[[["self"]],[T]]],[11,R[16],E,E,150,[[["self"]],[R[18]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[12],E,E,151,[[[U]],[R[15]]]],[11,"into",E,E,151,[[],[U]]],[11,R[13],E,E,151,[[],[R[15]]]],[11,R[17],E,E,151,[[["self"]],[T]]],[11,R[14],E,E,151,[[["self"]],[T]]],[11,R[16],E,E,151,[[["self"]],[R[18]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[12],E,E,152,[[[U]],[R[15]]]],[11,"into",E,E,152,[[],[U]]],[11,R[13],E,E,152,[[],[R[15]]]],[11,R[17],E,E,152,[[["self"]],[T]]],[11,R[14],E,E,152,[[["self"]],[T]]],[11,R[16],E,E,152,[[["self"]],[R[18]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[12],E,E,153,[[[U]],[R[15]]]],[11,"into",E,E,153,[[],[U]]],[11,R[13],E,E,153,[[],[R[15]]]],[11,R[17],E,E,153,[[["self"]],[T]]],[11,R[14],E,E,153,[[["self"]],[T]]],[11,R[16],E,E,153,[[["self"]],[R[18]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[12],E,E,154,[[[U]],[R[15]]]],[11,"into",E,E,154,[[],[U]]],[11,R[13],E,E,154,[[],[R[15]]]],[11,R[17],E,E,154,[[["self"]],[T]]],[11,R[14],E,E,154,[[["self"]],[T]]],[11,R[16],E,E,154,[[["self"]],[R[18]]]],[11,"fmt",E,E,133,[[["self"],[R[38]]],[["error"],[R[15],["error"]]]]],[11,"clone",E,E,150,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[500]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[436]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[437]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[501]]]],[11,"clone",E,E,151,[[["self"]],["file"]]],[11,"clone",E,E,152,[[["self"]],["fpos_t"]]],[11,"clone",E,E,153,[[["self"]],[R[528]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[438]]]],[11,"clone",E,E,20,[[["self"]],[R[502]]]],[11,"clone",E,E,21,[[["self"]],[R[439]]]],[11,"clone",E,E,22,[[["self"]],[R[440]]]],[11,"clone",E,E,23,[[["self"]],[R[503]]]],[11,"clone",E,E,24,[[["self"]],[R[441]]]],[11,"clone",E,E,134,[[["self"]],["fd_set"]]],[11,"clone",E,E,25,[[["self"]],["tm"]]],[11,"clone",E,E,26,[[["self"]],[R[442]]]],[11,"clone",E,E,27,[[["self"]],["dl_info"]]],[11,"clone",E,E,28,[[["self"]],["lconv"]]],[11,"clone",E,E,29,[[["self"]],[R[443]]]],[11,"clone",E,E,30,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,135,[[["self"]],[R[444]]]],[11,"clone",E,E,31,[[["self"]],["arpreq"]]],[11,"clone",E,E,32,[[["self"]],[R[445]]]],[11,"clone",E,E,33,[[["self"]],["arphdr"]]],[11,"clone",E,E,34,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,35,[[["self"]],[R[446]]]],[11,"clone",E,E,36,[[["self"]],[R[447]]]],[11,"clone",E,E,37,[[["self"]],[R[448]]]],[11,"clone",E,E,38,[[["self"]],["utsname"]]],[11,"clone",E,E,39,[[["self"]],[R[504]]]],[11,"clone",E,E,154,[[["self"]],[R[529]]]],[11,"clone",E,E,40,[[["self"]],[R[505]]]],[11,"clone",E,E,41,[[["self"]],["glob_t"]]],[11,"clone",E,E,42,[[["self"]],["passwd"]]],[11,"clone",E,E,43,[[["self"]],["spwd"]]],[11,"clone",E,E,44,[[["self"]],["dqblk"]]],[11,"clone",E,E,45,[[["self"]],[R[449]]]],[11,"clone",E,E,46,[[["self"]],[R[450]]]],[11,"clone",E,E,136,[[["self"]],["fsid_t"]]],[11,"clone",E,E,47,[[["self"]],[R[451]]]],[11,"clone",E,E,137,[[["self"]],[R[432]]]],[11,"clone",E,E,48,[[["self"]],[R[435]]]],[11,"clone",E,E,49,[[["self"]],["msginfo"]]],[11,"clone",E,E,50,[[["self"]],["sembuf"]]],[11,"clone",E,E,51,[[["self"]],[R[452]]]],[11,"clone",E,E,52,[[["self"]],[R[506]]]],[11,"clone",E,E,53,[[["self"]],[R[453]]]],[11,"clone",E,E,54,[[["self"]],[R[454]]]],[11,"clone",E,E,55,[[["self"]],[R[455]]]],[11,"clone",E,E,56,[[["self"]],[R[456]]]],[11,"clone",E,E,57,[[["self"]],[R[457]]]],[11,"clone",E,E,58,[[["self"]],[R[458]]]],[11,"clone",E,E,59,[[["self"]],[R[459]]]],[11,"clone",E,E,60,[[["self"]],[R[460]]]],[11,"clone",E,E,61,[[["self"]],[R[461]]]],[11,"clone",E,E,62,[[["self"]],[R[462]]]],[11,"clone",E,E,63,[[["self"]],[R[463]]]],[11,"clone",E,E,64,[[["self"]],[R[464]]]],[11,"clone",E,E,65,[[["self"]],[R[465]]]],[11,"clone",E,E,66,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,68,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,70,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,72,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,74,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,75,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,76,[[["self"]],["ucred"]]],[11,"clone",E,E,77,[[["self"]],["mntent"]]],[11,"clone",E,E,138,[[["self"]],[R[466]]]],[11,"clone",E,E,139,[[["self"]],[R[467]]]],[11,"clone",E,E,78,[[["self"]],[R[468]]]],[11,"clone",E,E,79,[[["self"]],[R[469]]]],[11,"clone",E,E,80,[[["self"]],[R[470]]]],[11,"clone",E,E,81,[[["self"]],[R[471]]]],[11,"clone",E,E,82,[[["self"]],[R[472]]]],[11,"clone",E,E,83,[[["self"]],[R[473]]]],[11,"clone",E,E,84,[[["self"]],["dirent"]]],[11,"clone",E,E,85,[[["self"]],[R[517]]]],[11,"clone",E,E,86,[[["self"]],[R[474]]]],[11,"clone",E,E,87,[[["self"]],[R[475]]]],[11,"clone",E,E,88,[[["self"]],["mq_attr"]]],[11,"clone",E,E,89,[[["self"]],["statx"]]],[11,"clone",E,E,90,[[["self"]],[R[476]]]],[11,"clone",E,E,91,[[["self"]],["aiocb"]]],[11,"clone",E,E,92,[[["self"]],[R[477]]]],[11,"clone",E,E,93,[[["self"]],[R[478]]]],[11,"clone",E,E,94,[[["self"]],[R[518]]]],[11,"clone",E,E,95,[[["self"]],["msghdr"]]],[11,"clone",E,E,96,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,97,[[["self"]],["termios"]]],[11,"clone",E,E,98,[[["self"]],[R[479]]]],[11,"clone",E,E,99,[[["self"]],[R[519]]]],[11,"clone",E,E,100,[[["self"]],[R[520]]]],[11,"clone",E,E,101,[[["self"]],[R[480]]]],[11,"clone",E,E,102,[[["self"]],[R[481]]]],[11,"clone",E,E,103,[[["self"]],[R[482]]]],[11,"clone",E,E,104,[[["self"]],["nlattr"]]],[11,"clone",E,E,105,[[["self"]],["rtentry"]]],[11,"clone",E,E,106,[[["self"]],["utmpx"]]],[11,"clone",E,E,140,[[["self"]],[R[527]]]],[11,"clone",E,E,107,[[["self"]],["sysinfo"]]],[11,"clone",E,E,108,[[["self"]],[R[521]]]],[11,"clone",E,E,109,[[["self"]],[R[433]]]],[11,"clone",E,E,110,[[["self"]],["statfs"]]],[11,"clone",E,E,111,[[["self"]],["flock"]]],[11,"clone",E,E,112,[[["self"]],["flock64"]]],[11,"clone",E,E,113,[[["self"]],[R[483]]]],[11,"clone",E,E,114,[[["self"]],["stack_t"]]],[11,"clone",E,E,115,[[["self"]],["stat"]]],[11,"clone",E,E,116,[[["self"]],["stat64"]]],[11,"clone",E,E,117,[[["self"]],[R[484]]]],[11,"clone",E,E,118,[[["self"]],[R[434]]]],[11,"clone",E,E,141,[[["self"]],[R[485]]]],[11,"clone",E,E,119,[[["self"]],[R[486]]]],[11,"clone",E,E,120,[[["self"]],[R[487]]]],[11,"clone",E,E,121,[[["self"]],[R[488]]]],[11,"clone",E,E,122,[[["self"]],[R[489]]]],[11,"clone",E,E,123,[[["self"]],["user"]]],[11,"clone",E,E,124,[[["self"]],[R[490]]]],[11,"clone",E,E,125,[[["self"]],[R[522]]]],[11,"clone",E,E,126,[[["self"]],[R[523]]]],[11,"clone",E,E,127,[[["self"]],[R[524]]]],[11,"clone",E,E,128,[[["self"]],[R[525]]]],[11,"clone",E,E,129,[[["self"]],[R[491]]]],[11,"clone",E,E,130,[[["self"]],[R[492]]]],[11,"clone",E,E,131,[[["self"]],["statvfs"]]],[11,"clone",E,E,142,[[["self"]],[R[493]]]],[11,"clone",E,E,143,[[["self"]],["sem_t"]]],[11,"clone",E,E,144,[[["self"]],[R[494]]]],[11,"clone",E,E,145,[[["self"]],[R[495]]]],[11,"clone",E,E,146,[[["self"]],[R[496]]]],[11,"clone",E,E,147,[[["self"]],[R[497]]]],[11,"clone",E,E,148,[[["self"]],[R[498]]]],[11,"clone",E,E,149,[[["self"]],[R[499]]]],[11,"clone",E,E,132,[[["self"]],[R[526]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[500]],[3,"rlimit"],[3,"rusage"],[3,R[436]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[437]],[3,"tms"],[3,"servent"],[3,R[501]],[3,"in_addr"],[3,"ip_mreq"],[3,R[438]],[3,R[502]],[3,R[439]],[3,R[440]],[3,R[503]],[3,R[441]],[3,"tm"],[3,R[442]],[3,"Dl_info"],[3,"lconv"],[3,R[443]],[3,"ifaddrs"],[3,"arpreq"],[3,R[445]],[3,"arphdr"],[3,"mmsghdr"],[3,R[446]],[3,R[447]],[3,R[448]],[3,"utsname"],[3,R[504]],[3,R[505]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[449]],[3,R[450]],[3,R[451]],[3,R[435]],[3,"msginfo"],[3,"sembuf"],[3,R[452]],[3,R[506]],[3,R[453]],[3,R[454]],[3,R[455]],[3,R[456]],[3,R[457]],[3,R[458]],[3,R[459]],[3,R[460]],[3,R[461]],[3,R[462]],[3,R[463]],[3,R[464]],[3,R[465]],[3,R[507]],[3,R[508]],[3,R[509]],[3,R[510]],[3,R[511]],[3,R[512]],[3,R[513]],[3,R[514]],[3,R[515]],[3,R[516]],[3,"ucred"],[3,"mntent"],[3,R[468]],[3,R[469]],[3,R[470]],[3,R[471]],[3,R[472]],[3,R[473]],[3,"dirent"],[3,R[517]],[3,R[474]],[3,R[475]],[3,"mq_attr"],[3,"statx"],[3,R[476]],[3,"aiocb"],[3,R[477]],[3,R[478]],[3,R[518]],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,R[479]],[3,R[519]],[3,R[520]],[3,R[480]],[3,R[481]],[3,R[482]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[521]],[3,R[433]],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,R[483]],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,R[484]],[3,R[434]],[3,R[486]],[3,R[487]],[3,R[488]],[3,R[489]],[3,"user"],[3,R[490]],[3,R[522]],[3,R[523]],[3,R[524]],[3,R[525]],[3,R[491]],[3,R[492]],[3,"statvfs"],[3,R[526]],[4,"c_void"],[3,"fd_set"],[3,R[444]],[3,"fsid_t"],[3,R[432]],[3,R[466]],[3,R[467]],[3,R[527]],[3,R[485]],[3,R[493]],[3,"sem_t"],[3,R[494]],[3,R[495]],[3,R[496]],[3,R[497]],[3,R[498]],[3,R[499]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[528]],[4,R[529]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,R[545],E,"Builder for `Record`.",N,N],[3,"Metadata",E,"Metadata about a log message.",N,N],[3,R[546],E,"Builder for `Metadata`.",N,N],[3,R[547],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[548],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,"Debug",E,"The \"debug\" level.",0,N],[13,"Trace",E,"The \"trace\" level.",0,N],[4,R[544],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[530]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[530]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[15],[R[531]]],[R[531]]]]],[5,"set_logger_racy",E,"A thread-unsafe version of [`set_logger`].",N,[[["log"]],[[R[15],[R[531]]],[R[531]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[[R[532]],["self"]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush",E,"Flushes any buffered records.",2,[[["self"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],[R[530]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[530]]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],[R[49],["level"]]]]],[11,R[567],E,R[539],3,[[],[R[534]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[535]]]],[11,R[532],E,"Metadata about the log directive.",3,[[["self"]],[R[532]]]],[11,"level",E,R[540],3,[[["self"]],["level"]]],[11,"target",E,R[541],3,[[["self"]],["str"]]],[11,R[536],E,"The module path of the message.",3,[[["self"]],[["str"],[R[49],["str"]]]]],[11,R[537],E,R[533],3,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"file",E,"The source file containing the message.",3,[[["self"]],[["str"],[R[49],["str"]]]]],[11,R[538],E,R[533],3,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"line",E,"The line containing the message.",3,[[["self"]],[["u32"],[R[49],["u32"]]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[534]]]],[11,"args",E,"Set `args`.",4,[[[R[535]],["self"]],[R[534]]]],[11,R[532],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],[R[532]]],[R[534]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[534]]]],[11,"target",E,"Set `Metadata::target`",4,[[["self"],["str"]],[R[534]]]],[11,R[536],E,"Set `module_path`",4,[[["self"],["str"],[R[49],["str"]]],[R[534]]]],[11,R[537],E,"Set `module_path` to a `'static` string",4,[[["self"],[R[49],["str"]],["str"]],[R[534]]]],[11,"file",E,"Set `file`",4,[[["self"],["str"],[R[49],["str"]]],[R[534]]]],[11,R[538],E,"Set `file` to a `'static` string.",4,[[["self"],[R[49],["str"]],["str"]],[R[534]]]],[11,"line",E,"Set `line`",4,[[["self"],["u32"],[R[49],["u32"]]],[R[534]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,R[567],E,R[539],5,[[],[R[542]]]],[11,"level",E,R[540],5,[[["self"]],["level"]]],[11,"target",E,R[541],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[542]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[542]]]],[11,"target",E,"Setter for `target`.",6,[[["self"],["str"]],[R[542]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[532]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,1,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,7,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[R[15]]]],[11,"eq",E,E,0,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,0,[[[R[530]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[530]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,5,[[[R[532]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[532]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[542]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[542]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[543]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[543]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["level"]],[R[37]]]],[11,"cmp",E,E,1,[[[R[530]],["self"]],[R[37]]]],[11,"cmp",E,E,5,[[[R[532]],["self"]],[R[37]]]],[11,"cmp",E,E,6,[[[R[542]],["self"]],[R[37]]]],[11,R[61],E,E,0,[[["self"],["level"]],[[R[37]],[R[49],[R[37]]]]]],[11,"lt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"le",E,E,0,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["level"]],["bool"]]],[11,R[61],E,E,0,[[[R[530]],["self"]],[[R[37]],[R[49],[R[37]]]]]],[11,"lt",E,E,0,[[[R[530]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[530]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[530]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[530]],["self"]],["bool"]]],[11,R[61],E,E,1,[[[R[530]],["self"]],[[R[37]],[R[49],[R[37]]]]]],[11,"lt",E,E,1,[[[R[530]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[530]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[530]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[530]],["self"]],["bool"]]],[11,R[61],E,E,1,[[["self"],["level"]],[[R[37]],[R[49],[R[37]]]]]],[11,"lt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"le",E,E,1,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["level"]],["bool"]]],[11,R[61],E,E,5,[[[R[532]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,5,[[[R[532]],["self"]],["bool"]]],[11,"le",E,E,5,[[[R[532]],["self"]],["bool"]]],[11,"gt",E,E,5,[[[R[532]],["self"]],["bool"]]],[11,"ge",E,E,5,[[[R[532]],["self"]],["bool"]]],[11,R[61],E,E,6,[[[R[542]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,6,[[[R[542]],["self"]],["bool"]]],[11,"le",E,E,6,[[[R[542]],["self"]],["bool"]]],[11,"gt",E,E,6,[[[R[542]],["self"]],["bool"]]],[11,"ge",E,E,6,[[[R[542]],["self"]],["bool"]]],[11,R[1355],E,E,0,[[["str"]],[["level"],[R[15],["level"]]]]],[11,R[1355],E,E,1,[[["str"]],[[R[530]],[R[15],[R[530]]]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[530]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[532]]]]],"p":[[4,"Level"],[4,R[544]],[8,"Log"],[3,"Record"],[3,R[545]],[3,"Metadata"],[3,R[546]],[3,R[547]],[3,R[548]]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[404],N,[[["u8"]],["memchr"]]],[5,"memchr2_iter",E,R[403],N,[[["u8"]],["memchr2"]]],[5,"memchr3_iter",E,R[403],N,[[["u8"]],["memchr3"]]],[5,"memrchr_iter",E,R[404],N,[[["u8"]],[["memchr"],["rev",["memchr"]]]]],[5,"memrchr2_iter",E,R[403],N,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter",E,R[403],N,[[["u8"]],[["memchr3"],["rev",["memchr3"]]]]],[5,"memchr",E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[[R[49],["usize"]],["usize"]]]],[5,"memchr2",E,"Like `memchr`, but searches for either of two bytes…",N,[[["u8"]],[[R[49],["usize"]],["usize"]]]],[5,"memchr3",E,"Like `memchr`, but searches for any of three bytes instead…",N,[[["u8"]],[[R[49],["usize"]],["usize"]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[[R[49],["usize"]],["usize"]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for either of two bytes…",N,[[["u8"]],[[R[49],["usize"]],["usize"]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for any of three bytes…",N,[[["u8"]],[[R[49],["usize"]],["usize"]]]],[11,"new",E,R[405],0,[[["u8"]],["memchr"]]],[11,"new",E,R[405],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[50],E,E,0,[[],["i"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[50],E,E,1,[[],["i"]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[50],E,E,2,[[],["i"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"next",E,E,0,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,2,[[["self"]]]],[11,R[55],E,E,0,[[["self"]],[R[49]]]],[11,R[55],E,E,1,[[["self"]],[R[49]]]],[11,R[55],E,E,2,[[["self"]],[R[49]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","i":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys",E,E,0,N],[13,"InvalidPath",E,E,0,N],[13,R[1194],E,"The operation involved a conversion to Rust's native…",0,N],[13,"UnsupportedOperation",E,"The operation is not supported by Nix, in this instance…",0,N],[0,"dir",E,E,N,N],[3,"Dir",R[1118],"An open directory.",N,N],[3,"Iter",E,E,N,N],[3,"Entry",E,"A directory entry, similar to `std::fs::DirEntry`.",N,N],[4,"Type",E,E,N,N],[13,"Fifo",E,E,1,N],[13,"CharacterDevice",E,E,1,N],[13,"Directory",E,E,1,N],[13,"BlockDevice",E,E,1,N],[13,"File",E,E,1,N],[13,"Symlink",E,E,1,N],[13,"Socket",E,E,1,N],[11,"open",E,"Opens the given path as with `fcntl::open`.",2,[[["mode"],["p"],["oflag"]],[R[15]]]],[11,"openat",E,"Opens the given path as with `fcntl::openat`.",2,[[["rawfd"],["mode"],["oflag"],["p"]],[R[15]]]],[11,"from",E,"Converts from a descriptor-based object, closing the…",2,[[["intorawfd"]],[R[15]]]],[11,"from_fd",E,"Converts from a file descriptor, closing it on success or…",2,[[["rawfd"]],[R[15]]]],[11,"iter",E,"Returns an iterator of `Result<Entry>` which rewinds when…",2,[[["self"]],["iter"]]],[11,"ino",E,"Returns the inode number (`d_ino`) of the underlying…",3,[[["self"]],["u64"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",3,[[["self"]],["cstr"]]],[11,"file_type",E,"Returns the type of this directory entry, if known.",3,[[["self"]],[["type"],[R[49],["type"]]]]],[0,"errno","nix",E,N,N],[4,"Errno",R[1101],E,N,N],[13,"UnknownErrno",E,E,4,N],[13,"EPERM",E,E,4,N],[13,"ENOENT",E,E,4,N],[13,"ESRCH",E,E,4,N],[13,"EINTR",E,E,4,N],[13,"EIO",E,E,4,N],[13,"ENXIO",E,E,4,N],[13,"E2BIG",E,E,4,N],[13,"ENOEXEC",E,E,4,N],[13,"EBADF",E,E,4,N],[13,"ECHILD",E,E,4,N],[13,"EAGAIN",E,E,4,N],[13,"ENOMEM",E,E,4,N],[13,"EACCES",E,E,4,N],[13,"EFAULT",E,E,4,N],[13,"ENOTBLK",E,E,4,N],[13,"EBUSY",E,E,4,N],[13,"EEXIST",E,E,4,N],[13,"EXDEV",E,E,4,N],[13,"ENODEV",E,E,4,N],[13,"ENOTDIR",E,E,4,N],[13,"EISDIR",E,E,4,N],[13,"EINVAL",E,E,4,N],[13,"ENFILE",E,E,4,N],[13,"EMFILE",E,E,4,N],[13,"ENOTTY",E,E,4,N],[13,"ETXTBSY",E,E,4,N],[13,"EFBIG",E,E,4,N],[13,"ENOSPC",E,E,4,N],[13,"ESPIPE",E,E,4,N],[13,"EROFS",E,E,4,N],[13,"EMLINK",E,E,4,N],[13,"EPIPE",E,E,4,N],[13,"EDOM",E,E,4,N],[13,"ERANGE",E,E,4,N],[13,"EDEADLK",E,E,4,N],[13,R[577],E,E,4,N],[13,"ENOLCK",E,E,4,N],[13,"ENOSYS",E,E,4,N],[13,R[578],E,E,4,N],[13,"ELOOP",E,E,4,N],[13,"ENOMSG",E,E,4,N],[13,"EIDRM",E,E,4,N],[13,"ECHRNG",E,E,4,N],[13,"EL2NSYNC",E,E,4,N],[13,"EL3HLT",E,E,4,N],[13,"EL3RST",E,E,4,N],[13,"ELNRNG",E,E,4,N],[13,"EUNATCH",E,E,4,N],[13,"ENOCSI",E,E,4,N],[13,"EL2HLT",E,E,4,N],[13,"EBADE",E,E,4,N],[13,"EBADR",E,E,4,N],[13,"EXFULL",E,E,4,N],[13,"ENOANO",E,E,4,N],[13,"EBADRQC",E,E,4,N],[13,"EBADSLT",E,E,4,N],[13,"EBFONT",E,E,4,N],[13,"ENOSTR",E,E,4,N],[13,"ENODATA",E,E,4,N],[13,"ETIME",E,E,4,N],[13,"ENOSR",E,E,4,N],[13,"ENONET",E,E,4,N],[13,"ENOPKG",E,E,4,N],[13,"EREMOTE",E,E,4,N],[13,"ENOLINK",E,E,4,N],[13,"EADV",E,E,4,N],[13,"ESRMNT",E,E,4,N],[13,"ECOMM",E,E,4,N],[13,"EPROTO",E,E,4,N],[13,R[579],E,E,4,N],[13,"EDOTDOT",E,E,4,N],[13,"EBADMSG",E,E,4,N],[13,R[580],E,E,4,N],[13,"ENOTUNIQ",E,E,4,N],[13,"EBADFD",E,E,4,N],[13,"EREMCHG",E,E,4,N],[13,"ELIBACC",E,E,4,N],[13,"ELIBBAD",E,E,4,N],[13,"ELIBSCN",E,E,4,N],[13,"ELIBMAX",E,E,4,N],[13,"ELIBEXEC",E,E,4,N],[13,"EILSEQ",E,E,4,N],[13,"ERESTART",E,E,4,N],[13,"ESTRPIPE",E,E,4,N],[13,"EUSERS",E,E,4,N],[13,"ENOTSOCK",E,E,4,N],[13,R[581],E,E,4,N],[13,"EMSGSIZE",E,E,4,N],[13,R[582],E,E,4,N],[13,R[583],E,E,4,N],[13,R[584],E,E,4,N],[13,R[585],E,E,4,N],[13,R[586],E,E,4,N],[13,R[587],E,E,4,N],[13,R[588],E,E,4,N],[13,R[589],E,E,4,N],[13,R[590],E,E,4,N],[13,"ENETDOWN",E,E,4,N],[13,R[591],E,E,4,N],[13,R[592],E,E,4,N],[13,R[593],E,E,4,N],[13,R[594],E,E,4,N],[13,"ENOBUFS",E,E,4,N],[13,"EISCONN",E,E,4,N],[13,"ENOTCONN",E,E,4,N],[13,R[595],E,E,4,N],[13,R[596],E,E,4,N],[13,R[597],E,E,4,N],[13,R[598],E,E,4,N],[13,R[599],E,E,4,N],[13,R[600],E,E,4,N],[13,"EALREADY",E,E,4,N],[13,R[601],E,E,4,N],[13,"ESTALE",E,E,4,N],[13,"EUCLEAN",E,E,4,N],[13,"ENOTNAM",E,E,4,N],[13,"ENAVAIL",E,E,4,N],[13,"EISNAM",E,E,4,N],[13,R[602],E,E,4,N],[13,"EDQUOT",E,E,4,N],[13,R[603],E,E,4,N],[13,R[604],E,E,4,N],[13,R[605],E,E,4,N],[13,"ENOKEY",E,E,4,N],[13,R[606],E,E,4,N],[13,R[607],E,E,4,N],[13,R[608],E,E,4,N],[13,R[609],E,E,4,N],[13,R[610],E,E,4,N],[13,"ERFKILL",E,E,4,N],[13,R[611],E,E,4,N],[5,R[986],E,E,N,[[["i32"]],["errno"]]],[5,"errno",E,"Returns the platform-specific value of errno",N,[[],["i32"]]],[17,R[612],E,E,N,N],[17,R[613],E,E,N,N],[17,"ENOTSUP",E,E,N,N],[8,R[1134],E,"The sentinel value indicates that a function failed and…",N,N],[10,"sentinel",E,E,5,[[],["self"]]],[11,"last",E,E,4,[[],["self"]]],[11,"desc",E,E,4,[[],["str"]]],[11,R[986],E,E,4,[[["i32"]],["errno"]]],[11,"clear",E,E,4,[[]]],[11,R[15],E,"Returns `Ok(value)` if it does not contain the sentinel…",4,[[[R[614]],[R[615]]],[[R[614]],[R[15]],[R[615]]]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix",E,N,N],[3,"AtFlags",R[1098],E,N,N],[3,"OFlag",E,"Configuration options for opened files.",N,N],[3,"SealFlag",E,"Additional flags for file sealing, which allows for…",N,N],[3,"FdFlag",E,"Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[3,R[1135],E,"Additional flags to `splice` and friends.",N,N],[3,R[1136],E,"Mode argument flags for fallocate determining operation…",N,N],[4,"FcntlArg",E,E,N,N],[13,"F_DUPFD",E,E,6,N],[13,R[616],E,E,6,N],[13,"F_GETFD",E,E,6,N],[13,"F_SETFD",E,E,6,N],[13,"F_GETFL",E,E,6,N],[13,"F_SETFL",E,E,6,N],[13,"F_SETLK",E,E,6,N],[13,"F_SETLKW",E,E,6,N],[13,"F_GETLK",E,E,6,N],[13,"F_OFD_SETLK",E,E,6,N],[13,"F_OFD_SETLKW",E,E,6,N],[13,"F_OFD_GETLK",E,E,6,N],[13,R[617],E,E,6,N],[13,R[618],E,E,6,N],[13,R[619],E,E,6,N],[13,R[620],E,E,6,N],[4,"FlockArg",E,E,N,N],[13,"LockShared",E,E,7,N],[13,"LockExclusive",E,E,7,N],[13,"Unlock",E,E,7,N],[13,"LockSharedNonblock",E,E,7,N],[13,"LockExclusiveNonblock",E,E,7,N],[13,"UnlockNonblock",E,E,7,N],[5,"open",E,E,N,[[["mode"],["p"],["oflag"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"openat",E,E,N,[[["rawfd"],["mode"],["oflag"],["p"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"readlink",E,E,N,[[["p"]],[["osstr"],[R[15],["osstr"]]]]],[5,R[621],E,E,N,[[["p"],["rawfd"]],[["osstr"],[R[15],["osstr"]]]]],[5,"fcntl",E,E,N,[[["fcntlarg"],["rawfd"]],[["c_int"],[R[15],["c_int"]]]]],[5,"flock",E,E,N,[[["flockarg"],["rawfd"]],[R[15]]]],[5,"splice",E,E,N,[[["rawfd"],["usize"],[R[622]],["loff_t"],[R[49],["loff_t"]]],[[R[15],["usize"]],["usize"]]]],[5,"tee",E,E,N,[[[R[622]],["usize"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"vmsplice",E,E,N,[[[R[622]],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,R[623],E,"Manipulates file space.",N,[[["rawfd"],["off_t"],[R[671]]],[["c_int"],[R[15],["c_int"]]]]],[18,R[624],E,E,8,N],[18,R[625],E,E,8,N],[18,R[626],E,E,8,N],[11,"empty",E,R[636],8,[[],[R[627]]]],[11,"all",E,R[637],8,[[],[R[627]]]],[11,"bits",E,R[638],8,[[["self"]],["c_int"]]],[11,R[639],E,R[640],8,[[["c_int"]],[[R[627]],[R[49],[R[627]]]]]],[11,R[641],E,R[642],8,[[["c_int"]],[R[627]]]],[11,R[643],E,R[644],8,[[["c_int"]],[R[627]]]],[11,R[166],E,R[645],8,[[["self"]],["bool"]]],[11,"is_all",E,R[646],8,[[["self"]],["bool"]]],[11,R[647],E,R[648],8,[[[R[627]],["self"]],["bool"]]],[11,R[649],E,R[650],8,[[[R[627]],["self"]],["bool"]]],[11,R[5],E,R[651],8,[[[R[627]],["self"]]]],[11,"remove",E,R[652],8,[[[R[627]],["self"]]]],[11,"toggle",E,R[653],8,[[[R[627]],["self"]]]],[11,"set",E,R[654],8,[[[R[627]],["self"],["bool"]]]],[18,R[628],E,"Mask for the access mode of the file.",9,N],[18,"O_APPEND",E,"Open the file in append-only mode.",9,N],[18,"O_ASYNC",E,"Generate a signal when input or output becomes possible.",9,N],[18,R[629],E,"Closes the file descriptor once an `execve` call is made.",9,N],[18,"O_CREAT",E,"Create the file if it does not exist.",9,N],[18,"O_DIRECT",E,"Try to minimize cache effects of the I/O for this file.",9,N],[18,R[630],E,"If the specified path isn't a directory, fail.",9,N],[18,"O_DSYNC",E,"Implicitly follow each `write()` with an `fdatasync()`.",9,N],[18,"O_EXCL",E,"Error out if a file was not created.",9,N],[18,"O_FSYNC",E,"Same as `O_SYNC`.",9,N],[18,R[631],E,"Allow files whose sizes can't be represented in an `off_t`…",9,N],[18,R[632],E,"Do not update the file last access time during `read(2)`s.",9,N],[18,"O_NOCTTY",E,"Don't attach the device as the process' controlling…",9,N],[18,"O_NDELAY",E,"Same as `O_NONBLOCK`.",9,N],[18,R[633],E,"`open()` will fail if the given path is a symbolic link.",9,N],[18,R[634],E,"When possible, open the file in nonblocking mode.",9,N],[18,"O_PATH",E,"Obtain a file descriptor for low-level access.",9,N],[18,R[710],E,"Only allow reading.",9,N],[18,"O_RDWR",E,"Allow both reading and writing.",9,N],[18,"O_RSYNC",E,"Similar to `O_DSYNC` but applies to `read`s instead.",9,N],[18,"O_SYNC",E,"Implicitly follow each `write()` with an `fsync()`.",9,N],[18,R[635],E,"Create an unnamed temporary file.",9,N],[18,"O_TRUNC",E,"Truncate an existing regular file to 0 length if it allows…",9,N],[18,R[711],E,"Only allow writing.",9,N],[11,"empty",E,R[636],9,[[],["oflag"]]],[11,"all",E,R[637],9,[[],["oflag"]]],[11,"bits",E,R[638],9,[[["self"]],["c_int"]]],[11,R[639],E,R[640],9,[[["c_int"]],[[R[49],["oflag"]],["oflag"]]]],[11,R[641],E,R[642],9,[[["c_int"]],["oflag"]]],[11,R[643],E,R[644],9,[[["c_int"]],["oflag"]]],[11,R[166],E,R[645],9,[[["self"]],["bool"]]],[11,"is_all",E,R[646],9,[[["self"]],["bool"]]],[11,R[647],E,R[648],9,[[["self"],["oflag"]],["bool"]]],[11,R[649],E,R[650],9,[[["self"],["oflag"]],["bool"]]],[11,R[5],E,R[651],9,[[["self"],["oflag"]]]],[11,"remove",E,R[652],9,[[["self"],["oflag"]]]],[11,"toggle",E,R[653],9,[[["self"],["oflag"]]]],[11,"set",E,R[654],9,[[["self"],["oflag"],["bool"]]]],[18,R[655],E,"Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",10,N],[18,R[656],E,"The file cannot be reduced in size.",10,N],[18,R[657],E,"The size of the file cannot be increased.",10,N],[18,R[658],E,"The file contents cannot be modified.",10,N],[11,"empty",E,R[636],10,[[],[R[659]]]],[11,"all",E,R[637],10,[[],[R[659]]]],[11,"bits",E,R[638],10,[[["self"]],["c_int"]]],[11,R[639],E,R[640],10,[[["c_int"]],[[R[49],[R[659]]],[R[659]]]]],[11,R[641],E,R[642],10,[[["c_int"]],[R[659]]]],[11,R[643],E,R[644],10,[[["c_int"]],[R[659]]]],[11,R[166],E,R[645],10,[[["self"]],["bool"]]],[11,"is_all",E,R[646],10,[[["self"]],["bool"]]],[11,R[647],E,R[648],10,[[["self"],[R[659]]],["bool"]]],[11,R[649],E,R[650],10,[[["self"],[R[659]]],["bool"]]],[11,R[5],E,R[651],10,[[["self"],[R[659]]]]],[11,"remove",E,R[652],10,[[["self"],[R[659]]]]],[11,"toggle",E,R[653],10,[[["self"],[R[659]]]]],[11,"set",E,R[654],10,[[["bool"],["self"],[R[659]]]]],[18,R[660],E,"The file descriptor will automatically be closed during a…",11,N],[11,"empty",E,R[636],11,[[],["fdflag"]]],[11,"all",E,R[637],11,[[],["fdflag"]]],[11,"bits",E,R[638],11,[[["self"]],["c_int"]]],[11,R[639],E,R[640],11,[[["c_int"]],[[R[49],["fdflag"]],["fdflag"]]]],[11,R[641],E,R[642],11,[[["c_int"]],["fdflag"]]],[11,R[643],E,R[644],11,[[["c_int"]],["fdflag"]]],[11,R[166],E,R[645],11,[[["self"]],["bool"]]],[11,"is_all",E,R[646],11,[[["self"]],["bool"]]],[11,R[647],E,R[648],11,[[["self"],["fdflag"]],["bool"]]],[11,R[649],E,R[650],11,[[["self"],["fdflag"]],["bool"]]],[11,R[5],E,R[651],11,[[["self"],["fdflag"]]]],[11,"remove",E,R[652],11,[[["self"],["fdflag"]]]],[11,"toggle",E,R[653],11,[[["self"],["fdflag"]]]],[11,"set",E,R[654],11,[[["bool"],["self"],["fdflag"]]]],[18,R[661],E,"Request that pages be moved instead of copied.",12,N],[18,R[662],E,"Do not block on I/O.",12,N],[18,R[663],E,"Hint that more data will be coming in a subsequent splice.",12,N],[18,R[664],E,"Gift the user pages to the kernel.",12,N],[11,"empty",E,R[636],12,[[],[R[622]]]],[11,"all",E,R[637],12,[[],[R[622]]]],[11,"bits",E,R[638],12,[[["self"]],["c_uint"]]],[11,R[639],E,R[640],12,[[["c_uint"]],[[R[622]],[R[49],[R[622]]]]]],[11,R[641],E,R[642],12,[[["c_uint"]],[R[622]]]],[11,R[643],E,R[644],12,[[["c_uint"]],[R[622]]]],[11,R[166],E,R[645],12,[[["self"]],["bool"]]],[11,"is_all",E,R[646],12,[[["self"]],["bool"]]],[11,R[647],E,R[648],12,[[["self"],[R[622]]],["bool"]]],[11,R[649],E,R[650],12,[[["self"],[R[622]]],["bool"]]],[11,R[5],E,R[651],12,[[["self"],[R[622]]]]],[11,"remove",E,R[652],12,[[["self"],[R[622]]]]],[11,"toggle",E,R[653],12,[[["self"],[R[622]]]]],[11,"set",E,R[654],12,[[["bool"],["self"],[R[622]]]]],[18,R[665],E,"File size is not changed.",13,N],[18,R[666],E,"Deallocates space by creating a hole.",13,N],[18,R[667],E,"Removes byte range from a file without leaving a hole.",13,N],[18,R[668],E,"Zeroes space in specified byte range.",13,N],[18,R[669],E,"Increases file space by inserting a hole within the file…",13,N],[18,R[670],E,"Shared file data extants are made private to the file.",13,N],[11,"empty",E,R[636],13,[[],[R[671]]]],[11,"all",E,R[637],13,[[],[R[671]]]],[11,"bits",E,R[638],13,[[["self"]],["c_int"]]],[11,R[639],E,R[640],13,[[["c_int"]],[[R[49],[R[671]]],[R[671]]]]],[11,R[641],E,R[642],13,[[["c_int"]],[R[671]]]],[11,R[643],E,R[644],13,[[["c_int"]],[R[671]]]],[11,R[166],E,R[645],13,[[["self"]],["bool"]]],[11,"is_all",E,R[646],13,[[["self"]],["bool"]]],[11,R[647],E,R[648],13,[[["self"],[R[671]]],["bool"]]],[11,R[649],E,R[650],13,[[["self"],[R[671]]],["bool"]]],[11,R[5],E,R[651],13,[[["self"],[R[671]]]]],[11,"remove",E,R[652],13,[[["self"],[R[671]]]]],[11,"toggle",E,R[653],13,[[["self"],[R[671]]]]],[11,"set",E,R[654],13,[[["bool"],["self"],[R[671]]]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,R[1137],R[1062],"Describes a single address for an interface as returned by…",N,N],[12,"interface_name",E,"Name of the network interface",14,N],[12,"flags",E,"Flags as from `SIOCGIFFLAGS` ioctl",14,N],[12,"address",E,"Network address of this interface",14,N],[12,"netmask",E,"Netmask of this interface",14,N],[12,"broadcast",E,"Broadcast address of this interface, if applicable",14,N],[12,"destination",E,"Point-to-point destination address",14,N],[3,R[1171],E,"Holds the results of `getifaddrs`.",N,N],[5,R[672],E,"Get interface addresses using libc's `getifaddrs`",N,[[],[[R[673]],[R[15],[R[673]]]]]],[0,"kmod","nix","Load and unload kernel modules.",N,N],[3,R[1138],R[1102],"Flags used by the `finit_module` function.",N,N],[3,R[1139],E,"Flags used by `delete_module`.",N,N],[5,"init_module",E,"Loads a kernel module from a buffer.",N,[[["cstr"]],[R[15]]]],[5,"finit_module",E,"Loads a kernel module from a given file descriptor.",N,[[["cstr"],[T],[R[676]]],[R[15]]]],[5,"delete_module",E,"Unloads the kernel module with the given name.",N,[[["cstr"],[R[677]]],[R[15]]]],[18,R[674],E,"Ignore symbol version hashes.",15,N],[18,R[675],E,"Ignore kernel version magic.",15,N],[11,"empty",E,R[636],15,[[],[R[676]]]],[11,"all",E,R[637],15,[[],[R[676]]]],[11,"bits",E,R[638],15,[[["self"]],["c_uint"]]],[11,R[639],E,R[640],15,[[["c_uint"]],[[R[49],[R[676]]],[R[676]]]]],[11,R[641],E,R[642],15,[[["c_uint"]],[R[676]]]],[11,R[643],E,R[644],15,[[["c_uint"]],[R[676]]]],[11,R[166],E,R[645],15,[[["self"]],["bool"]]],[11,"is_all",E,R[646],15,[[["self"]],["bool"]]],[11,R[647],E,R[648],15,[[["self"],[R[676]]],["bool"]]],[11,R[649],E,R[650],15,[[["self"],[R[676]]],["bool"]]],[11,R[5],E,R[651],15,[[["self"],[R[676]]]]],[11,"remove",E,R[652],15,[[["self"],[R[676]]]]],[11,"toggle",E,R[653],15,[[["self"],[R[676]]]]],[11,"set",E,R[654],15,[[["bool"],["self"],[R[676]]]]],[18,R[634],E,E,16,N],[18,"O_TRUNC",E,E,16,N],[11,"empty",E,R[636],16,[[],[R[677]]]],[11,"all",E,R[637],16,[[],[R[677]]]],[11,"bits",E,R[638],16,[[["self"]],["c_int"]]],[11,R[639],E,R[640],16,[[["c_int"]],[[R[49],[R[677]]],[R[677]]]]],[11,R[641],E,R[642],16,[[["c_int"]],[R[677]]]],[11,R[643],E,R[644],16,[[["c_int"]],[R[677]]]],[11,R[166],E,R[645],16,[[["self"]],["bool"]]],[11,"is_all",E,R[646],16,[[["self"]],["bool"]]],[11,R[647],E,R[648],16,[[[R[677]],["self"]],["bool"]]],[11,R[649],E,R[650],16,[[[R[677]],["self"]],["bool"]]],[11,R[5],E,R[651],16,[[["self"],[R[677]]]]],[11,"remove",E,R[652],16,[[["self"],[R[677]]]]],[11,"toggle",E,R[653],16,[[["self"],[R[677]]]]],[11,"set",E,R[654],16,[[["self"],[R[677]],["bool"]]]],[0,"mount","nix",E,N,N],[3,"MsFlags",R[1099],E,N,N],[3,"MntFlags",E,E,N,N],[5,"mount",E,E,N,[[[R[701]],[R[49]],["p1"],["p3"],[R[49]],[R[49]],["p4"],["p2"]],[R[15]]]],[5,"umount",E,E,N,[[["p"]],[R[15]]]],[5,"umount2",E,E,N,[[[R[705]],["p"]],[R[15]]]],[18,R[678],E,"Mount read-only",17,N],[18,R[679],E,"Ignore suid and sgid bits",17,N],[18,"MS_NODEV",E,"Disallow access to device special files",17,N],[18,R[680],E,"Disallow program execution",17,N],[18,R[681],E,"Writes are synced at once",17,N],[18,R[682],E,"Alter flags of a mounted FS",17,N],[18,R[683],E,"Allow mandatory locks on a FS",17,N],[18,R[684],E,"Directory modifications are synchronous",17,N],[18,R[685],E,"Do not update access times",17,N],[18,R[686],E,"Do not update directory access times",17,N],[18,"MS_BIND",E,"Linux 2.4.0 - Bind directory at different place",17,N],[18,"MS_MOVE",E,E,17,N],[18,"MS_REC",E,E,17,N],[18,R[687],E,E,17,N],[18,R[688],E,E,17,N],[18,R[689],E,E,17,N],[18,R[690],E,E,17,N],[18,"MS_SLAVE",E,E,17,N],[18,R[691],E,E,17,N],[18,R[692],E,E,17,N],[18,R[693],E,E,17,N],[18,R[694],E,E,17,N],[18,R[695],E,E,17,N],[18,R[696],E,E,17,N],[18,R[697],E,E,17,N],[18,R[698],E,E,17,N],[18,R[699],E,E,17,N],[18,R[700],E,E,17,N],[11,"empty",E,R[636],17,[[],[R[701]]]],[11,"all",E,R[637],17,[[],[R[701]]]],[11,"bits",E,R[638],17,[[["self"]],["c_ulong"]]],[11,R[639],E,R[640],17,[[["c_ulong"]],[[R[49],[R[701]]],[R[701]]]]],[11,R[641],E,R[642],17,[[["c_ulong"]],[R[701]]]],[11,R[643],E,R[644],17,[[["c_ulong"]],[R[701]]]],[11,R[166],E,R[645],17,[[["self"]],["bool"]]],[11,"is_all",E,R[646],17,[[["self"]],["bool"]]],[11,R[647],E,R[648],17,[[[R[701]],["self"]],["bool"]]],[11,R[649],E,R[650],17,[[[R[701]],["self"]],["bool"]]],[11,R[5],E,R[651],17,[[[R[701]],["self"]]]],[11,"remove",E,R[652],17,[[[R[701]],["self"]]]],[11,"toggle",E,R[653],17,[[[R[701]],["self"]]]],[11,"set",E,R[654],17,[[[R[701]],["self"],["bool"]]]],[18,R[702],E,E,18,N],[18,R[703],E,E,18,N],[18,R[704],E,E,18,N],[11,"empty",E,R[636],18,[[],[R[705]]]],[11,"all",E,R[637],18,[[],[R[705]]]],[11,"bits",E,R[638],18,[[["self"]],["c_int"]]],[11,R[639],E,R[640],18,[[["c_int"]],[[R[49],[R[705]]],[R[705]]]]],[11,R[641],E,R[642],18,[[["c_int"]],[R[705]]]],[11,R[643],E,R[644],18,[[["c_int"]],[R[705]]]],[11,R[166],E,R[645],18,[[["self"]],["bool"]]],[11,"is_all",E,R[646],18,[[["self"]],["bool"]]],[11,R[647],E,R[648],18,[[[R[705]],["self"]],["bool"]]],[11,R[649],E,R[650],18,[[[R[705]],["self"]],["bool"]]],[11,R[5],E,R[651],18,[[[R[705]],["self"]]]],[11,"remove",E,R[652],18,[[[R[705]],["self"]]]],[11,"toggle",E,R[653],18,[[[R[705]],["self"]]]],[11,"set",E,R[654],18,[[[R[705]],["self"],["bool"]]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag",R[1063],E,N,N],[3,"FdFlag",E,E,N,N],[3,"MqAttr",E,E,N,N],[5,"mq_open",E,"Open a message queue",N,[[["mqattr"],["mode"],[R[712]],["cstring"],[R[49],["mqattr"]]],[[R[15],["mqd_t"]],["mqd_t"]]]],[5,R[706],E,"Remove a message queue",N,[[["cstring"]],[R[15]]]],[5,"mq_close",E,"Close a message queue",N,[[["mqd_t"]],[R[15]]]],[5,R[707],E,"Receive a message from a message queue",N,[[["u32"],["mqd_t"]],[[R[15],["usize"]],["usize"]]]],[5,"mq_send",E,"Send a message to a message queue",N,[[["u32"],["mqd_t"]],[R[15]]]],[5,R[708],E,"Get message queue attributes",N,[[["mqd_t"]],[["mqattr"],[R[15],["mqattr"]]]]],[5,R[709],E,"Set the attributes of the message queue. Only `O_NONBLOCK`…",N,[[["mqattr"],["mqd_t"]],[["mqattr"],[R[15],["mqattr"]]]]],[5,"mq_set_nonblock",E,"Convenience function. Sets the `O_NONBLOCK` attribute for…",N,[[["mqd_t"]],[["mqattr"],[R[15],["mqattr"]]]]],[5,"mq_remove_nonblock",E,"Convenience function. Removes `O_NONBLOCK` attribute for a…",N,[[["mqd_t"]],[["mqattr"],[R[15],["mqattr"]]]]],[18,R[710],E,E,19,N],[18,R[711],E,E,19,N],[18,"O_RDWR",E,E,19,N],[18,"O_CREAT",E,E,19,N],[18,"O_EXCL",E,E,19,N],[18,R[634],E,E,19,N],[18,R[629],E,E,19,N],[11,"empty",E,R[636],19,[[],[R[712]]]],[11,"all",E,R[637],19,[[],[R[712]]]],[11,"bits",E,R[638],19,[[["self"]],["c_int"]]],[11,R[639],E,R[640],19,[[["c_int"]],[[R[49],[R[712]]],[R[712]]]]],[11,R[641],E,R[642],19,[[["c_int"]],[R[712]]]],[11,R[643],E,R[644],19,[[["c_int"]],[R[712]]]],[11,R[166],E,R[645],19,[[["self"]],["bool"]]],[11,"is_all",E,R[646],19,[[["self"]],["bool"]]],[11,R[647],E,R[648],19,[[["self"],[R[712]]],["bool"]]],[11,R[649],E,R[650],19,[[["self"],[R[712]]],["bool"]]],[11,R[5],E,R[651],19,[[["self"],[R[712]]]]],[11,"remove",E,R[652],19,[[["self"],[R[712]]]]],[11,"toggle",E,R[653],19,[[["self"],[R[712]]]]],[11,"set",E,R[654],19,[[["self"],[R[712]],["bool"]]]],[18,R[660],E,E,20,N],[11,"empty",E,R[636],20,[[],["fdflag"]]],[11,"all",E,R[637],20,[[],["fdflag"]]],[11,"bits",E,R[638],20,[[["self"]],["c_int"]]],[11,R[639],E,R[640],20,[[["c_int"]],[["fdflag"],[R[49],["fdflag"]]]]],[11,R[641],E,R[642],20,[[["c_int"]],["fdflag"]]],[11,R[643],E,R[644],20,[[["c_int"]],["fdflag"]]],[11,R[166],E,R[645],20,[[["self"]],["bool"]]],[11,"is_all",E,R[646],20,[[["self"]],["bool"]]],[11,R[647],E,R[648],20,[[["fdflag"],["self"]],["bool"]]],[11,R[649],E,R[650],20,[[["fdflag"],["self"]],["bool"]]],[11,R[5],E,R[651],20,[[["fdflag"],["self"]]]],[11,"remove",E,R[652],20,[[["fdflag"],["self"]]]],[11,"toggle",E,R[653],20,[[["fdflag"],["self"]]]],[11,"set",E,R[654],20,[[["fdflag"],["self"],["bool"]]]],[11,"new",E,E,21,[[["c_long"]],["mqattr"]]],[11,"flags",E,E,21,[[["self"]],["c_long"]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,R[1140],R[1064],"Standard interface flags, used by `getifaddrs`",N,N],[5,R[713],E,"Resolve an interface into a interface number.",N,[[["p"]],[[R[15],["c_uint"]],["c_uint"]]]],[18,"IFF_UP",E,"Interface is running. (see `netdevice(7)`)",22,N],[18,R[714],E,"Valid broadcast address set. (see `netdevice(7)`)",22,N],[18,R[715],E,"Internal debugging flag. (see `netdevice(7)`)",22,N],[18,R[716],E,"Interface is a loopback interface. (see `netdevice(7)`)",22,N],[18,R[717],E,"Interface is a point-to-point link. (see `netdevice(7)`)",22,N],[18,R[718],E,"Avoid use of trailers. (see `netdevice(7)`)",22,N],[18,R[719],E,"Resources allocated. (see `netdevice(7)`)",22,N],[18,R[720],E,"No arp protocol, L2 destination address not set. (see…",22,N],[18,R[721],E,"Interface is in promiscuous mode. (see `netdevice(7)`)",22,N],[18,R[722],E,"Receive all multicast packets. (see `netdevice(7)`)",22,N],[18,R[723],E,"Master of a load balancing bundle. (see `netdevice(7)`)",22,N],[18,R[724],E,"Slave of a load balancing bundle. (see `netdevice(7)`)",22,N],[18,R[725],E,"Supports multicast. (see `netdevice(7)`)",22,N],[18,R[726],E,"Is able to select media type via ifmap. (see `netdevice(7)`)",22,N],[18,R[727],E,"Auto media selection active. (see `netdevice(7)`)",22,N],[18,R[728],E,"The addresses are lost when the interface goes down. (see…",22,N],[18,R[729],E,"Driver signals L1 up. Volatile.",22,N],[18,R[730],E,"Driver signals dormant. Volatile.",22,N],[18,"IFF_ECHO",E,"Echo sent packets. Volatile.",22,N],[18,R[731],E,"Do not provide packet information",22,N],[18,"IFF_TUN",E,"TUN device (no Ethernet headers) ",22,N],[18,"IFF_TAP",E,"TAP device",22,N],[11,"empty",E,R[636],22,[[],[R[732]]]],[11,"all",E,R[637],22,[[],[R[732]]]],[11,"bits",E,R[638],22,[[["self"]],["c_int"]]],[11,R[639],E,R[640],22,[[["c_int"]],[[R[49],[R[732]]],[R[732]]]]],[11,R[641],E,R[642],22,[[["c_int"]],[R[732]]]],[11,R[643],E,R[644],22,[[["c_int"]],[R[732]]]],[11,R[166],E,R[645],22,[[["self"]],["bool"]]],[11,"is_all",E,R[646],22,[[["self"]],["bool"]]],[11,R[647],E,R[648],22,[[["self"],[R[732]]],["bool"]]],[11,R[649],E,R[650],22,[[["self"],[R[732]]],["bool"]]],[11,R[5],E,R[651],22,[[["self"],[R[732]]]]],[11,"remove",E,R[652],22,[[["self"],[R[732]]]]],[11,"toggle",E,R[653],22,[[["self"],[R[732]]]]],[11,"set",E,R[654],22,[[["self"],[R[732]],["bool"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd",R[1103],"This is a wrapper around `libc::pollfd`.",N,N],[3,"PollFlags",E,"These flags define the different events that can be…",N,N],[5,"poll",E,"`poll` waits for one of a set of file descriptors to…",N,[[["c_int"]],[[R[15],["c_int"]],["c_int"]]]],[5,"ppoll",E,"`ppoll()` allows an application to safely wait until…",N,[[[R[500]],["sigset"]],[[R[15],["c_int"]],["c_int"]]]],[11,"new",E,"Creates a new `PollFd` specifying the events of interest…",23,[[[R[733]],["rawfd"]],["pollfd"]]],[11,"revents",E,"Returns the events that occured in the last call to `poll`…",23,[[["self"]],[[R[49],[R[733]]],[R[733]]]]],[18,"POLLIN",E,"There is data to read.",24,N],[18,"POLLPRI",E,"There is some exceptional condition on the file descriptor.",24,N],[18,"POLLOUT",E,"Writing is now possible, though a write larger that the…",24,N],[18,R[734],E,"Equivalent to `POLLIN`",24,N],[18,R[735],E,"Equivalent to `POLLOUT`",24,N],[18,R[736],E,"Priority band data can be read (generally unused on Linux).",24,N],[18,R[737],E,"Priority data may be written.",24,N],[18,"POLLERR",E,"Error condition (only returned in `PollFd::revents`;…",24,N],[18,"POLLHUP",E,"Hang up (only returned in `PollFd::revents`; ignored in…",24,N],[18,"POLLNVAL",E,"Invalid request: `fd` not open (only returned in…",24,N],[11,"empty",E,R[636],24,[[],[R[733]]]],[11,"all",E,R[637],24,[[],[R[733]]]],[11,"bits",E,R[638],24,[[["self"]],["c_short"]]],[11,R[639],E,R[640],24,[[["c_short"]],[[R[733]],[R[49],[R[733]]]]]],[11,R[641],E,R[642],24,[[["c_short"]],[R[733]]]],[11,R[643],E,R[644],24,[[["c_short"]],[R[733]]]],[11,R[166],E,R[645],24,[[["self"]],["bool"]]],[11,"is_all",E,R[646],24,[[["self"]],["bool"]]],[11,R[647],E,R[648],24,[[["self"],[R[733]]],["bool"]]],[11,R[649],E,R[650],24,[[["self"],[R[733]]],["bool"]]],[11,R[5],E,R[651],24,[[["self"],[R[733]]]]],[11,"remove",E,R[652],24,[[["self"],[R[733]]]]],[11,"toggle",E,R[653],24,[[["self"],[R[733]]]]],[11,"set",E,R[654],24,[[["bool"],["self"],[R[733]]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId",R[1132],E,N,N],[3,"Winsize",E,E,N,N],[12,"ws_row",E,E,25,N],[12,"ws_col",E,E,25,N],[12,R[738],E,E,25,N],[12,R[739],E,E,25,N],[3,R[1141],E,"Representation of a master/slave pty pair",N,N],[12,"master",E,R[740],26,N],[12,"slave",E,"The slave port in a virtual pty pair",26,N],[3,R[1142],E,"Representation of a master with a forked pty",N,N],[12,"master",E,R[740],27,N],[12,"fork_result",E,"Metadata about forked process",27,N],[3,"PtyMaster",E,"Representation of the Master device in a master/slave pty…",N,N],[5,"grantpt",E,"Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[[R[742]]],[R[15]]]],[5,R[741],E,"Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],[[R[15],[R[742]]],[R[742]]]]],[5,"ptsname",E,R[744],N,[[[R[742]]],[["string"],[R[15],["string"]]]]],[5,R[743],E,R[744],N,[[[R[742]]],[["string"],[R[15],["string"]]]]],[5,"unlockpt",E,"Unlock a pseudoterminal master/slave pseudoterminal pair…",N,[[[R[742]]],[R[15]]]],[5,"openpty",E,"Create a new pseudoterminal, returning the slave and…",N,[[[R[49],["winsize"]],[R[49],["termios"]],["into",[R[49]]],["into",[R[49]]]],[[R[15],[R[745]]],[R[745]]]]],[5,"forkpty",E,"Create a new pseudoterminal, returning the master file…",N,[[[R[49],["winsize"]],[R[49],["termios"]],["into",[R[49]]],["into",[R[49]]]],[[R[15],[R[746]]],[R[746]]]]],[0,"sched","nix",E,N,N],[3,"CloneFlags",R[1100],E,N,N],[3,"CpuSet",E,E,N,N],[5,R[747],E,E,N,[[["pid"],["cpuset"]],[R[15]]]],[5,R[748],E,"Explicitly yield the processor to other threads.",N,[[],[R[15]]]],[5,"clone",E,E,N,[[["c_int"],[R[749]],["clonecb"],[R[49],["c_int"]]],[[R[15],["pid"]],["pid"]]]],[5,"unshare",E,E,N,[[[R[749]]],[R[15]]]],[5,"setns",E,E,N,[[[R[749]],["rawfd"]],[R[15]]]],[6,"CloneCb",E,E,N,N],[18,"CLONE_VM",E,E,28,N],[18,"CLONE_FS",E,E,28,N],[18,R[750],E,E,28,N],[18,R[751],E,E,28,N],[18,R[752],E,E,28,N],[18,R[753],E,E,28,N],[18,R[754],E,E,28,N],[18,R[755],E,E,28,N],[18,R[756],E,E,28,N],[18,R[757],E,E,28,N],[18,R[758],E,E,28,N],[18,R[759],E,E,28,N],[18,R[760],E,E,28,N],[18,R[761],E,E,28,N],[18,R[762],E,E,28,N],[18,R[763],E,E,28,N],[18,R[764],E,E,28,N],[18,R[765],E,E,28,N],[18,R[766],E,E,28,N],[18,R[767],E,E,28,N],[18,R[768],E,E,28,N],[18,R[769],E,E,28,N],[18,"CLONE_IO",E,E,28,N],[11,"empty",E,R[636],28,[[],[R[749]]]],[11,"all",E,R[637],28,[[],[R[749]]]],[11,"bits",E,R[638],28,[[["self"]],["c_int"]]],[11,R[639],E,R[640],28,[[["c_int"]],[[R[49],[R[749]]],[R[749]]]]],[11,R[641],E,R[642],28,[[["c_int"]],[R[749]]]],[11,R[643],E,R[644],28,[[["c_int"]],[R[749]]]],[11,R[166],E,R[645],28,[[["self"]],["bool"]]],[11,"is_all",E,R[646],28,[[["self"]],["bool"]]],[11,R[647],E,R[648],28,[[["self"],[R[749]]],["bool"]]],[11,R[649],E,R[650],28,[[["self"],[R[749]]],["bool"]]],[11,R[5],E,R[651],28,[[["self"],[R[749]]]]],[11,"remove",E,R[652],28,[[["self"],[R[749]]]]],[11,"toggle",E,R[653],28,[[["self"],[R[749]]]]],[11,"set",E,R[654],28,[[["bool"],["self"],[R[749]]]]],[11,"new",E,E,29,[[],["cpuset"]]],[11,"is_set",E,E,29,[[["self"],["usize"]],[[R[15],["bool"]],["bool"]]]],[11,"set",E,E,29,[[["self"],["usize"]],[R[15]]]],[11,"unset",E,E,29,[[["self"],["usize"]],[R[15]]]],[0,"sys","nix",E,N,N],[0,"aio",R[794],"POSIX Asynchronous I/O",N,N],[3,"AioCb",R[1065],"AIO Control Block.",N,N],[3,"LioCb",E,"LIO Control Block.",N,N],[12,"aiocbs",E,"A collection of [`AioCb`]s. All of these will be issued…",30,N],[4,R[1143],E,"Mode for `AioCb::fsync`. Controls whether only data or…",N,N],[13,"O_SYNC",E,"do it like `fsync`",31,N],[13,"O_DSYNC",E,"on supported operating systems only, do it like `fdatasync`",31,N],[4,"LioOpcode",E,"When used with `lio_listio`, determines whether a given…",N,N],[13,"LIO_NOP",E,E,32,N],[13,R[770],E,E,32,N],[13,"LIO_READ",E,E,32,N],[4,"LioMode",E,"Mode for `lio_listio`",N,N],[13,"LIO_WAIT",E,"Requests that `lio_listio` block until all requested…",33,N],[13,R[771],E,"Requests that `lio_listio` return immediately",33,N],[4,R[1144],E,"Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled",E,"All outstanding requests were canceled",34,N],[13,"AioNotCanceled",E,"Some requests were not canceled. Their status should be…",34,N],[13,"AioAllDone",E,"All of the requests have already finished",34,N],[4,"Buffer",E,"Owns (uniquely or shared) a memory buffer to keep it from…",N,N],[13,"None",E,"No buffer to own.",35,N],[13,"Phantom",E,"Keeps a reference to a slice",35,N],[13,"BoxedSlice",E,"Generic thing that keeps a buffer from dropping",35,N],[13,"BoxedMutSlice",E,"Generic thing that keeps a mutable buffer from dropping",35,N],[5,"aio_cancel_all",E,"Cancels outstanding AIO requests for a given file…",N,[[["rawfd"]],[[R[15],[R[772]]],[R[772]]]]],[5,R[773],E,"Suspends the calling process until at least one of the…",N,[[[R[500]],[R[49],[R[500]]]],[R[15]]]],[11,"buffer",E,"Remove the inner `Buffer` and return it",36,[[["self"]],["buffer"]]],[11,"boxed_slice",E,"Remove the inner boxed slice, if any, and return it.",36,[[["self"]],[[R[49],["box"]],["box",[R[17]]]]]],[11,"boxed_mut_slice",E,"Remove the inner boxed mutable slice, if any, and return it.",36,[[["self"]],[["box",[R[776]]],[R[49],["box"]]]]],[11,"fd",E,"Returns the underlying file descriptor associated with the…",36,[[["self"]],["rawfd"]]],[11,"from_fd",E,"Constructs a new `AioCb` with no associated buffer.",36,[[[R[774]],["c_int"],["rawfd"]],["aiocb"]]],[11,R[1028],E,"Constructs a new `AioCb` from a mutable slice.",36,[[["off_t"],[R[774]],[R[775]],["c_int"],["rawfd"]],["aiocb"]]],[11,"from_boxed_slice",E,"The safest and most flexible way to create an `AioCb`.",36,[[["off_t"],[R[774]],[R[17]],[R[775]],["c_int"],["box",[R[17]]],["rawfd"]],["aiocb"]]],[11,"from_boxed_mut_slice",E,"The safest and most flexible way to create an `AioCb` for…",36,[[["off_t"],["box",[R[776]]],[R[774]],[R[775]],["c_int"],[R[776]],["rawfd"]],["aiocb"]]],[11,"from_mut_ptr",E,"Constructs a new `AioCb` from a mutable raw pointer",36,[[["off_t"],[R[774]],["usize"],[R[775]],["c_int"],["rawfd"]],["aiocb"]]],[11,"from_ptr",E,"Constructs a new `AioCb` from a raw pointer.",36,[[["off_t"],["usize"],[R[774]],[R[775]],["c_int"],["rawfd"]],["aiocb"]]],[11,R[777],E,"Like `from_mut_slice`, but works on constant slices rather…",36,[[["off_t"],[R[774]],[R[775]],["c_int"],["rawfd"]],["aiocb"]]],[11,"set_sigev_notify",E,"Update the notification settings for an existing `aiocb`",36,[[[R[774]],["self"]]]],[11,"cancel",E,"Cancels an outstanding AIO request.",36,[[["self"]],[[R[15],[R[772]]],[R[772]]]]],[11,"error",E,"Retrieve error status of an asynchronous operation.",36,[[["self"]],[R[15]]]],[11,"fsync",E,"An asynchronous version of `fsync(2)`.",36,[[["self"],[R[1104]]],[R[15]]]],[11,"lio_opcode",E,"Returns the `aiocb`'s `LioOpcode` field",36,[[["self"]],[[R[775]],[R[49],[R[775]]]]]],[11,"nbytes",E,"Returns the requested length of the aio operation in bytes",36,[[["self"]],["usize"]]],[11,"offset",E,"Returns the file offset stored in the `AioCb`",36,[[["self"]],["off_t"]]],[11,"priority",E,"Returns the priority of the `AioCb`",36,[[["self"]],["c_int"]]],[11,"read",E,"Asynchronously reads from a file descriptor into a buffer",36,[[["self"]],[R[15]]]],[11,R[504],E,"Returns the `SigEvent` stored in the `AioCb`",36,[[["self"]],[R[504]]]],[11,R[778],E,"Retrieve return status of an asynchronous operation.",36,[[["self"]],[["isize"],[R[15],["isize"]]]]],[11,"write",E,"Asynchronously writes from a buffer to a file descriptor",36,[[["self"]],[R[15]]]],[11,R[345],E,"Initialize an empty `LioCb`",30,[[["usize"]],["liocb"]]],[11,"listio",E,"Submits multiple asynchronous I/O requests with a single…",30,[[[R[774]],["self"],["liomode"]],[R[15]]]],[11,"listio_resubmit",E,"Resubmits any incomplete operations with [`lio_listio`].",30,[[[R[774]],["self"],["liomode"]],[R[15]]]],[11,R[778],E,"Collect final status for an individual `AioCb` submitted…",30,[[["self"],["usize"]],[["isize"],[R[15],["isize"]]]]],[11,"error",E,"Retrieve error status of an individual `AioCb` submitted…",30,[[["self"],["usize"]],[R[15]]]],[0,"epoll",R[794],E,N,N],[3,"EpollFlags",R[1066],E,N,N],[3,R[1145],E,E,N,N],[3,"EpollEvent",E,E,N,N],[4,"EpollOp",E,E,N,N],[13,"EpollCtlAdd",E,E,37,N],[13,"EpollCtlDel",E,E,37,N],[13,"EpollCtlMod",E,E,37,N],[5,R[779],E,E,N,[[],[["rawfd"],[R[15],["rawfd"]]]]],[5,R[780],E,E,N,[[[R[793]]],[["rawfd"],[R[15],["rawfd"]]]]],[5,R[781],E,E,N,[[["epollop"],[T],["rawfd"]],[R[15]]]],[5,R[782],E,E,N,[[["isize"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[18,"EPOLLIN",E,E,38,N],[18,"EPOLLPRI",E,E,38,N],[18,"EPOLLOUT",E,E,38,N],[18,R[783],E,E,38,N],[18,R[784],E,E,38,N],[18,R[785],E,E,38,N],[18,R[786],E,E,38,N],[18,"EPOLLMSG",E,E,38,N],[18,"EPOLLERR",E,E,38,N],[18,"EPOLLHUP",E,E,38,N],[18,R[787],E,E,38,N],[18,R[788],E,E,38,N],[18,R[789],E,E,38,N],[18,R[790],E,E,38,N],[18,"EPOLLET",E,E,38,N],[11,"empty",E,R[636],38,[[],[R[791]]]],[11,"all",E,R[637],38,[[],[R[791]]]],[11,"bits",E,R[638],38,[[["self"]],["c_int"]]],[11,R[639],E,R[640],38,[[["c_int"]],[[R[791]],[R[49],[R[791]]]]]],[11,R[641],E,R[642],38,[[["c_int"]],[R[791]]]],[11,R[643],E,R[644],38,[[["c_int"]],[R[791]]]],[11,R[166],E,R[645],38,[[["self"]],["bool"]]],[11,"is_all",E,R[646],38,[[["self"]],["bool"]]],[11,R[647],E,R[648],38,[[[R[791]],["self"]],["bool"]]],[11,R[649],E,R[650],38,[[[R[791]],["self"]],["bool"]]],[11,R[5],E,R[651],38,[[[R[791]],["self"]]]],[11,"remove",E,R[652],38,[[[R[791]],["self"]]]],[11,"toggle",E,R[653],38,[[[R[791]],["self"]]]],[11,"set",E,R[654],38,[[[R[791]],["self"],["bool"]]]],[18,R[792],E,E,39,N],[11,"empty",E,R[636],39,[[],[R[793]]]],[11,"all",E,R[637],39,[[],[R[793]]]],[11,"bits",E,R[638],39,[[["self"]],["c_int"]]],[11,R[639],E,R[640],39,[[["c_int"]],[[R[793]],[R[49],[R[793]]]]]],[11,R[641],E,R[642],39,[[["c_int"]],[R[793]]]],[11,R[643],E,R[644],39,[[["c_int"]],[R[793]]]],[11,R[166],E,R[645],39,[[["self"]],["bool"]]],[11,"is_all",E,R[646],39,[[["self"]],["bool"]]],[11,R[647],E,R[648],39,[[["self"],[R[793]]],["bool"]]],[11,R[649],E,R[650],39,[[["self"],[R[793]]],["bool"]]],[11,R[5],E,R[651],39,[[["self"],[R[793]]]]],[11,"remove",E,R[652],39,[[["self"],[R[793]]]]],[11,"toggle",E,R[653],39,[[["self"],[R[793]]]]],[11,"set",E,R[654],39,[[["self"],[R[793]],["bool"]]]],[11,"new",E,E,40,[[[R[791]],["u64"]],["self"]]],[11,"empty",E,E,40,[[],["self"]]],[11,"events",E,E,40,[[["self"]],[R[791]]]],[11,"data",E,E,40,[[["self"]],["u64"]]],[0,"eventfd",R[794],E,N,N],[3,"EfdFlags",R[1067],E,N,N],[5,"eventfd",E,E,N,[[["c_uint"],[R[798]]],[["rawfd"],[R[15],["rawfd"]]]]],[18,R[795],E,E,41,N],[18,R[796],E,E,41,N],[18,R[797],E,E,41,N],[11,"empty",E,R[636],41,[[],[R[798]]]],[11,"all",E,R[637],41,[[],[R[798]]]],[11,"bits",E,R[638],41,[[["self"]],["c_int"]]],[11,R[639],E,R[640],41,[[["c_int"]],[[R[49],[R[798]]],[R[798]]]]],[11,R[641],E,R[642],41,[[["c_int"]],[R[798]]]],[11,R[643],E,R[644],41,[[["c_int"]],[R[798]]]],[11,R[166],E,R[645],41,[[["self"]],["bool"]]],[11,"is_all",E,R[646],41,[[["self"]],["bool"]]],[11,R[647],E,R[648],41,[[["self"],[R[798]]],["bool"]]],[11,R[649],E,R[650],41,[[["self"],[R[798]]],["bool"]]],[11,R[5],E,R[651],41,[[["self"],[R[798]]]]],[11,"remove",E,R[652],41,[[["self"],[R[798]]]]],[11,"toggle",E,R[653],41,[[["self"],[R[798]]]]],[11,"set",E,R[654],41,[[["self"],[R[798]],["bool"]]]],[0,"ioctl",R[794],"Provide helpers for making ioctl system calls.",N,N],[0,"memfd",E,E,N,N],[3,R[1146],R[1068],E,N,N],[5,"memfd_create",E,E,N,[[["cstr"],[R[801]]],[["rawfd"],[R[15],["rawfd"]]]]],[18,R[799],E,E,42,N],[18,R[800],E,E,42,N],[11,"empty",E,R[636],42,[[],[R[801]]]],[11,"all",E,R[637],42,[[],[R[801]]]],[11,"bits",E,R[638],42,[[["self"]],["c_uint"]]],[11,R[639],E,R[640],42,[[["c_uint"]],[[R[801]],[R[49],[R[801]]]]]],[11,R[641],E,R[642],42,[[["c_uint"]],[R[801]]]],[11,R[643],E,R[644],42,[[["c_uint"]],[R[801]]]],[11,R[166],E,R[645],42,[[["self"]],["bool"]]],[11,"is_all",E,R[646],42,[[["self"]],["bool"]]],[11,R[647],E,R[648],42,[[["self"],[R[801]]],["bool"]]],[11,R[649],E,R[650],42,[[["self"],[R[801]]],["bool"]]],[11,R[5],E,R[651],42,[[["self"],[R[801]]]]],[11,"remove",E,R[652],42,[[["self"],[R[801]]]]],[11,"toggle",E,R[653],42,[[["self"],[R[801]]]]],[11,"set",E,R[654],42,[[["self"],[R[801]],["bool"]]]],[0,"mman",R[794],E,N,N],[3,"ProtFlags",R[1069],"Desired memory protection of a memory mapping.",N,N],[3,"MapFlags",E,"Additional parameters for `mmap()`.",N,N],[3,"MsFlags",E,"Configuration flags for `msync`.",N,N],[3,R[1147],E,"Flags for `mlockall`.",N,N],[4,"MmapAdvise",E,"Usage information for a range of memory to allow for…",N,N],[13,R[802],E,"No further special treatment. This is the default.",43,N],[13,R[803],E,"Expect random page references.",43,N],[13,R[804],E,"Expect sequential page references.",43,N],[13,R[805],E,"Expect access in the near future.",43,N],[13,R[806],E,"Do not expect access in the near future.",43,N],[13,R[807],E,"Free up a given range of pages and its associated backing…",43,N],[13,R[808],E,"Do not make pages in this range available to the child…",43,N],[13,R[809],E,"Undo the effect of `MADV_DONTFORK`.",43,N],[13,R[810],E,"Poison the given pages.",43,N],[13,R[811],E,"Enable Kernel Samepage Merging (KSM) for the given pages.",43,N],[13,R[812],E,"Undo the effect of `MADV_MERGEABLE`",43,N],[13,R[813],E,"Preserve the memory of each page but offline the original…",43,N],[13,R[814],E,"Enable Transparent Huge Pages (THP) for pages in the given…",43,N],[13,R[815],E,"Undo the effect of `MADV_HUGEPAGE`.",43,N],[13,R[816],E,"Exclude the given range from a core dump.",43,N],[13,R[817],E,"Undo the effect of an earlier `MADV_DONTDUMP`.",43,N],[13,R[818],E,"Specify that the application no longer needs the pages in…",43,N],[5,"mlock",E,"Locks all memory pages that contain part of the address…",N,[[["size_t"]],[R[15]]]],[5,"munlock",E,"Unlocks all memory pages that contain part of the address…",N,[[["size_t"]],[R[15]]]],[5,"mlockall",E,"Locks all memory pages mapped into this process' address…",N,[[[R[847]]],[R[15]]]],[5,R[819],E,"Unlocks all memory pages mapped into this process' address…",N,[[],[R[15]]]],[5,"mmap",E,"Calls to mmap are inherently unsafe, so they must be made…",N,[[[R[843]],["size_t"],["rawfd"],["off_t"],[R[820]]],[R[15]]]],[5,"munmap",E,E,N,[[["size_t"]],[R[15]]]],[5,"madvise",E,E,N,[[[R[1112]],["size_t"]],[R[15]]]],[5,"mprotect",E,"Set protection of memory mapping.",N,[[[R[820]],["size_t"]],[R[15]]]],[5,"msync",E,E,N,[[["size_t"],[R[701]]],[R[15]]]],[5,"shm_open",E,E,N,[[["mode"],["p"],["oflag"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,R[821],E,E,N,[[["p"]],[R[15]]]],[18,R[822],E,"Pages cannot be accessed.",44,N],[18,R[823],E,"Pages can be read.",44,N],[18,R[824],E,"Pages can be written.",44,N],[18,R[825],E,"Pages can be executed",44,N],[18,R[826],E,"Apply protection up to the end of a mapping that grows…",44,N],[18,R[827],E,"Apply protection down to the beginning of a mapping that…",44,N],[11,"empty",E,R[636],44,[[],[R[820]]]],[11,"all",E,R[637],44,[[],[R[820]]]],[11,"bits",E,R[638],44,[[["self"]],["c_int"]]],[11,R[639],E,R[640],44,[[["c_int"]],[[R[49],[R[820]]],[R[820]]]]],[11,R[641],E,R[642],44,[[["c_int"]],[R[820]]]],[11,R[643],E,R[644],44,[[["c_int"]],[R[820]]]],[11,R[166],E,R[645],44,[[["self"]],["bool"]]],[11,"is_all",E,R[646],44,[[["self"]],["bool"]]],[11,R[647],E,R[648],44,[[["self"],[R[820]]],["bool"]]],[11,R[649],E,R[650],44,[[["self"],[R[820]]],["bool"]]],[11,R[5],E,R[651],44,[[["self"],[R[820]]]]],[11,"remove",E,R[652],44,[[["self"],[R[820]]]]],[11,"toggle",E,R[653],44,[[["self"],[R[820]]]]],[11,"set",E,R[654],44,[[["bool"],["self"],[R[820]]]]],[18,"MAP_FILE",E,R[835],45,N],[18,R[828],E,"Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",45,N],[18,R[829],E,"Create a private copy-on-write mapping. Mutually exclusive…",45,N],[18,R[830],E,"Place the mapping at exactly the address specified in…",45,N],[18,"MAP_ANON",E,"Synonym for `MAP_ANONYMOUS`.",45,N],[18,R[831],E,"The mapping is not backed by any file.",45,N],[18,R[832],E,"Put the mapping into the first 2GB of the process address…",45,N],[18,R[833],E,"Used for stacks; indicates to the kernel that the mapping…",45,N],[18,R[834],E,R[835],45,N],[18,R[836],E,R[835],45,N],[18,R[837],E,"Mark the mmaped region to be locked in the same way as…",45,N],[18,R[838],E,"Do not reserve swap space for this mapping.",45,N],[18,R[839],E,"Populate page tables for a mapping.",45,N],[18,R[840],E,"Only meaningful when used with `MAP_POPULATE`. Don't…",45,N],[18,R[841],E,"Allocate the mapping using \"huge pages.\"",45,N],[18,R[842],E,"Region grows down, like a stack.",45,N],[11,"empty",E,R[636],45,[[],[R[843]]]],[11,"all",E,R[637],45,[[],[R[843]]]],[11,"bits",E,R[638],45,[[["self"]],["c_int"]]],[11,R[639],E,R[640],45,[[["c_int"]],[[R[49],[R[843]]],[R[843]]]]],[11,R[641],E,R[642],45,[[["c_int"]],[R[843]]]],[11,R[643],E,R[644],45,[[["c_int"]],[R[843]]]],[11,R[166],E,R[645],45,[[["self"]],["bool"]]],[11,"is_all",E,R[646],45,[[["self"]],["bool"]]],[11,R[647],E,R[648],45,[[["self"],[R[843]]],["bool"]]],[11,R[649],E,R[650],45,[[["self"],[R[843]]],["bool"]]],[11,R[5],E,R[651],45,[[["self"],[R[843]]]]],[11,"remove",E,R[652],45,[[["self"],[R[843]]]]],[11,"toggle",E,R[653],45,[[["self"],[R[843]]]]],[11,"set",E,R[654],45,[[["bool"],["self"],[R[843]]]]],[18,"MS_ASYNC",E,"Schedule an update but return immediately.",46,N],[18,R[844],E,"Invalidate all cached data.",46,N],[18,"MS_SYNC",E,"Perform an update and wait for it to complete.",46,N],[11,"empty",E,R[636],46,[[],[R[701]]]],[11,"all",E,R[637],46,[[],[R[701]]]],[11,"bits",E,R[638],46,[[["self"]],["c_int"]]],[11,R[639],E,R[640],46,[[["c_int"]],[[R[49],[R[701]]],[R[701]]]]],[11,R[641],E,R[642],46,[[["c_int"]],[R[701]]]],[11,R[643],E,R[644],46,[[["c_int"]],[R[701]]]],[11,R[166],E,R[645],46,[[["self"]],["bool"]]],[11,"is_all",E,R[646],46,[[["self"]],["bool"]]],[11,R[647],E,R[648],46,[[["self"],[R[701]]],["bool"]]],[11,R[649],E,R[650],46,[[["self"],[R[701]]],["bool"]]],[11,R[5],E,R[651],46,[[["self"],[R[701]]]]],[11,"remove",E,R[652],46,[[["self"],[R[701]]]]],[11,"toggle",E,R[653],46,[[["self"],[R[701]]]]],[11,"set",E,R[654],46,[[["self"],[R[701]],["bool"]]]],[18,R[845],E,"Lock pages that are currently mapped into the address…",47,N],[18,R[846],E,"Lock pages which will become mapped into the address space…",47,N],[11,"empty",E,R[636],47,[[],[R[847]]]],[11,"all",E,R[637],47,[[],[R[847]]]],[11,"bits",E,R[638],47,[[["self"]],["c_int"]]],[11,R[639],E,R[640],47,[[["c_int"]],[[R[847]],[R[49],[R[847]]]]]],[11,R[641],E,R[642],47,[[["c_int"]],[R[847]]]],[11,R[643],E,R[644],47,[[["c_int"]],[R[847]]]],[11,R[166],E,R[645],47,[[["self"]],["bool"]]],[11,"is_all",E,R[646],47,[[["self"]],["bool"]]],[11,R[647],E,R[648],47,[[[R[847]],["self"]],["bool"]]],[11,R[649],E,R[650],47,[[[R[847]],["self"]],["bool"]]],[11,R[5],E,R[651],47,[[["self"],[R[847]]]]],[11,"remove",E,R[652],47,[[["self"],[R[847]]]]],[11,"toggle",E,R[653],47,[[["self"],[R[847]]]]],[11,"set",E,R[654],47,[[["self"],[R[847]],["bool"]]]],[0,"pthread",R[794],E,N,N],[5,R[848],"nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread",E,E,N,N],[0,"ptrace",R[794],E,N,N],[3,"Options",R[1070],"Ptrace options used in conjunction with the…",N,N],[4,"Request",E,"Ptrace Request enum defining the action to be taken.",N,N],[13,R[849],E,E,48,N],[13,R[850],E,E,48,N],[13,R[851],E,E,48,N],[13,R[852],E,E,48,N],[13,R[853],E,E,48,N],[13,R[854],E,E,48,N],[13,R[855],E,E,48,N],[13,R[856],E,E,48,N],[13,R[857],E,E,48,N],[13,R[858],E,E,48,N],[13,R[859],E,E,48,N],[13,R[860],E,E,48,N],[13,R[861],E,E,48,N],[13,R[862],E,E,48,N],[13,R[863],E,E,48,N],[13,R[864],E,E,48,N],[13,R[865],E,E,48,N],[13,R[866],E,E,48,N],[13,R[867],E,E,48,N],[13,R[868],E,E,48,N],[13,R[869],E,E,48,N],[13,R[870],E,E,48,N],[13,R[871],E,E,48,N],[13,R[872],E,E,48,N],[13,R[873],E,E,48,N],[13,R[874],E,E,48,N],[13,R[875],E,E,48,N],[13,R[876],E,E,48,N],[13,R[877],E,E,48,N],[4,"Event",E,"Using the ptrace options the tracer can configure the…",N,N],[13,R[878],E,"Event that stops before a return from fork or clone.",49,N],[13,R[879],E,"Event that stops before a return from vfork or clone.",49,N],[13,R[880],E,"Event that stops before a return from clone.",49,N],[13,R[881],E,"Event that stops before a return from execve.",49,N],[13,R[882],E,"Event for a return from vfork.",49,N],[13,R[883],E,"Event for a stop before an exit. Unlike the waitpid Exit…",49,N],[13,R[884],E,"STop triggered by a seccomp rule on a tracee.",49,N],[5,"ptrace",E,"Performs a ptrace request. If the request in question is…",N,[[[R[885]],["request"],["pid"]],[[R[15],["c_long"]],["c_long"]]]],[5,"getregs",E,"Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`",N,[[["pid"]],[[R[15],[R[489]]],[R[489]]]]],[5,"setregs",E,"Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`",N,[[["pid"],[R[489]]],[R[15]]]],[5,"setoptions",E,"Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",N,[[["pid"],[R[895]]],[R[15]]]],[5,"getevent",E,"Gets a ptrace event as described by…",N,[[["pid"]],[[R[15],["c_long"]],["c_long"]]]],[5,"getsiginfo",E,"Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",N,[[["pid"]],[[R[483]],[R[15],[R[483]]]]]],[5,"setsiginfo",E,"Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",N,[[[R[483]],["pid"]],[R[15]]]],[5,"traceme",E,"Sets the process as traceable, as with…",N,[[],[R[15]]]],[5,"syscall",E,"Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",N,[[["pid"]],[R[15]]]],[5,"attach",E,"Attach to a running process, as with…",N,[[["pid"]],[R[15]]]],[5,"detach",E,"Detaches the current running process, as with…",N,[[["pid"]],[R[15]]]],[5,"cont",E,"Restart the stopped tracee process, as with…",N,[[["into",[R[49]]],["pid"],[R[49],["signal"]]],[R[15]]]],[5,"kill",E,"Issues a kill request as with `ptrace(PTRACE_KILL, ...)`",N,[[["pid"]],[R[15]]]],[5,"step",E,"Move the stopped tracee process forward by a single step…",N,[[["into",[R[49]]],["pid"],[R[49],["signal"]]],[R[15]]]],[5,"read",E,"Reads a word from a processes memory at the given address",N,[[[R[885]],["pid"]],[[R[15],["c_long"]],["c_long"]]]],[5,"write",E,"Writes a word into the processes memory at the given address",N,[[[R[885]],["pid"]],[R[15]]]],[18,R[886],E,"When delivering system call traps set a bit to allow…",50,N],[18,R[887],E,"Stop tracee at next fork and start tracing the forked…",50,N],[18,R[888],E,"Stop tracee at next vfork call and trace the vforked…",50,N],[18,R[889],E,"Stop tracee at next clone call and trace the cloned process.",50,N],[18,R[890],E,"Stop tracee at next execve call.",50,N],[18,R[891],E,"Stop tracee at vfork completion.",50,N],[18,R[892],E,"Stop tracee at next exit call. Stops before exit commences…",50,N],[18,R[893],E,"Stop tracee when a SECCOMP_RET_TRACE rule is triggered.…",50,N],[18,R[894],E,"Send a SIGKILL to the tracee if the tracer exits. This is…",50,N],[11,"empty",E,R[636],50,[[],[R[895]]]],[11,"all",E,R[637],50,[[],[R[895]]]],[11,"bits",E,R[638],50,[[["self"]],["c_int"]]],[11,R[639],E,R[640],50,[[["c_int"]],[[R[49],[R[895]]],[R[895]]]]],[11,R[641],E,R[642],50,[[["c_int"]],[R[895]]]],[11,R[643],E,R[644],50,[[["c_int"]],[R[895]]]],[11,R[166],E,R[645],50,[[["self"]],["bool"]]],[11,"is_all",E,R[646],50,[[["self"]],["bool"]]],[11,R[647],E,R[648],50,[[["self"],[R[895]]],["bool"]]],[11,R[649],E,R[650],50,[[["self"],[R[895]]],["bool"]]],[11,R[5],E,R[651],50,[[["self"],[R[895]]]]],[11,"remove",E,R[652],50,[[["self"],[R[895]]]]],[11,"toggle",E,R[653],50,[[["self"],[R[895]]]]],[11,"set",E,R[654],50,[[["bool"],["self"],[R[895]]]]],[6,"AddressType",E,E,N,N],[0,"quota",R[794],"Set and configure disk quotas for users, groups, or…",N,N],[3,R[1148],R[1071],"Indicates the quota fields that are valid to read from.",N,N],[3,"Dqblk",E,"Wrapper type for `if_dqblk`",N,N],[4,"QuotaType",E,"The scope of the quota.",N,N],[13,"USRQUOTA",E,"Specify a user quota",51,N],[13,"GRPQUOTA",E,"Specify a group quota",51,N],[4,"QuotaFmt",E,"The type of quota format to use.",N,N],[13,R[896],E,"Use the original quota format.",52,N],[13,R[897],E,"Use the standard VFS v0 quota format.",52,N],[13,R[898],E,"Use the VFS v1 quota format.",52,N],[5,"quotactl_on",E,"Turn on disk quotas for a block device.",N,[[["quotafmt"],["p"],[R[899]]],[R[15]]]],[5,"quotactl_off",E,"Disable disk quotas for a block device.",N,[[["p"],[R[899]]],[R[15]]]],[5,"quotactl_sync",E,"Update the on-disk copy of quota usages for a filesystem.",N,[[["p"],[R[49]],[R[899]]],[R[15]]]],[5,"quotactl_get",E,"Get disk quota limits and current usage for the given…",N,[[["c_int"],["p"],[R[899]]],[["dqblk"],[R[15],["dqblk"]]]]],[5,"quotactl_set",E,"Configure quota values for the specified fields for a…",N,[[["dqblk"],["c_int"],[R[909]],["p"],[R[899]]],[R[15]]]],[18,R[900],E,"The block hard & soft limit fields.",53,N],[18,R[901],E,"The current space field.",53,N],[18,R[902],E,"The inode hard & soft limit fields.",53,N],[18,R[903],E,"The current inodes field.",53,N],[18,R[904],E,"The disk use time limit field.",53,N],[18,R[905],E,"The file quote time limit field.",53,N],[18,R[906],E,"All block & inode limits.",53,N],[18,R[907],E,"The space & inodes usage fields.",53,N],[18,R[908],E,"The time limit fields.",53,N],[18,"QIF_ALL",E,"All fields.",53,N],[11,"empty",E,R[636],53,[[],[R[909]]]],[11,"all",E,R[637],53,[[],[R[909]]]],[11,"bits",E,R[638],53,[[["self"]],["u32"]]],[11,R[639],E,R[640],53,[[["u32"]],[[R[49],[R[909]]],[R[909]]]]],[11,R[641],E,R[642],53,[[["u32"]],[R[909]]]],[11,R[643],E,R[644],53,[[["u32"]],[R[909]]]],[11,R[166],E,R[645],53,[[["self"]],["bool"]]],[11,"is_all",E,R[646],53,[[["self"]],["bool"]]],[11,R[647],E,R[648],53,[[["self"],[R[909]]],["bool"]]],[11,R[649],E,R[650],53,[[["self"],[R[909]]],["bool"]]],[11,R[5],E,R[651],53,[[["self"],[R[909]]]]],[11,"remove",E,R[652],53,[[["self"],[R[909]]]]],[11,"toggle",E,R[653],53,[[["self"],[R[909]]]]],[11,"set",E,R[654],53,[[["self"],[R[909]],["bool"]]]],[11,"blocks_hard_limit",E,"The absolute limit on disk quota blocks allocated.",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"set_blocks_hard_limit",E,"Set the absolute limit on disk quota blocks allocated.",54,[[["self"],["u64"]]]],[11,"blocks_soft_limit",E,"Preferred limit on disk quota blocks",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"set_blocks_soft_limit",E,"Set the preferred limit on disk quota blocks allocated.",54,[[["self"],["u64"]]]],[11,"occupied_space",E,"Current occupied space (bytes).",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"inodes_hard_limit",E,"Maximum number of allocated inodes.",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"set_inodes_hard_limit",E,"Set the maximum number of allocated inodes.",54,[[["self"],["u64"]]]],[11,"inodes_soft_limit",E,"Preferred inode limit",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"set_inodes_soft_limit",E,"Set the preferred limit of allocated inodes.",54,[[["self"],["u64"]]]],[11,"allocated_inodes",E,"Current number of allocated inodes.",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"block_time_limit",E,"Time limit for excessive disk use.",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"set_block_time_limit",E,"Set the time limit for excessive disk use.",54,[[["self"],["u64"]]]],[11,"inode_time_limit",E,"Time limit for excessive files.",54,[[["self"]],[[R[49],["u64"]],["u64"]]]],[11,"set_inode_time_limit",E,"Set the time limit for excessive files.",54,[[["self"],["u64"]]]],[0,"reboot",R[794],"Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",N,N],[4,"RebootMode",R[1072],"How exactly should the system be rebooted.",N,N],[13,R[910],E,E,55,N],[13,"RB_KEXEC",E,E,55,N],[13,R[911],E,E,55,N],[13,R[912],E,E,55,N],[13,R[913],E,E,55,N],[5,"reboot",E,E,N,[[[R[1113]]],[["void"],[R[15],["void"]]]]],[5,"set_cad_enabled",E,"Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",N,[[["bool"]],[R[15]]]],[0,"select",R[794],E,N,N],[17,R[914],R[1073],E,N,N],[3,"FdSet",E,E,N,N],[5,"select",E,"Monitors file descriptors for readiness",N,[[["w"],["n"],["e"],[T],["r"]],[["c_int"],[R[15],["c_int"]]]]],[5,"pselect",E,"Monitors file descriptors for readiness with an altered…",N,[[["w"],["n"],["e"],["s"],[T],["r"]],[["c_int"],[R[15],["c_int"]]]]],[11,"new",E,E,56,[[],["fdset"]]],[11,R[5],E,E,56,[[["self"],["rawfd"]]]],[11,"remove",E,E,56,[[["self"],["rawfd"]]]],[11,R[649],E,E,56,[[["self"],["rawfd"]],["bool"]]],[11,"clear",E,E,56,[[["self"]]]],[11,"highest",E,"Finds the highest file descriptor in the set.",56,[[["self"]],[[R[49],["rawfd"]],["rawfd"]]]],[0,R[915],R[794],E,N,N],[5,R[915],"nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting…",N,[[["rawfd"],["off_t"],["usize"],[R[49],["off_t"]]],[[R[15],["usize"]],["usize"]]]],[0,"signal",R[794],E,N,N],[3,"SigEvent",R[923],"Used to request asynchronous notification of the…",N,N],[3,R[1172],E,E,N,N],[3,"SaFlags",E,E,N,N],[3,"SigSet",E,E,N,N],[3,R[921],E,"Action to take on receipt of a signal. Corresponds to…",N,N],[4,"Signal",E,E,N,N],[13,"SIGHUP",E,E,57,N],[13,"SIGINT",E,E,57,N],[13,"SIGQUIT",E,E,57,N],[13,"SIGILL",E,E,57,N],[13,"SIGTRAP",E,E,57,N],[13,"SIGABRT",E,E,57,N],[13,"SIGBUS",E,E,57,N],[13,"SIGFPE",E,E,57,N],[13,"SIGKILL",E,E,57,N],[13,"SIGUSR1",E,E,57,N],[13,"SIGSEGV",E,E,57,N],[13,"SIGUSR2",E,E,57,N],[13,"SIGPIPE",E,E,57,N],[13,"SIGALRM",E,E,57,N],[13,"SIGTERM",E,E,57,N],[13,R[916],E,E,57,N],[13,"SIGCHLD",E,E,57,N],[13,"SIGCONT",E,E,57,N],[13,"SIGSTOP",E,E,57,N],[13,"SIGTSTP",E,E,57,N],[13,"SIGTTIN",E,E,57,N],[13,"SIGTTOU",E,E,57,N],[13,"SIGURG",E,E,57,N],[13,"SIGXCPU",E,E,57,N],[13,"SIGXFSZ",E,E,57,N],[13,R[917],E,E,57,N],[13,"SIGPROF",E,E,57,N],[13,"SIGWINCH",E,E,57,N],[13,"SIGIO",E,E,57,N],[13,"SIGPWR",E,E,57,N],[13,"SIGSYS",E,E,57,N],[4,"SigmaskHow",E,E,N,N],[13,R[918],E,E,58,N],[13,R[919],E,E,58,N],[13,R[920],E,E,58,N],[4,"SigHandler",E,"A signal handler.",N,N],[13,"SigDfl",E,"Default signal handling.",59,N],[13,"SigIgn",E,"Request that the signal be ignored.",59,N],[13,"Handler",E,R[922],59,N],[13,R[921],E,R[922],59,N],[4,R[1149],E,"Used to request asynchronous notification of certain…",N,N],[13,"SigevNone",E,"No notification will be delivered",60,N],[13,"SigevSignal",E,"The signal given by `signal` will be delivered to the…",60,N],[12,"signal",R[924],E,60,N],[12,R[925],E,E,60,N],[13,"SigevThreadId",R[923],"The signal `signal` is queued to the thread whose LWP ID…",60,N],[12,"signal",R[924],E,60,N],[12,"thread_id",E,E,60,N],[12,R[925],E,E,60,N],[5,R[433],R[923],"Changes the action taken by a process on receipt of a…",N,[[[R[433]],["signal"]],[[R[15],[R[433]]],[R[433]]]]],[5,"signal",E,"Signal management (see signal(3p))",N,[[[R[926]],["signal"]],[[R[926]],[R[15],[R[926]]]]]],[5,R[927],E,"Manages the signal mask (set of blocked signals) for the…",N,[[[R[929]],[R[49],["sigset"]],[R[49],["sigset"]],["sigset"],["sigset"]],[R[15]]]],[5,R[928],E,"Examine and change blocked signals.",N,[[[R[929]],[R[49],["sigset"]],[R[49],["sigset"]],["sigset"],["sigset"]],[R[15]]]],[5,"kill",E,E,N,[[["into",[R[49]]],[R[49],["signal"]],["pid"]],[R[15]]]],[5,"killpg",E,"Send a signal to a process group (see killpg(3)).",N,[[["into",[R[49]]],[R[49],["signal"]],["pid"]],[R[15]]]],[5,"raise",E,E,N,[[["signal"]],[R[15]]]],[11,"new",E,"Note: this constructor does not allow the user to set the…",61,[[[R[774]]],[R[504]]]],[11,R[504],E,E,61,[[["self"]],[R[504]]]],[6,"type_of_thread_id",E,E,N,N],[17,"NSIG",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,R[930],E,E,N,N],[11,"iterator",E,E,57,[[],[R[1105]]]],[11,"from_c_int",E,E,57,[[["c_int"]],[[R[15],["signal"]],["signal"]]]],[18,R[931],E,E,62,N],[18,R[932],E,E,62,N],[18,R[933],E,E,62,N],[18,R[934],E,E,62,N],[18,R[935],E,E,62,N],[18,R[936],E,E,62,N],[18,R[937],E,E,62,N],[11,"empty",E,R[636],62,[[],[R[938]]]],[11,"all",E,R[637],62,[[],[R[938]]]],[11,"bits",E,R[638],62,[[["self"]],["c_int"]]],[11,R[639],E,R[640],62,[[["c_int"]],[[R[938]],[R[49],[R[938]]]]]],[11,R[641],E,R[642],62,[[["c_int"]],[R[938]]]],[11,R[643],E,R[644],62,[[["c_int"]],[R[938]]]],[11,R[166],E,R[645],62,[[["self"]],["bool"]]],[11,"is_all",E,R[646],62,[[["self"]],["bool"]]],[11,R[647],E,R[648],62,[[["self"],[R[938]]],["bool"]]],[11,R[649],E,R[650],62,[[["self"],[R[938]]],["bool"]]],[11,R[5],E,R[651],62,[[["self"],[R[938]]]]],[11,"remove",E,R[652],62,[[["self"],[R[938]]]]],[11,"toggle",E,R[653],62,[[["self"],[R[938]]]]],[11,"set",E,R[654],62,[[["bool"],["self"],[R[938]]]]],[11,"all",E,E,63,[[],["sigset"]]],[11,"empty",E,E,63,[[],["sigset"]]],[11,"add",E,E,63,[[["self"],["signal"]]]],[11,"clear",E,E,63,[[["self"]]]],[11,"remove",E,E,63,[[["self"],["signal"]]]],[11,R[649],E,E,63,[[["self"],["signal"]],["bool"]]],[11,"extend",E,E,63,[[["self"],["sigset"]]]],[11,"thread_get_mask",E,"Gets the currently blocked (masked) set of signals for the…",63,[[],[[R[15],["sigset"]],["sigset"]]]],[11,"thread_set_mask",E,"Sets the set of signals as the signal mask for the calling…",63,[[["self"]],[R[15]]]],[11,"thread_block",E,"Adds the set of signals to the signal mask for the calling…",63,[[["self"]],[R[15]]]],[11,"thread_unblock",E,"Removes the set of signals from the signal mask for the…",63,[[["self"]],[R[15]]]],[11,"thread_swap_mask",E,"Sets the set of signals as the signal mask, and returns…",63,[[[R[929]],["self"]],[[R[15],["sigset"]],["sigset"]]]],[11,"wait",E,"Suspends execution of the calling thread until one of the…",63,[[["self"]],[[R[15],["signal"]],["signal"]]]],[11,"new",E,"Creates a new action.",64,[[[R[926]],["sigset"],[R[938]]],[R[433]]]],[11,"flags",E,"Returns the flags set on the action.",64,[[["self"]],[R[938]]]],[11,"mask",E,"Returns the set of signals that are blocked during…",64,[[["self"]],["sigset"]]],[11,"handler",E,"Returns the action's handler.",64,[[["self"]],[R[926]]]],[0,R[949],R[794],"Interface for the `signalfd` syscall.",N,N],[3,"siginfo",R[1074],E,N,N],[12,R[939],E,E,65,N],[12,R[940],E,E,65,N],[12,"ssi_code",E,E,65,N],[12,"ssi_pid",E,E,65,N],[12,"ssi_uid",E,E,65,N],[12,"ssi_fd",E,E,65,N],[12,"ssi_tid",E,E,65,N],[12,"ssi_band",E,E,65,N],[12,R[941],E,E,65,N],[12,R[942],E,E,65,N],[12,R[943],E,E,65,N],[12,"ssi_int",E,E,65,N],[12,"ssi_ptr",E,E,65,N],[12,R[944],E,E,65,N],[12,R[945],E,E,65,N],[12,"ssi_addr",E,E,65,N],[12,R[946],E,E,65,N],[12,R[947],E,E,65,N],[12,R[948],E,E,65,N],[12,"ssi_arch",E,E,65,N],[3,"SfdFlags",E,E,N,N],[3,"SignalFd",E,"A helper struct for creating, reading and closing a…",N,N],[5,R[949],E,"Creates a new file descriptor for reading signals.",N,[[[R[952]],["sigset"],["rawfd"]],[["rawfd"],[R[15],["rawfd"]]]]],[17,"SIGNALFD_NEW",E,E,N,N],[17,"SIGNALFD_SIGINFO_SIZE",E,E,N,N],[18,R[950],E,E,66,N],[18,R[951],E,E,66,N],[11,"empty",E,R[636],66,[[],[R[952]]]],[11,"all",E,R[637],66,[[],[R[952]]]],[11,"bits",E,R[638],66,[[["self"]],["c_int"]]],[11,R[639],E,R[640],66,[[["c_int"]],[[R[952]],[R[49],[R[952]]]]]],[11,R[641],E,R[642],66,[[["c_int"]],[R[952]]]],[11,R[643],E,R[644],66,[[["c_int"]],[R[952]]]],[11,R[166],E,R[645],66,[[["self"]],["bool"]]],[11,"is_all",E,R[646],66,[[["self"]],["bool"]]],[11,R[647],E,R[648],66,[[[R[952]],["self"]],["bool"]]],[11,R[649],E,R[650],66,[[[R[952]],["self"]],["bool"]]],[11,R[5],E,R[651],66,[[[R[952]],["self"]]]],[11,"remove",E,R[652],66,[[[R[952]],["self"]]]],[11,"toggle",E,R[653],66,[[[R[952]],["self"]]]],[11,"set",E,R[654],66,[[[R[952]],["self"],["bool"]]]],[11,"new",E,E,67,[[["sigset"]],[[R[15],[R[949]]],[R[949]]]]],[11,"with_flags",E,E,67,[[[R[952]],["sigset"]],[[R[15],[R[949]]],[R[949]]]]],[11,"set_mask",E,E,67,[[["self"],["sigset"]],[R[15]]]],[11,"read_signal",E,E,67,[[["self"]],[[R[15],[R[49]]],[R[49],["siginfo"]]]]],[0,"socket",R[794],"Socket interface functions",N,N],[3,"cmsghdr",R[994],E,N,N],[12,"cmsg_len",E,E,68,N],[12,R[953],E,E,68,N],[12,R[954],E,E,68,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,69,N],[12,R[955],E,E,69,N],[12,"msg_iov",E,E,69,N],[12,R[956],E,E,69,N],[12,R[957],E,E,69,N],[12,R[958],E,E,69,N],[12,R[959],E,E,69,N],[6,R[960],E,E,N,N],[3,R[502],E,E,N,N],[12,R[961],E,E,70,N],[12,"sa_data",E,E,70,N],[3,R[439],E,E,N,N],[12,R[962],E,E,71,N],[12,"sin_port",E,E,71,N],[12,"sin_addr",E,E,71,N],[12,"sin_zero",E,E,71,N],[3,R[440],E,E,N,N],[12,R[963],E,E,72,N],[12,R[964],E,E,72,N],[12,R[965],E,E,72,N],[12,R[966],E,E,72,N],[12,R[967],E,E,72,N],[3,R[448],E,E,N,N],[12,R[968],E,E,73,N],[3,R[447],E,E,N,N],[12,R[969],E,E,74,N],[12,"sun_path",E,E,74,N],[3,"UnixAddr",E,"A wrapper around `sockaddr_un`.",N,N],[12,"0",E,E,75,N],[12,"1",E,E,75,N],[3,"Ipv4Addr",E,E,N,N],[12,"0",E,E,76,N],[3,"Ipv6Addr",E,E,N,N],[12,"0",E,E,77,N],[3,"LinkAddr",E,"Hardware Address",N,N],[12,"0",E,E,78,N],[3,R[1150],E,E,N,N],[12,"0",E,E,79,N],[3,"AlgAddr",E,E,N,N],[12,"0",E,E,80,N],[3,"SockFlag",E,"Additional socket options",N,N],[3,"MsgFlags",E,"Flags for send/recv and their relatives",N,N],[3,R[1155],E,"Unix credentials of the sending process.",N,N],[3,R[1156],E,"Request for multicast socket operations",N,N],[3,R[1157],E,"Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace",E,"A structure used to make room in a cmsghdr passed to…",N,N],[3,"RecvMsg",E,E,N,N],[12,"bytes",E,E,81,N],[12,"address",E,E,81,N],[12,"flags",E,E,81,N],[3,R[1173],E,E,N,N],[4,R[1151],E,"These constants specify the protocol family to be used in…",N,N],[13,"Unix",E,"Local communication (see `unix(7)`)",82,N],[13,"Inet",E,"IPv4 Internet protocols (see `ip(7)`)",82,N],[13,"Inet6",E,"IPv6 Internet protocols (see `ipv6(7)`)",82,N],[13,"Netlink",E,"Kernel user interface device (see `netlink(7)`)",82,N],[13,"Packet",E,"Low level packet interface (see `packet(7)`)",82,N],[13,"Ax25",E,"Amateur radio AX.25 protocol",82,N],[13,"Ipx",E,"IPX - Novell protocols",82,N],[13,R[970],E,R[970],82,N],[13,"NetRom",E,E,82,N],[13,"Bridge",E,E,82,N],[13,"AtmPvc",E,"Access to raw ATM PVCs",82,N],[13,"X25",E,"ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",82,N],[13,"Rose",E,E,82,N],[13,"Decnet",E,E,82,N],[13,"NetBeui",E,E,82,N],[13,"Security",E,E,82,N],[13,"Key",E,E,82,N],[13,"Ash",E,E,82,N],[13,"Econet",E,E,82,N],[13,"AtmSvc",E,E,82,N],[13,"Rds",E,E,82,N],[13,"Sna",E,E,82,N],[13,"Irda",E,E,82,N],[13,"Pppox",E,E,82,N],[13,"Wanpipe",E,E,82,N],[13,"Llc",E,E,82,N],[13,"Ib",E,E,82,N],[13,"Mpls",E,E,82,N],[13,"Can",E,E,82,N],[13,"Tipc",E,E,82,N],[13,"Bluetooth",E,E,82,N],[13,"Iucv",E,E,82,N],[13,"RxRpc",E,E,82,N],[13,"Isdn",E,E,82,N],[13,"Phonet",E,E,82,N],[13,"Ieee802154",E,E,82,N],[13,"Caif",E,E,82,N],[13,"Alg",E,"Interface to kernel crypto API",82,N],[13,"Nfc",E,E,82,N],[13,"Vsock",E,E,82,N],[13,"Unspec",E,"Unspecified address family, (see `getaddrinfo(3)`)",82,N],[4,"SockAddr",E,"Represents a socket address",N,N],[13,"Inet",E,E,83,N],[13,"Unix",E,E,83,N],[13,"Netlink",E,E,83,N],[13,"Alg",E,E,83,N],[13,"Link",E,"Datalink address (MAC)",83,N],[4,"InetAddr",E,E,N,N],[13,"V4",E,E,84,N],[13,"V6",E,E,84,N],[4,"IpAddr",E,E,N,N],[13,"V4",E,E,85,N],[13,"V6",E,E,85,N],[4,"SockType",E,"These constants are used to specify the communication…",N,N],[13,"Stream",E,"Provides sequenced, reliable, two-way, connection- based…",86,N],[13,"Datagram",E,"Supports datagrams (connectionless, unreliable messages of…",86,N],[13,"SeqPacket",E,"Provides a sequenced, reliable, two-way connection- based…",86,N],[13,"Raw",E,"Provides raw network protocol access.",86,N],[13,"Rdm",E,"Provides a reliable datagram layer that does not guarantee…",86,N],[4,R[1152],E,"Constants used in `socket` and `socketpair` to specify the…",N,N],[13,"Tcp",E,"TCP protocol (ip(7))",87,N],[13,"Udp",E,"UDP protocol (ip(7))",87,N],[4,R[1153],E,"A type-safe wrapper around a single control message, as…",N,N],[13,R[972],E,R[971],88,N],[13,R[973],E,R[971],88,N],[13,"ScmTimestamp",E,"A message of type `SCM_TIMESTAMP`, containing the time the…",88,N],[13,R[993],E,E,88,N],[13,"Ipv6PacketInfo",E,E,88,N],[4,R[1154],E,"A type-safe zero-copy wrapper around a single control…",N,N],[13,R[972],E,"A message of type `SCM_RIGHTS`, containing an array of…",89,N],[13,R[973],E,"A message of type `SCM_CREDENTIALS`, containing the pid,…",89,N],[13,"AlgSetIv",E,"Set IV for `AF_ALG` crypto API.",89,N],[13,"AlgSetOp",E,"Set crypto operation for `AF_ALG` crypto API. It may be…",89,N],[13,"AlgSetAeadAssoclen",E,"Set the length of associated authentication data (AAD)…",89,N],[4,"SockLevel",E,"The protocol level at which to get / set socket options.…",N,N],[13,"Socket",E,E,90,N],[13,"Tcp",E,E,90,N],[13,"Ip",E,E,90,N],[13,"Ipv6",E,E,90,N],[13,"Udp",E,E,90,N],[13,"Netlink",E,E,90,N],[13,"Alg",E,E,90,N],[4,"Shutdown",E,E,N,N],[13,"Read",E,"Further receptions will be disallowed.",91,N],[13,"Write",E,"Further  transmissions will be disallowed.",91,N],[13,"Both",E,"Further receptions and transmissions will be disallowed.",91,N],[5,"sendmsg",E,"Send data in scatter-gather vectors to a socket, possibly…",N,[[[R[502]],[R[49],[R[502]]],[R[980]],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"recvmsg",E,"Receive message in scatter-gather vectors from a socket,…",N,[[[R[980]],[R[49],[R[974]]],[R[974]],["rawfd"]],[[R[15],["recvmsg"]],["recvmsg"]]]],[5,"socket",E,"Create an endpoint for communication",N,[[[R[49],[R[976]]],["into",[R[49]]],[R[977]],[R[979]],[R[1116]]],[["rawfd"],[R[15],["rawfd"]]]]],[5,R[975],E,"Create a pair of connected sockets",N,[[[R[49],[R[976]]],["into",[R[49]]],[R[977]],[R[979]],[R[1116]]],[R[15]]]],[5,"listen",E,"Listen for connections on a socket",N,[[["usize"],["rawfd"]],[R[15]]]],[5,"bind",E,"Bind a name to a socket",N,[[[R[502]],["rawfd"]],[R[15]]]],[5,"accept",E,R[978],N,[[["rawfd"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"accept4",E,R[978],N,[[[R[979]],["rawfd"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"connect",E,"Initiate a connection on a socket",N,[[[R[502]],["rawfd"]],[R[15]]]],[5,"recv",E,"Receive data from a connection-oriented socket. Returns…",N,[[[R[980]],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"recvfrom",E,"Receive data from a connectionless or connection-oriented…",N,[[["rawfd"]],[R[15]]]],[5,"sendto",E,"Send a message to a socket",N,[[["rawfd"],[R[980]],[R[502]]],[[R[15],["usize"]],["usize"]]]],[5,"send",E,"Send data to a connection-oriented socket. Returns the…",N,[[[R[980]],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,R[981],E,"Get the current value for the requested socket option",N,[[[R[981]],["rawfd"]],[R[15]]]],[5,R[982],E,"Sets the value for the requested socket option",N,[[[R[982]],["rawfd"]],[R[15]]]],[5,R[983],E,"Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],[[R[15],[R[502]]],[R[502]]]]],[5,R[984],E,"Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],[[R[15],[R[502]]],[R[502]]]]],[5,"sockaddr_storage_to_addr",E,"Return the appropriate `SockAddr` type from a…",N,[[[R[448]],["usize"]],[[R[15],[R[502]]],[R[502]]]]],[5,R[985],E,"Shut down part of a full-duplex connection.",N,[[[R[985]],["rawfd"]],[R[15]]]],[11,"new",E,E,79,[[["u32"]],[R[1106]]]],[11,"pid",E,E,79,[[["self"]],["u32"]]],[11,"groups",E,E,79,[[["self"]],["u32"]]],[11,"new",E,E,80,[[["str"]],["algaddr"]]],[11,"alg_type",E,E,80,[[["self"]],["cstr"]]],[11,"alg_name",E,E,80,[[["self"]],["cstr"]]],[11,"family",E,"Always AF_PACKET",78,[[["self"]],[R[977]]]],[11,"protocol",E,"Physical-layer protocol",78,[[["self"]],["u16"]]],[11,"ifindex",E,"Interface number",78,[[["self"]],["usize"]]],[11,"hatype",E,"ARP hardware type",78,[[["self"]],["u16"]]],[11,"pkttype",E,"Packet type",78,[[["self"]],["u8"]]],[11,"halen",E,"Length of MAC address",78,[[["self"]],["usize"]]],[11,"addr",E,"Physical-layer address (MAC)",78,[[["self"]]]],[11,R[986],E,"Create a new `AddressFamily` from an integer value…",82,[[["i32"]],[[R[977]],[R[49],[R[977]]]]]],[11,R[988],E,E,84,[[[R[987]]],[R[992]]]],[11,"new",E,E,84,[[["u16"],["ipaddr"]],[R[992]]]],[11,"ip",E,"Gets the IP address associated with this socket address.",84,[[["self"]],["ipaddr"]]],[11,"port",E,"Gets the port number associated with this socket address",84,[[["self"]],["u16"]]],[11,"to_std",E,E,84,[[["self"]],[R[987]]]],[11,"to_str",E,E,84,[[["self"]],["string"]]],[11,"new_v4",E,"Create a new IpAddr that contains an IPv4 address.",85,[[["u8"]],["ipaddr"]]],[11,"new_v6",E,"Create a new IpAddr that contains an IPv6 address.",85,[[["u16"]],["ipaddr"]]],[11,R[988],E,E,85,[[["ipaddr"]],["ipaddr"]]],[11,"to_std",E,E,85,[[["self"]],["ipaddr"]]],[11,"new",E,E,76,[[["u8"]],[R[989]]]],[11,R[988],E,E,76,[[[R[989]]],[R[989]]]],[11,"any",E,E,76,[[],[R[989]]]],[11,"octets",E,E,76,[[["self"]]]],[11,"to_std",E,E,76,[[["self"]],[R[989]]]],[11,"new",E,E,77,[[["u16"]],[R[990]]]],[11,R[988],E,E,77,[[[R[990]]],[R[990]]]],[11,"segments",E,"Return the eight 16-bit segments that make up this address",77,[[["self"]]]],[11,"to_std",E,E,77,[[["self"]],[R[990]]]],[11,"new",E,"Create a new sockaddr_un representing a filesystem path.",75,[[["p"]],[[R[15],[R[991]]],[R[991]]]]],[11,"new_abstract",E,"Create a new `sockaddr_un` representing an address in the…",75,[[],[[R[15],[R[991]]],[R[991]]]]],[11,"path",E,"If this address represents a filesystem path, return that…",75,[[["self"]],[[R[49],["path"]],["path"]]]],[11,"as_abstract",E,"If this address represents an abstract socket, return its…",75,[[["self"]],[R[49]]]],[11,"new_inet",E,E,83,[[[R[992]]],[R[502]]]],[11,"new_unix",E,E,83,[[["p"]],[[R[15],[R[502]]],[R[502]]]]],[11,"new_netlink",E,E,83,[[["u32"]],[R[502]]]],[11,"new_alg",E,E,83,[[["str"]],[R[502]]]],[11,"family",E,E,83,[[["self"]],[R[977]]]],[11,"to_str",E,E,83,[[["self"]],["string"]]],[11,"from_libc_sockaddr",E,"Creates a `SockAddr` struct from libc's sockaddr.",83,[[],[[R[502]],[R[49],[R[502]]]]]],[11,"as_ffi_pair",E,"Conversion from nix's SockAddr type to the underlying libc…",83,[[["self"]]]],[0,"sockopt",E,E,N,N],[3,"ReuseAddr",R[1075],E,N,N],[3,"ReusePort",E,E,N,N],[3,"TcpNoDelay",E,E,N,N],[3,"Linger",E,E,N,N],[3,R[1174],E,E,N,N],[3,R[1175],E,E,N,N],[3,R[1176],E,E,N,N],[3,R[1177],E,E,N,N],[3,R[1178],E,E,N,N],[3,R[1179],E,E,N,N],[3,R[1180],E,E,N,N],[3,R[1181],E,E,N,N],[3,"Broadcast",E,E,N,N],[3,"OobInline",E,E,N,N],[3,R[1182],E,E,N,N],[3,"KeepAlive",E,E,N,N],[3,R[1183],E,E,N,N],[3,R[1184],E,E,N,N],[3,"RcvBuf",E,E,N,N],[3,"SndBuf",E,E,N,N],[3,R[1185],E,E,N,N],[3,R[1186],E,E,N,N],[3,"SockType",E,E,N,N],[3,"AcceptConn",E,E,N,N],[3,R[1187],E,E,N,N],[3,R[1188],E,E,N,N],[3,R[1189],E,E,N,N],[3,"Mark",E,E,N,N],[3,"PassCred",E,E,N,N],[3,R[1190],E,E,N,N],[3,R[993],E,E,N,N],[3,R[1191],E,E,N,N],[3,R[1192],E,E,N,N],[3,"AlgSetKey",E,E,N,N],[8,"CmsgBuffer",R[994],"A type that can be used to store ancillary data received…",N,N],[10,R[1086],E,E,92,[[["self"]]]],[8,"GetSockOpt",E,R[995],N,N],[16,"Val",E,E,93,N],[8,"SetSockOpt",E,R[995],N,N],[16,"Val",E,E,94,N],[18,R[996],E,"Set non-blocking mode on the new socket",95,N],[18,R[997],E,"Set close-on-exec on the new descriptor",95,N],[11,"empty",E,R[636],95,[[],[R[979]]]],[11,"all",E,R[637],95,[[],[R[979]]]],[11,"bits",E,R[638],95,[[["self"]],["c_int"]]],[11,R[639],E,R[640],95,[[["c_int"]],[[R[49],[R[979]]],[R[979]]]]],[11,R[641],E,R[642],95,[[["c_int"]],[R[979]]]],[11,R[643],E,R[644],95,[[["c_int"]],[R[979]]]],[11,R[166],E,R[645],95,[[["self"]],["bool"]]],[11,"is_all",E,R[646],95,[[["self"]],["bool"]]],[11,R[647],E,R[648],95,[[["self"],[R[979]]],["bool"]]],[11,R[649],E,R[650],95,[[["self"],[R[979]]],["bool"]]],[11,R[5],E,R[651],95,[[["self"],[R[979]]]]],[11,"remove",E,R[652],95,[[["self"],[R[979]]]]],[11,"toggle",E,R[653],95,[[["self"],[R[979]]]]],[11,"set",E,R[654],95,[[["self"],[R[979]],["bool"]]]],[18,"MSG_OOB",E,"Sends or requests out-of-band data on sockets that support…",96,N],[18,"MSG_PEEK",E,"Peeks at an incoming message. The data is treated as…",96,N],[18,R[998],E,"Enables nonblocking operation; if the operation would…",96,N],[18,R[999],E,"Receive flags: Control Data was discarded (buffer too small)",96,N],[18,"MSG_TRUNC",E,"For raw (`Packet`), Internet datagram (since Linux…",96,N],[18,"MSG_EOR",E,"Terminates a record (when this notion is supported, as for…",96,N],[18,R[1000],E,"This flag specifies that queued errors should be received…",96,N],[18,R[1001],E,"Set the `close-on-exec` flag for the file descriptor…",96,N],[11,"empty",E,R[636],96,[[],[R[980]]]],[11,"all",E,R[637],96,[[],[R[980]]]],[11,"bits",E,R[638],96,[[["self"]],["c_int"]]],[11,R[639],E,R[640],96,[[["c_int"]],[[R[49],[R[980]]],[R[980]]]]],[11,R[641],E,R[642],96,[[["c_int"]],[R[980]]]],[11,R[643],E,R[644],96,[[["c_int"]],[R[980]]]],[11,R[166],E,R[645],96,[[["self"]],["bool"]]],[11,"is_all",E,R[646],96,[[["self"]],["bool"]]],[11,R[647],E,R[648],96,[[["self"],[R[980]]],["bool"]]],[11,R[649],E,R[650],96,[[["self"],[R[980]]],["bool"]]],[11,R[5],E,R[651],96,[[["self"],[R[980]]]]],[11,"remove",E,R[652],96,[[["self"],[R[980]]]]],[11,"toggle",E,R[653],96,[[["self"],[R[980]]]]],[11,"set",E,R[654],96,[[["self"],[R[980]],["bool"]]]],[11,"pid",E,"Returns the process identifier",97,[[["self"]],["pid_t"]]],[11,"uid",E,"Returns the user identifier",97,[[["self"]],["uid_t"]]],[11,"gid",E,"Returns the group identifier",97,[[["self"]],["gid_t"]]],[11,"new",E,"Instantiate a new `IpMembershipRequest`",98,[[[R[989]],[R[49],[R[989]]]],["self"]]],[11,"new",E,"Instantiate a new `Ipv6MembershipRequest`",99,[[[R[990]]],["self"]]],[11,"new",E,"Create a CmsgSpace. The structure is used only for space,…",100,[[],["self"]]],[11,"cmsgs",E,"Iterate over the valid control messages pointed to by this…",81,[[["self"]],["cmsgiterator"]]],[0,"stat",R[794],E,N,N],[6,"dev_t",R[1076],E,N,N],[6,"mode_t",E,E,N,N],[3,"FileStat",E,E,N,N],[12,"st_dev",E,E,101,N],[12,"st_ino",E,E,101,N],[12,"st_nlink",E,E,101,N],[12,"st_mode",E,E,101,N],[12,"st_uid",E,E,101,N],[12,"st_gid",E,E,101,N],[12,"st_rdev",E,E,101,N],[12,"st_size",E,E,101,N],[12,R[421],E,E,101,N],[12,R[422],E,E,101,N],[12,"st_atime",E,E,101,N],[12,R[423],E,E,101,N],[12,"st_mtime",E,E,101,N],[12,R[424],E,E,101,N],[12,"st_ctime",E,E,101,N],[12,R[425],E,E,101,N],[5,"FileStat",E,E,N,[[],["i32"]]],[3,"SFlag",E,E,N,N],[3,"Mode",E,E,N,N],[4,R[1158],E,"Flags for `fchmodat` function.",N,N],[13,R[1002],E,E,102,N],[13,R[1003],E,E,102,N],[4,R[1159],E,"Flags for `utimensat` function.",N,N],[13,R[1002],E,E,103,N],[13,R[1003],E,E,103,N],[5,"mknod",E,E,N,[[["dev_t"],["mode"],["p"],["sflag"]],[R[15]]]],[5,"major",E,E,N,[[["dev_t"]],["u64"]]],[5,"minor",E,E,N,[[["dev_t"]],["u64"]]],[5,"makedev",E,E,N,[[["u64"]],["dev_t"]]],[5,"umask",E,E,N,[[["mode"]],["mode"]]],[5,"stat",E,E,N,[[["p"]],[[R[15],[R[1004]]],[R[1004]]]]],[5,"lstat",E,E,N,[[["p"]],[[R[15],[R[1004]]],[R[1004]]]]],[5,"fstat",E,E,N,[[["rawfd"]],[[R[15],[R[1004]]],[R[1004]]]]],[5,"fstatat",E,E,N,[[[R[627]],["p"],["rawfd"]],[[R[15],[R[1004]]],[R[1004]]]]],[5,"fchmod",E,"Change the file permission bits of the file specified by a…",N,[[["mode"],["rawfd"]],[R[15]]]],[5,"fchmodat",E,"Change the file permission bits.",N,[[["rawfd"],["mode"],[R[1107]],["p"],[R[49],["rawfd"]]],[R[15]]]],[5,"utimes",E,R[1005],N,[[["p"],["timeval"]],[R[15]]]],[5,"lutimes",E,"Change the access and modification times of a file without…",N,[[["p"],["timeval"]],[R[15]]]],[5,"futimens",E,"Change the access and modification times of the file…",N,[[[R[500]],["rawfd"]],[R[15]]]],[5,"utimensat",E,R[1005],N,[[["rawfd"],[R[1108]],[R[500]],["p"],[R[49],["rawfd"]]],[R[15]]]],[18,"S_IFIFO",E,E,104,N],[18,"S_IFCHR",E,E,104,N],[18,"S_IFDIR",E,E,104,N],[18,"S_IFBLK",E,E,104,N],[18,"S_IFREG",E,E,104,N],[18,"S_IFLNK",E,E,104,N],[18,"S_IFSOCK",E,E,104,N],[18,"S_IFMT",E,E,104,N],[11,"empty",E,R[636],104,[[],["sflag"]]],[11,"all",E,R[637],104,[[],["sflag"]]],[11,"bits",E,R[638],104,[[["self"]],["mode_t"]]],[11,R[639],E,R[640],104,[[["mode_t"]],[["sflag"],[R[49],["sflag"]]]]],[11,R[641],E,R[642],104,[[["mode_t"]],["sflag"]]],[11,R[643],E,R[644],104,[[["mode_t"]],["sflag"]]],[11,R[166],E,R[645],104,[[["self"]],["bool"]]],[11,"is_all",E,R[646],104,[[["self"]],["bool"]]],[11,R[647],E,R[648],104,[[["self"],["sflag"]],["bool"]]],[11,R[649],E,R[650],104,[[["self"],["sflag"]],["bool"]]],[11,R[5],E,R[651],104,[[["self"],["sflag"]]]],[11,"remove",E,R[652],104,[[["self"],["sflag"]]]],[11,"toggle",E,R[653],104,[[["self"],["sflag"]]]],[11,"set",E,R[654],104,[[["self"],["sflag"],["bool"]]]],[18,"S_IRWXU",E,E,105,N],[18,"S_IRUSR",E,E,105,N],[18,"S_IWUSR",E,E,105,N],[18,"S_IXUSR",E,E,105,N],[18,"S_IRWXG",E,E,105,N],[18,"S_IRGRP",E,E,105,N],[18,"S_IWGRP",E,E,105,N],[18,"S_IXGRP",E,E,105,N],[18,"S_IRWXO",E,E,105,N],[18,"S_IROTH",E,E,105,N],[18,"S_IWOTH",E,E,105,N],[18,"S_IXOTH",E,E,105,N],[18,"S_ISUID",E,E,105,N],[18,"S_ISGID",E,E,105,N],[18,"S_ISVTX",E,E,105,N],[11,"empty",E,R[636],105,[[],["mode"]]],[11,"all",E,R[637],105,[[],["mode"]]],[11,"bits",E,R[638],105,[[["self"]],["mode_t"]]],[11,R[639],E,R[640],105,[[["mode_t"]],[["mode"],[R[49],["mode"]]]]],[11,R[641],E,R[642],105,[[["mode_t"]],["mode"]]],[11,R[643],E,R[644],105,[[["mode_t"]],["mode"]]],[11,R[166],E,R[645],105,[[["self"]],["bool"]]],[11,"is_all",E,R[646],105,[[["self"]],["bool"]]],[11,R[647],E,R[648],105,[[["mode"],["self"]],["bool"]]],[11,R[649],E,R[650],105,[[["mode"],["self"]],["bool"]]],[11,R[5],E,R[651],105,[[["self"],["mode"]]]],[11,"remove",E,R[652],105,[[["self"],["mode"]]]],[11,"toggle",E,R[653],105,[[["self"],["mode"]]]],[11,"set",E,R[654],105,[[["self"],["mode"],["bool"]]]],[0,"statfs",R[794],E,N,N],[5,"statfs","nix::sys::statfs",E,N,[[["statfs"],["p"]],[R[15]]]],[5,"fstatfs",E,E,N,[[["statfs"],[T]],[R[15]]]],[0,"statvfs",R[794],"Get filesystem statistics",N,N],[3,"FsFlags",R[1077],"File system mount Flags",N,N],[3,"Statvfs",E,"Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs",E,"Return a `Statvfs` object with information about the `path`",N,[[["p"]],[[R[15],["statvfs"]],["statvfs"]]]],[5,"fstatvfs",E,"Return a `Statvfs` object with information about `fd`",N,[[[T]],[[R[15],["statvfs"]],["statvfs"]]]],[18,"ST_RDONLY",E,"Read Only",106,N],[18,"ST_NOSUID",E,"Do not allow the set-uid bits to have an effect",106,N],[18,"ST_NODEV",E,"Do not interpret character or block-special devices",106,N],[18,"ST_NOEXEC",E,"Do not allow execution of binaries on the filesystem",106,N],[18,R[1006],E,"All IO should be done synchronously",106,N],[18,R[1007],E,"Allow mandatory locks on the filesystem",106,N],[18,"ST_WRITE",E,"Write on file/directory/symlink",106,N],[18,"ST_APPEND",E,"Append-only file",106,N],[18,R[1008],E,"Immutable file",106,N],[18,"ST_NOATIME",E,R[1010],106,N],[18,R[1009],E,R[1010],106,N],[18,R[1011],E,"Update access time relative to modify/change time",106,N],[11,"empty",E,R[636],106,[[],["fsflags"]]],[11,"all",E,R[637],106,[[],["fsflags"]]],[11,"bits",E,R[638],106,[[["self"]],["c_ulong"]]],[11,R[639],E,R[640],106,[[["c_ulong"]],[["fsflags"],[R[49],["fsflags"]]]]],[11,R[641],E,R[642],106,[[["c_ulong"]],["fsflags"]]],[11,R[643],E,R[644],106,[[["c_ulong"]],["fsflags"]]],[11,R[166],E,R[645],106,[[["self"]],["bool"]]],[11,"is_all",E,R[646],106,[[["self"]],["bool"]]],[11,R[647],E,R[648],106,[[["fsflags"],["self"]],["bool"]]],[11,R[649],E,R[650],106,[[["fsflags"],["self"]],["bool"]]],[11,R[5],E,R[651],106,[[["self"],["fsflags"]]]],[11,"remove",E,R[652],106,[[["self"],["fsflags"]]]],[11,"toggle",E,R[653],106,[[["self"],["fsflags"]]]],[11,"set",E,R[654],106,[[["self"],["fsflags"],["bool"]]]],[11,"block_size",E,"get the file system block size",107,[[["self"]],["c_ulong"]]],[11,"fragment_size",E,"Get the fundamental file system block size",107,[[["self"]],["c_ulong"]]],[11,"blocks",E,"Get the number of blocks.",107,[[["self"]],[R[1012]]]],[11,"blocks_free",E,"Get the number of free blocks in the file system",107,[[["self"]],[R[1012]]]],[11,"blocks_available",E,"Get the number of free blocks for unprivileged users",107,[[["self"]],[R[1012]]]],[11,"files",E,"Get the total number of file inodes",107,[[["self"]],[R[1013]]]],[11,"files_free",E,"Get the number of free file inodes",107,[[["self"]],[R[1013]]]],[11,"files_available",E,"Get the number of free file inodes for unprivileged users",107,[[["self"]],[R[1013]]]],[11,"filesystem_id",E,"Get the file system id",107,[[["self"]],["c_ulong"]]],[11,"flags",E,"Get the mount flags",107,[[["self"]],["fsflags"]]],[11,"name_max",E,"Get the maximum filename length",107,[[["self"]],["c_ulong"]]],[0,"sysinfo",R[794],E,N,N],[3,"SysInfo",R[1078],"System info structure returned by `sysinfo`.",N,N],[5,"sysinfo",E,"Returns system information.",N,[[],[[R[15],["sysinfo"]],["sysinfo"]]]],[11,"load_average",E,"Returns the load average tuple.",108,[[["self"]]]],[11,"uptime",E,"Returns the time since system boot.",108,[[["self"]],["duration"]]],[11,"process_count",E,"Current number of processes.",108,[[["self"]],["u16"]]],[11,"swap_total",E,"Returns the amount of swap memory in Bytes.",108,[[["self"]],["u64"]]],[11,"swap_free",E,"Returns the amount of unused swap memory in Bytes.",108,[[["self"]],["u64"]]],[11,"ram_total",E,"Returns the total amount of installed RAM in Bytes.",108,[[["self"]],["u64"]]],[11,"ram_unused",E,"Returns the amount of completely unused RAM in Bytes.",108,[[["self"]],["u64"]]],[0,"termios",R[794],"An interface for controlling asynchronous communication…",N,N],[17,"NCCS",R[1079],E,N,N],[17,R[1014],E,E,N,N],[3,"Termios",E,"Stores settings for the termios API",N,N],[12,"input_flags",E,"Input mode flags (see `termios.c_iflag` documentation)",109,N],[12,"output_flags",E,"Output mode flags (see `termios.c_oflag` documentation)",109,N],[12,"control_flags",E,"Control mode flags (see `termios.c_cflag` documentation)",109,N],[12,"local_flags",E,"Local mode flags (see `termios.c_lflag` documentation)",109,N],[12,"control_chars",E,"Control characters (see `termios.c_cc` documentation)",109,N],[3,"InputFlags",E,"Flags for configuring the input mode of a terminal",N,N],[3,R[1161],E,"Flags for configuring the output mode of a terminal",N,N],[3,R[1162],E,"Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags",E,"Flags for setting any local modes",N,N],[4,"BaudRate",E,"Baud rates supported by the system.",N,N],[13,"B0",E,E,110,N],[13,"B50",E,E,110,N],[13,"B75",E,E,110,N],[13,"B110",E,E,110,N],[13,"B134",E,E,110,N],[13,"B150",E,E,110,N],[13,"B200",E,E,110,N],[13,"B300",E,E,110,N],[13,"B600",E,E,110,N],[13,"B1200",E,E,110,N],[13,"B1800",E,E,110,N],[13,"B2400",E,E,110,N],[13,"B4800",E,E,110,N],[13,"B9600",E,E,110,N],[13,"B19200",E,E,110,N],[13,"B38400",E,E,110,N],[13,"B57600",E,E,110,N],[13,"B115200",E,E,110,N],[13,"B230400",E,E,110,N],[13,"B460800",E,E,110,N],[13,"B500000",E,E,110,N],[13,"B576000",E,E,110,N],[13,"B921600",E,E,110,N],[13,"B1000000",E,E,110,N],[13,"B1152000",E,E,110,N],[13,"B1500000",E,E,110,N],[13,"B2000000",E,E,110,N],[13,"B2500000",E,E,110,N],[13,"B3000000",E,E,110,N],[13,"B3500000",E,E,110,N],[13,"B4000000",E,E,110,N],[4,"SetArg",E,"Specify when a port configuration change should occur.",N,N],[13,"TCSANOW",E,"The change will occur immediately",111,N],[13,"TCSADRAIN",E,"The change occurs after all output has been written",111,N],[13,"TCSAFLUSH",E,"Same as `TCSADRAIN`, but will also flush the input buffer",111,N],[4,"FlushArg",E,"Specify a combination of the input and output buffers to…",N,N],[13,"TCIFLUSH",E,"Flush data that was received but not read",112,N],[13,"TCOFLUSH",E,"Flush data written but not transmitted",112,N],[13,"TCIOFLUSH",E,"Flush both received data not read and written data not…",112,N],[4,"FlowArg",E,"Specify how transmission flow should be altered",N,N],[13,"TCOOFF",E,"Suspend transmission",113,N],[13,"TCOON",E,"Resume transmission",113,N],[13,"TCIOFF",E,"Transmit a STOP character, which should disable a…",113,N],[13,"TCION",E,"Transmit a START character, which should re-enable a…",113,N],[4,R[1160],E,"Indices into the `termios.c_cc` array for special…",N,N],[13,"VDISCARD",E,E,114,N],[13,"VEOF",E,E,114,N],[13,"VEOL",E,E,114,N],[13,"VEOL2",E,E,114,N],[13,"VERASE",E,E,114,N],[13,"VINTR",E,E,114,N],[13,"VKILL",E,E,114,N],[13,"VLNEXT",E,E,114,N],[13,"VMIN",E,E,114,N],[13,"VQUIT",E,E,114,N],[13,"VREPRINT",E,E,114,N],[13,"VSTART",E,E,114,N],[13,"VSTOP",E,E,114,N],[13,"VSUSP",E,E,114,N],[13,"VSWTC",E,E,114,N],[13,"VTIME",E,E,114,N],[13,"VWERASE",E,E,114,N],[5,R[1015],E,"Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],[R[1109]]]],[5,R[1016],E,"Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],[R[1109]]]],[5,R[1017],E,"Set input baud rate (see cfsetispeed(3p)).",N,[[["termios"],[R[1109]]],[R[15]]]],[5,R[1018],E,"Set output baud rate (see cfsetospeed(3p)).",N,[[["termios"],[R[1109]]],[R[15]]]],[5,"cfsetspeed",E,"Set both the input and output baud rates (see termios(3)).",N,[[["termios"],[R[1109]]],[R[15]]]],[5,"cfmakeraw",E,"Configures the port to something like the \"raw\" mode of…",N,[[["termios"]]]],[5,"tcgetattr",E,"Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],[[R[15],["termios"]],["termios"]]]],[5,"tcsetattr",E,"Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["setarg"],["termios"],["rawfd"]],[R[15]]]],[5,"tcdrain",E,"Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],[R[15]]]],[5,"tcflow",E,"Suspend or resume the transmission or reception of data…",N,[[["flowarg"],["rawfd"]],[R[15]]]],[5,"tcflush",E,"Discard data in the output or input queue (see tcflush(3p)).",N,[[["flusharg"],["rawfd"]],[R[15]]]],[5,R[1019],E,"Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["c_int"],["rawfd"]],[R[15]]]],[5,"tcgetsid",E,"Get the session controlled by the given terminal (see…",N,[[["rawfd"]],[[R[15],["pid"]],["pid"]]]],[18,"IGNBRK",E,E,115,N],[18,"BRKINT",E,E,115,N],[18,"IGNPAR",E,E,115,N],[18,"PARMRK",E,E,115,N],[18,"INPCK",E,E,115,N],[18,"ISTRIP",E,E,115,N],[18,"INLCR",E,E,115,N],[18,"IGNCR",E,E,115,N],[18,"ICRNL",E,E,115,N],[18,"IXON",E,E,115,N],[18,"IXOFF",E,E,115,N],[18,"IXANY",E,E,115,N],[18,"IMAXBEL",E,E,115,N],[18,"IUTF8",E,E,115,N],[11,"empty",E,R[636],115,[[],[R[1020]]]],[11,"all",E,R[637],115,[[],[R[1020]]]],[11,"bits",E,R[638],115,[[["self"]],[R[1022]]]],[11,R[639],E,R[640],115,[[[R[1022]]],[[R[1020]],[R[49],[R[1020]]]]]],[11,R[641],E,R[642],115,[[[R[1022]]],[R[1020]]]],[11,R[643],E,R[644],115,[[[R[1022]]],[R[1020]]]],[11,R[166],E,R[645],115,[[["self"]],["bool"]]],[11,"is_all",E,R[646],115,[[["self"]],["bool"]]],[11,R[647],E,R[648],115,[[[R[1020]],["self"]],["bool"]]],[11,R[649],E,R[650],115,[[[R[1020]],["self"]],["bool"]]],[11,R[5],E,R[651],115,[[["self"],[R[1020]]]]],[11,"remove",E,R[652],115,[[["self"],[R[1020]]]]],[11,"toggle",E,R[653],115,[[["self"],[R[1020]]]]],[11,"set",E,R[654],115,[[["self"],[R[1020]],["bool"]]]],[18,"OPOST",E,E,116,N],[18,"OLCUC",E,E,116,N],[18,"ONLCR",E,E,116,N],[18,"OCRNL",E,E,116,N],[18,"ONOCR",E,E,116,N],[18,"ONLRET",E,E,116,N],[18,"OFILL",E,E,116,N],[18,"OFDEL",E,E,116,N],[18,"NL0",E,E,116,N],[18,"NL1",E,E,116,N],[18,"CR0",E,E,116,N],[18,"CR1",E,E,116,N],[18,"CR2",E,E,116,N],[18,"CR3",E,E,116,N],[18,"TAB0",E,E,116,N],[18,"TAB1",E,E,116,N],[18,"TAB2",E,E,116,N],[18,"TAB3",E,E,116,N],[18,"XTABS",E,E,116,N],[18,"BS0",E,E,116,N],[18,"BS1",E,E,116,N],[18,"VT0",E,E,116,N],[18,"VT1",E,E,116,N],[18,"FF0",E,E,116,N],[18,"FF1",E,E,116,N],[18,"NLDLY",E,E,116,N],[18,"CRDLY",E,E,116,N],[18,"TABDLY",E,E,116,N],[18,"BSDLY",E,E,116,N],[18,"VTDLY",E,E,116,N],[18,"FFDLY",E,E,116,N],[11,"empty",E,R[636],116,[[],[R[1021]]]],[11,"all",E,R[637],116,[[],[R[1021]]]],[11,"bits",E,R[638],116,[[["self"]],[R[1022]]]],[11,R[639],E,R[640],116,[[[R[1022]]],[[R[1021]],[R[49],[R[1021]]]]]],[11,R[641],E,R[642],116,[[[R[1022]]],[R[1021]]]],[11,R[643],E,R[644],116,[[[R[1022]]],[R[1021]]]],[11,R[166],E,R[645],116,[[["self"]],["bool"]]],[11,"is_all",E,R[646],116,[[["self"]],["bool"]]],[11,R[647],E,R[648],116,[[[R[1021]],["self"]],["bool"]]],[11,R[649],E,R[650],116,[[[R[1021]],["self"]],["bool"]]],[11,R[5],E,R[651],116,[[[R[1021]],["self"]]]],[11,"remove",E,R[652],116,[[[R[1021]],["self"]]]],[11,"toggle",E,R[653],116,[[[R[1021]],["self"]]]],[11,"set",E,R[654],116,[[[R[1021]],["self"],["bool"]]]],[18,"CS5",E,E,117,N],[18,"CS6",E,E,117,N],[18,"CS7",E,E,117,N],[18,"CS8",E,E,117,N],[18,"CSTOPB",E,E,117,N],[18,"CREAD",E,E,117,N],[18,"PARENB",E,E,117,N],[18,"PARODD",E,E,117,N],[18,"HUPCL",E,E,117,N],[18,"CLOCAL",E,E,117,N],[18,"CRTSCTS",E,E,117,N],[18,"CBAUD",E,E,117,N],[18,"CMSPAR",E,E,117,N],[18,"CIBAUD",E,E,117,N],[18,"CBAUDEX",E,E,117,N],[18,"CSIZE",E,E,117,N],[11,"empty",E,R[636],117,[[],[R[1023]]]],[11,"all",E,R[637],117,[[],[R[1023]]]],[11,"bits",E,R[638],117,[[["self"]],[R[1022]]]],[11,R[639],E,R[640],117,[[[R[1022]]],[[R[1023]],[R[49],[R[1023]]]]]],[11,R[641],E,R[642],117,[[[R[1022]]],[R[1023]]]],[11,R[643],E,R[644],117,[[[R[1022]]],[R[1023]]]],[11,R[166],E,R[645],117,[[["self"]],["bool"]]],[11,"is_all",E,R[646],117,[[["self"]],["bool"]]],[11,R[647],E,R[648],117,[[[R[1023]],["self"]],["bool"]]],[11,R[649],E,R[650],117,[[[R[1023]],["self"]],["bool"]]],[11,R[5],E,R[651],117,[[[R[1023]],["self"]]]],[11,"remove",E,R[652],117,[[[R[1023]],["self"]]]],[11,"toggle",E,R[653],117,[[[R[1023]],["self"]]]],[11,"set",E,R[654],117,[[[R[1023]],["self"],["bool"]]]],[18,"ECHOKE",E,E,118,N],[18,"ECHOE",E,E,118,N],[18,"ECHOK",E,E,118,N],[18,"ECHO",E,E,118,N],[18,"ECHONL",E,E,118,N],[18,"ECHOPRT",E,E,118,N],[18,"ECHOCTL",E,E,118,N],[18,"ISIG",E,E,118,N],[18,"ICANON",E,E,118,N],[18,"IEXTEN",E,E,118,N],[18,"EXTPROC",E,E,118,N],[18,"TOSTOP",E,E,118,N],[18,"FLUSHO",E,E,118,N],[18,"PENDIN",E,E,118,N],[18,"NOFLSH",E,E,118,N],[11,"empty",E,R[636],118,[[],[R[1024]]]],[11,"all",E,R[637],118,[[],[R[1024]]]],[11,"bits",E,R[638],118,[[["self"]],[R[1022]]]],[11,R[639],E,R[640],118,[[[R[1022]]],[[R[1024]],[R[49],[R[1024]]]]]],[11,R[641],E,R[642],118,[[[R[1022]]],[R[1024]]]],[11,R[643],E,R[644],118,[[[R[1022]]],[R[1024]]]],[11,R[166],E,R[645],118,[[["self"]],["bool"]]],[11,"is_all",E,R[646],118,[[["self"]],["bool"]]],[11,R[647],E,R[648],118,[[[R[1024]],["self"]],["bool"]]],[11,R[649],E,R[650],118,[[[R[1024]],["self"]],["bool"]]],[11,R[5],E,R[651],118,[[[R[1024]],["self"]]]],[11,"remove",E,R[652],118,[[[R[1024]],["self"]]]],[11,"toggle",E,R[653],118,[[[R[1024]],["self"]]]],[11,"set",E,R[654],118,[[[R[1024]],["self"],["bool"]]]],[0,"time",R[794],E,N,N],[6,"time_t",R[1080],E,N,N],[6,R[1025],E,E,N,N],[3,"TimeSpec",E,E,N,N],[3,"TimeVal",E,E,N,N],[8,R[1163],E,E,N,N],[11,"zero",E,E,119,[[],["self"]]],[11,"hours",E,E,119,[[["i64"]],["self"]]],[11,"minutes",E,E,119,[[["i64"]],["self"]]],[10,"seconds",E,E,119,[[["i64"]],["self"]]],[10,R[1090],E,E,119,[[["i64"]],["self"]]],[10,R[1091],E,E,119,[[["i64"]],["self"]]],[10,R[1092],E,E,119,[[["i64"]],["self"]]],[11,"num_hours",E,E,119,[[["self"]],["i64"]]],[11,"num_minutes",E,E,119,[[["self"]],["i64"]]],[10,R[1093],E,E,119,[[["self"]],["i64"]]],[10,R[1094],E,E,119,[[["self"]],["i64"]]],[10,R[1095],E,E,119,[[["self"]],["i64"]]],[10,R[1096],E,E,119,[[["self"]],["i64"]]],[11,"tv_sec",E,E,120,[[["self"]],["time_t"]]],[11,"tv_nsec",E,E,120,[[["self"]],["c_long"]]],[11,"tv_sec",E,E,121,[[["self"]],["time_t"]]],[11,"tv_usec",E,E,121,[[["self"]],[R[1025]]]],[0,"uio",R[794],E,N,N],[3,R[1164],R[1081],"A slice of memory in a remote process, starting at address…",N,N],[12,"base",E,"The starting address of this slice (`iov_base`).",122,N],[12,"len",E,"The number of bytes in this slice (`iov_len`).",122,N],[3,"IoVec",E,E,N,N],[5,"writev",E,E,N,[[["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"readv",E,E,N,[[["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"pwritev",E,"Write to `fd` at `offset` from buffers in `iov`.",N,[[["off_t"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"preadv",E,"Read from `fd` at `offset` filling buffers in `iov`.",N,[[["off_t"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"pwrite",E,E,N,[[["off_t"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"pread",E,E,N,[[["off_t"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,R[1026],E,"Write data directly to another process's virtual memory…",N,[[["pid"]],[[R[15],["usize"]],["usize"]]]],[5,R[1027],E,"Read data directly from another process's virtual memory…",N,[[["pid"]],[[R[15],["usize"]],["usize"]]]],[11,"as_slice",E,E,123,[[["self"]]]],[11,R[777],E,E,123,[[],["iovec"]]],[11,R[1028],E,E,123,[[],["iovec"]]],[0,"utsname",R[794],E,N,N],[3,"UtsName",R[1082],E,N,N],[5,"uname",E,E,N,[[],["utsname"]]],[11,"sysname",E,E,124,[[["self"]],["str"]]],[11,"nodename",E,E,124,[[["self"]],["str"]]],[11,"release",E,E,124,[[["self"]],["str"]]],[11,"version",E,E,124,[[["self"]],["str"]]],[11,"machine",E,E,124,[[["self"]],["str"]]],[0,"wait",R[794],E,N,N],[3,R[1165],R[1083],E,N,N],[4,"WaitStatus",E,"Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited",E,"The process exited normally (as with `exit()` or returning…",125,N],[13,"Signaled",E,"The process was killed by the given signal. The third…",125,N],[13,"Stopped",E,"The process is alive, but was stopped by the given signal.…",125,N],[13,"PtraceEvent",E,"The traced process was stopped by a `PTRACE_EVENT_*`…",125,N],[13,"PtraceSyscall",E,"The traced process was stopped by execution of a system…",125,N],[13,"Continued",E,"The process was previously stopped but has resumed…",125,N],[13,"StillAlive",E,"There are currently no state changes to report in any…",125,N],[5,"waitpid",E,E,N,[[[R[49],[R[1029]]],[R[49],["pid"]],[R[1029]],["into",[R[49]]]],[[R[1030]],[R[15],[R[1030]]]]]],[5,"wait",E,E,N,[[],[[R[1030]],[R[15],[R[1030]]]]]],[18,"WNOHANG",E,E,126,N],[18,"WUNTRACED",E,E,126,N],[18,"WEXITED",E,E,126,N],[18,"WCONTINUED",E,E,126,N],[18,"WSTOPPED",E,E,126,N],[18,"WNOWAIT",E,"Don't reap, just poll status.",126,N],[18,R[1031],E,"Don't wait on children of other threads in this group",126,N],[18,"__WALL",E,"Wait on all children, regardless of type",126,N],[18,"__WCLONE",E,E,126,N],[11,"empty",E,R[636],126,[[],[R[1029]]]],[11,"all",E,R[637],126,[[],[R[1029]]]],[11,"bits",E,R[638],126,[[["self"]],["c_int"]]],[11,R[639],E,R[640],126,[[["c_int"]],[[R[49],[R[1029]]],[R[1029]]]]],[11,R[641],E,R[642],126,[[["c_int"]],[R[1029]]]],[11,R[643],E,R[644],126,[[["c_int"]],[R[1029]]]],[11,R[166],E,R[645],126,[[["self"]],["bool"]]],[11,"is_all",E,R[646],126,[[["self"]],["bool"]]],[11,R[647],E,R[648],126,[[[R[1029]],["self"]],["bool"]]],[11,R[649],E,R[650],126,[[[R[1029]],["self"]],["bool"]]],[11,R[5],E,R[651],126,[[["self"],[R[1029]]]]],[11,"remove",E,R[652],126,[[["self"],[R[1029]]]]],[11,"toggle",E,R[653],126,[[["self"],[R[1029]]]]],[11,"set",E,R[654],126,[[["self"],[R[1029]],["bool"]]]],[11,"pid",E,"Extracts the PID from the WaitStatus unless it equals…",125,[[["self"]],[[R[49],["pid"]],["pid"]]]],[11,"from_raw",E,"Convert a raw `wstatus` as returned by `waitpid`/`wait`…",125,[[["pid"],["i32"]],[[R[1030]],[R[15],[R[1030]]]]]],[0,"inotify",R[794],"Monitoring API for filesystem events.",N,N],[3,R[1167],R[1084],"Configuration options for `inotify_add_watch`.",N,N],[3,"InitFlags",E,"Configuration options for `inotify_init1`.",N,N],[3,"Inotify",E,"An inotify instance. This is also a file descriptor, you…",N,N],[3,R[1193],E,"This object is returned when you create a new watch on an…",N,N],[3,R[1166],E,"A single inotify event.",N,N],[12,"wd",E,"Watch descriptor. This field corresponds to the watch…",127,N],[12,"mask",E,"Event mask. This field is a bitfield describing the exact…",127,N],[12,"cookie",E,"This cookie is a number that allows you to connect related…",127,N],[12,"name",E,"Filename. This field exists only if the event was…",127,N],[18,"IN_ACCESS",E,E,128,N],[18,"IN_MODIFY",E,E,128,N],[18,"IN_ATTRIB",E,E,128,N],[18,R[1032],E,E,128,N],[18,R[1033],E,E,128,N],[18,"IN_OPEN",E,E,128,N],[18,R[1034],E,E,128,N],[18,R[1035],E,E,128,N],[18,"IN_CREATE",E,E,128,N],[18,"IN_DELETE",E,E,128,N],[18,R[1036],E,E,128,N],[18,R[1037],E,E,128,N],[18,"IN_UNMOUNT",E,E,128,N],[18,R[1038],E,E,128,N],[18,"IN_IGNORED",E,E,128,N],[18,"IN_CLOSE",E,E,128,N],[18,"IN_MOVE",E,E,128,N],[18,"IN_ONLYDIR",E,E,128,N],[18,R[1039],E,E,128,N],[18,"IN_ISDIR",E,E,128,N],[18,"IN_ONESHOT",E,E,128,N],[18,R[1040],E,E,128,N],[11,"empty",E,R[636],128,[[],[R[1041]]]],[11,"all",E,R[637],128,[[],[R[1041]]]],[11,"bits",E,R[638],128,[[["self"]],["u32"]]],[11,R[639],E,R[640],128,[[["u32"]],[[R[49],[R[1041]]],[R[1041]]]]],[11,R[641],E,R[642],128,[[["u32"]],[R[1041]]]],[11,R[643],E,R[644],128,[[["u32"]],[R[1041]]]],[11,R[166],E,R[645],128,[[["self"]],["bool"]]],[11,"is_all",E,R[646],128,[[["self"]],["bool"]]],[11,R[647],E,R[648],128,[[["self"],[R[1041]]],["bool"]]],[11,R[649],E,R[650],128,[[["self"],[R[1041]]],["bool"]]],[11,R[5],E,R[651],128,[[["self"],[R[1041]]]]],[11,"remove",E,R[652],128,[[["self"],[R[1041]]]]],[11,"toggle",E,R[653],128,[[["self"],[R[1041]]]]],[11,"set",E,R[654],128,[[["bool"],["self"],[R[1041]]]]],[18,"IN_CLOEXEC",E,E,129,N],[18,R[1042],E,E,129,N],[11,"empty",E,R[636],129,[[],[R[1043]]]],[11,"all",E,R[637],129,[[],[R[1043]]]],[11,"bits",E,R[638],129,[[["self"]],["c_int"]]],[11,R[639],E,R[640],129,[[["c_int"]],[[R[1043]],[R[49],[R[1043]]]]]],[11,R[641],E,R[642],129,[[["c_int"]],[R[1043]]]],[11,R[643],E,R[644],129,[[["c_int"]],[R[1043]]]],[11,R[166],E,R[645],129,[[["self"]],["bool"]]],[11,"is_all",E,R[646],129,[[["self"]],["bool"]]],[11,R[647],E,R[648],129,[[[R[1043]],["self"]],["bool"]]],[11,R[649],E,R[650],129,[[[R[1043]],["self"]],["bool"]]],[11,R[5],E,R[651],129,[[[R[1043]],["self"]]]],[11,"remove",E,R[652],129,[[[R[1043]],["self"]]]],[11,"toggle",E,R[653],129,[[[R[1043]],["self"]]]],[11,"set",E,R[654],129,[[[R[1043]],["self"],["bool"]]]],[11,"init",E,"Initialize a new inotify instance.",130,[[[R[1043]]],[[R[15],["inotify"]],["inotify"]]]],[11,"add_watch",E,"Adds a new watch on the target file or directory. ",130,[[[R[1041]],["self"],["p"]],[[R[15],[R[1044]]],[R[1044]]]]],[11,"rm_watch",E,"Removes an existing watch using the watch descriptor…",130,[[["self"],[R[1044]]],[R[15]]]],[11,"read_events",E,"Reads a collection of events from the inotify file…",130,[[["self"]],[[R[15],["vec"]],["vec",["inotifyevent"]]]]],[0,"ucontext","nix",E,N,N],[3,"UContext",R[1085],E,N,N],[11,"get",E,E,131,[[],[["ucontext"],[R[15],["ucontext"]]]]],[11,"set",E,E,131,[[["self"]],[R[15]]]],[11,"sigmask_mut",E,E,131,[[["self"]],["sigset"]]],[11,"sigmask",E,E,131,[[["self"]],["sigset"]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\"…",N,N],[3,"Uid",R[1045],"User identifier",N,N],[3,"Gid",E,"Group identifier",N,N],[3,"Pid",E,"Process identifier",N,N],[3,R[1170],E,"Options for access()",N,N],[4,"ForkResult",E,"Represents the successful result of calling `fork`",N,N],[13,"Parent",E,E,132,N],[12,"child","nix::unistd::ForkResult",E,132,N],[13,"Child",R[1045],E,132,N],[4,R[1168],E,"Flags for `fchownat` function.",N,N],[13,R[1002],E,E,133,N],[13,R[1003],E,E,133,N],[4,"Whence",E,"Directive that tells [`lseek`] and [`lseek64`] what the…",N,N],[13,"SeekSet",E,"Specify an offset relative to the start of the file.",134,N],[13,"SeekCur",E,"Specify an offset relative to the current file location.",134,N],[13,"SeekEnd",E,"Specify an offset relative to the end of the file.",134,N],[13,"SeekData",E,"Specify an offset relative to the next location in the…",134,N],[13,"SeekHole",E,"Specify an offset relative to the next hole in the file…",134,N],[4,R[1169],E,"Variable names for `pathconf`",N,N],[13,"FILESIZEBITS",E,"Minimum number of bits needed to represent, as a signed…",135,N],[13,"LINK_MAX",E,"Maximum number of links to a single file.",135,N],[13,"MAX_CANON",E,"Maximum number of bytes in a terminal canonical input line.",135,N],[13,"MAX_INPUT",E,"Minimum number of bytes for which space is available in a…",135,N],[13,"NAME_MAX",E,"Maximum number of bytes in a filename (not including the…",135,N],[13,"PATH_MAX",E,"Maximum number of bytes the implementation will store as a…",135,N],[13,"PIPE_BUF",E,"Maximum number of bytes that is guaranteed to be atomic…",135,N],[13,"POSIX2_SYMLINKS",E,"Symbolic links can be created.",135,N],[13,"POSIX_ALLOC_SIZE_MIN",E,"Minimum number of bytes of storage actually allocated for…",135,N],[13,"POSIX_REC_INCR_XFER_SIZE",E,"Recommended increment for file transfer sizes between the…",135,N],[13,"POSIX_REC_MAX_XFER_SIZE",E,"Maximum recommended file transfer size.",135,N],[13,"POSIX_REC_MIN_XFER_SIZE",E,"Minimum recommended file transfer size.",135,N],[13,"POSIX_REC_XFER_ALIGN",E,"Recommended file transfer buffer alignment.",135,N],[13,"SYMLINK_MAX",E,"Maximum number of bytes in a symbolic link.",135,N],[13,"_POSIX_CHOWN_RESTRICTED",E,"The use of `chown` and `fchown` is restricted to a process…",135,N],[13,"_POSIX_NO_TRUNC",E,"Pathname components longer than {NAME_MAX} generate an…",135,N],[13,R[1014],E,"This symbol shall be defined to be the value of a…",135,N],[13,"_POSIX_ASYNC_IO",E,"Asynchronous input or output operations may be performed…",135,N],[13,"_POSIX_PRIO_IO",E,"Prioritized input or output operations may be performed…",135,N],[13,"_POSIX_SYNC_IO",E,"Synchronized input or output operations may be performed…",135,N],[4,"SysconfVar",E,"Variable names for `sysconf`",N,N],[13,"AIO_LISTIO_MAX",E,"Maximum number of I/O operations in a single list I/O call…",136,N],[13,"AIO_MAX",E,"Maximum number of outstanding asynchronous I/O operations…",136,N],[13,"AIO_PRIO_DELTA_MAX",E,"The maximum amount by which a process can decrease its…",136,N],[13,"ARG_MAX",E,"Maximum length of argument to the exec functions including…",136,N],[13,"ATEXIT_MAX",E,"Maximum number of functions that may be registered with…",136,N],[13,"BC_BASE_MAX",E,"Maximum obase values allowed by the bc utility.",136,N],[13,"BC_DIM_MAX",E,"Maximum number of elements permitted in an array by the bc…",136,N],[13,"BC_SCALE_MAX",E,"Maximum scale value allowed by the bc utility.",136,N],[13,"BC_STRING_MAX",E,"Maximum length of a string constant accepted by the bc…",136,N],[13,"CHILD_MAX",E,"Maximum number of simultaneous processes per real user ID.",136,N],[13,"COLL_WEIGHTS_MAX",E,"Maximum number of weights that can be assigned to an entry…",136,N],[13,"DELAYTIMER_MAX",E,"Maximum number of timer expiration overruns.",136,N],[13,"EXPR_NEST_MAX",E,"Maximum number of expressions that can be nested within…",136,N],[13,"HOST_NAME_MAX",E,"Maximum length of a host name (not including the…",136,N],[13,"IOV_MAX",E,"Maximum number of iovec structures that one process has…",136,N],[13,"LINE_MAX",E,"Unless otherwise noted, the maximum length, in bytes, of a…",136,N],[13,"LOGIN_NAME_MAX",E,"Maximum length of a login name.",136,N],[13,"NGROUPS_MAX",E,"Maximum number of simultaneous supplementary group IDs per…",136,N],[13,"GETGR_R_SIZE_MAX",E,"Initial size of `getgrgid_r` and `getgrnam_r` data buffers",136,N],[13,"GETPW_R_SIZE_MAX",E,"Initial size of `getpwuid_r` and `getpwnam_r` data buffers",136,N],[13,"MQ_OPEN_MAX",E,"The maximum number of open message queue descriptors a…",136,N],[13,"MQ_PRIO_MAX",E,"The maximum number of message priorities supported by the…",136,N],[13,"OPEN_MAX",E,"A value one greater than the maximum value that the system…",136,N],[13,"_POSIX_ADVISORY_INFO",E,"The implementation supports the Advisory Information option.",136,N],[13,"_POSIX_BARRIERS",E,"The implementation supports barriers.",136,N],[13,"_POSIX_ASYNCHRONOUS_IO",E,"The implementation supports asynchronous input and output.",136,N],[13,"_POSIX_CLOCK_SELECTION",E,"The implementation supports clock selection.",136,N],[13,"_POSIX_CPUTIME",E,"The implementation supports the Process CPU-Time Clocks…",136,N],[13,"_POSIX_FSYNC",E,"The implementation supports the File Synchronization option.",136,N],[13,"_POSIX_IPV6",E,"The implementation supports the IPv6 option.",136,N],[13,"_POSIX_JOB_CONTROL",E,"The implementation supports job control.",136,N],[13,"_POSIX_MAPPED_FILES",E,"The implementation supports memory mapped Files.",136,N],[13,"_POSIX_MEMLOCK",E,"The implementation supports the Process Memory Locking…",136,N],[13,"_POSIX_MEMLOCK_RANGE",E,"The implementation supports the Range Memory Locking option.",136,N],[13,"_POSIX_MEMORY_PROTECTION",E,"The implementation supports memory protection.",136,N],[13,"_POSIX_MESSAGE_PASSING",E,"The implementation supports the Message Passing option.",136,N],[13,"_POSIX_MONOTONIC_CLOCK",E,"The implementation supports the Monotonic Clock option.",136,N],[13,"_POSIX_PRIORITIZED_IO",E,"The implementation supports the Prioritized Input and…",136,N],[13,"_POSIX_PRIORITY_SCHEDULING",E,"The implementation supports the Process Scheduling option.",136,N],[13,"_POSIX_RAW_SOCKETS",E,"The implementation supports the Raw Sockets option.",136,N],[13,"_POSIX_READER_WRITER_LOCKS",E,"The implementation supports read-write locks.",136,N],[13,"_POSIX_REALTIME_SIGNALS",E,"The implementation supports realtime signals.",136,N],[13,"_POSIX_REGEXP",E,"The implementation supports the Regular Expression…",136,N],[13,"_POSIX_SAVED_IDS",E,"Each process has a saved set-user-ID and a saved…",136,N],[13,"_POSIX_SEMAPHORES",E,"The implementation supports semaphores.",136,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS",E,"The implementation supports the Shared Memory Objects…",136,N],[13,"_POSIX_SHELL",E,"The implementation supports the POSIX shell.",136,N],[13,"_POSIX_SPAWN",E,"The implementation supports the Spawn option.",136,N],[13,"_POSIX_SPIN_LOCKS",E,"The implementation supports spin locks.",136,N],[13,"_POSIX_SPORADIC_SERVER",E,"The implementation supports the Process Sporadic Server…",136,N],[13,"_POSIX_SS_REPL_MAX",E,E,136,N],[13,"_POSIX_SYNCHRONIZED_IO",E,"The implementation supports the Synchronized Input and…",136,N],[13,"_POSIX_THREAD_ATTR_STACKADDR",E,"The implementation supports the Thread Stack Address…",136,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE",E,"The implementation supports the Thread Stack Size…",136,N],[13,"_POSIX_THREAD_CPUTIME",E,"The implementation supports the Thread CPU-Time Clocks…",136,N],[13,"_POSIX_THREAD_PRIO_INHERIT",E,R[1046],136,N],[13,"_POSIX_THREAD_PRIO_PROTECT",E,R[1046],136,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING",E,"The implementation supports the Thread Execution…",136,N],[13,"_POSIX_THREAD_PROCESS_SHARED",E,"The implementation supports the Thread Process-Shared…",136,N],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT",E,R[1047],136,N],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT",E,R[1047],136,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS",E,"The implementation supports thread-safe functions.",136,N],[13,"_POSIX_THREAD_SPORADIC_SERVER",E,"The implementation supports the Thread Sporadic Server…",136,N],[13,"_POSIX_THREADS",E,"The implementation supports threads.",136,N],[13,"_POSIX_TIMEOUTS",E,"The implementation supports timeouts.",136,N],[13,"_POSIX_TIMERS",E,"The implementation supports timers.",136,N],[13,"_POSIX_TRACE",E,"The implementation supports the Trace option.",136,N],[13,"_POSIX_TRACE_EVENT_FILTER",E,"The implementation supports the Trace Event Filter option.",136,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX",E,E,136,N],[13,"_POSIX_TRACE_INHERIT",E,"The implementation supports the Trace Inherit option.",136,N],[13,"_POSIX_TRACE_LOG",E,"The implementation supports the Trace Log option.",136,N],[13,"_POSIX_TRACE_NAME_MAX",E,E,136,N],[13,"_POSIX_TRACE_SYS_MAX",E,E,136,N],[13,"_POSIX_TRACE_USER_EVENT_MAX",E,E,136,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS",E,"The implementation supports the Typed Memory Objects option.",136,N],[13,"_POSIX_VERSION",E,"Integer value indicating version of this standard…",136,N],[13,"_POSIX_V6_ILP32_OFF32",E,R[1048],136,N],[13,"_POSIX_V6_ILP32_OFFBIG",E,R[1048],136,N],[13,"_POSIX_V6_LP64_OFF64",E,R[1048],136,N],[13,"_POSIX_V6_LPBIG_OFFBIG",E,R[1048],136,N],[13,"_POSIX2_C_BIND",E,"The implementation supports the C-Language Binding option.",136,N],[13,"_POSIX2_C_DEV",E,"The implementation supports the C-Language Development…",136,N],[13,"_POSIX2_CHAR_TERM",E,"The implementation supports the Terminal Characteristics…",136,N],[13,"_POSIX2_FORT_DEV",E,"The implementation supports the FORTRAN Development…",136,N],[13,"_POSIX2_FORT_RUN",E,"The implementation supports the FORTRAN Runtime Utilities…",136,N],[13,"_POSIX2_LOCALEDEF",E,"The implementation supports the creation of locales by the…",136,N],[13,"_POSIX2_PBS",E,"The implementation supports the Batch Environment Services…",136,N],[13,"_POSIX2_PBS_ACCOUNTING",E,"The implementation supports the Batch Accounting option.",136,N],[13,"_POSIX2_PBS_CHECKPOINT",E,"The implementation supports the Batch Checkpoint/Restart…",136,N],[13,"_POSIX2_PBS_LOCATE",E,"The implementation supports the Locate Batch Job Request…",136,N],[13,"_POSIX2_PBS_MESSAGE",E,"The implementation supports the Batch Job Message Request…",136,N],[13,"_POSIX2_PBS_TRACK",E,"The implementation supports the Track Batch Job Request…",136,N],[13,"_POSIX2_SW_DEV",E,"The implementation supports the Software Development…",136,N],[13,"_POSIX2_UPE",E,"The implementation supports the User Portability Utilities…",136,N],[13,"_POSIX2_VERSION",E,"Integer value indicating version of the Shell and…",136,N],[13,"PAGE_SIZE",E,"The size of a system page in bytes.",136,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS",E,E,136,N],[13,"PTHREAD_KEYS_MAX",E,E,136,N],[13,R[1049],E,E,136,N],[13,"PTHREAD_THREADS_MAX",E,E,136,N],[13,"RE_DUP_MAX",E,E,136,N],[13,"RTSIG_MAX",E,E,136,N],[13,"SEM_NSEMS_MAX",E,E,136,N],[13,"SEM_VALUE_MAX",E,E,136,N],[13,"SIGQUEUE_MAX",E,E,136,N],[13,"STREAM_MAX",E,E,136,N],[13,"SYMLOOP_MAX",E,E,136,N],[13,"TIMER_MAX",E,E,136,N],[13,"TTY_NAME_MAX",E,E,136,N],[13,"TZNAME_MAX",E,E,136,N],[13,"_XOPEN_CRYPT",E,"The implementation supports the X/Open Encryption Option…",136,N],[13,"_XOPEN_ENH_I18N",E,"The implementation supports the Issue 4, Version 2…",136,N],[13,"_XOPEN_LEGACY",E,E,136,N],[13,"_XOPEN_REALTIME",E,"The implementation supports the X/Open Realtime Option…",136,N],[13,"_XOPEN_REALTIME_THREADS",E,"The implementation supports the X/Open Realtime Threads…",136,N],[13,"_XOPEN_SHM",E,"The implementation supports the Issue 4, Version 2 Shared…",136,N],[13,"_XOPEN_STREAMS",E,"The implementation supports the XSI STREAMS Option Group.",136,N],[13,"_XOPEN_UNIX",E,"The implementation supports the XSI option",136,N],[13,"_XOPEN_VERSION",E,"Integer value indicating version of the X/Open Portability…",136,N],[5,"pivot_root",E,E,N,[[["p1"],["p2"]],[R[15]]]],[5,"setresuid",E,"Sets the real, effective, and saved uid. (see setresuid(2))",N,[[["uid"]],[R[15]]]],[5,"setresgid",E,"Sets the real, effective, and saved gid. (see setresuid(2))",N,[[["gid"]],[R[15]]]],[5,"fork",E,"Create a new child process duplicating the parent process…",N,[[],[[R[1110]],[R[15],[R[1110]]]]]],[5,"getpid",E,"Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid",E,"Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid",E,"Set a process group ID (see setpgid(2)).",N,[[["pid"]],[R[15]]]],[5,"getpgid",E,E,N,[[[R[49],["pid"]],["pid"]],[[R[15],["pid"]],["pid"]]]],[5,"setsid",E,"Create new session and set process group id (see setsid(2)).",N,[[],[[R[15],["pid"]],["pid"]]]],[5,"getsid",E,"Get the process group ID of a session leader getsid(2).",N,[[[R[49],["pid"]],["pid"]],[[R[15],["pid"]],["pid"]]]],[5,"tcgetpgrp",E,"Get the terminal foreground process group (see…",N,[[["c_int"]],[[R[15],["pid"]],["pid"]]]],[5,"tcsetpgrp",E,"Set the terminal foreground process group (see…",N,[[["c_int"],["pid"]],[R[15]]]],[5,"getpgrp",E,"Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"gettid",E,"Get the caller's thread ID (see gettid(2).",N,[[],["pid"]]],[5,"dup",E,"Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"dup2",E,"Create a copy of the specified file descriptor using the…",N,[[["rawfd"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"dup3",E,"Create a new copy of the specified file descriptor using…",N,[[["oflag"],["rawfd"]],[["rawfd"],[R[15],["rawfd"]]]]],[5,"chdir",E,"Change the current working directory of the calling…",N,[[["p"]],[R[15]]]],[5,"fchdir",E,"Change the current working directory of the process to the…",N,[[["rawfd"]],[R[15]]]],[5,"mkdir",E,"Creates new directory `path` with access rights `mode`.…",N,[[["mode"],["p"]],[R[15]]]],[5,"mkfifo",E,"Creates new fifo special file (named pipe) with path…",N,[[["mode"],["p"]],[R[15]]]],[5,"symlinkat",E,"Creates a symbolic link at `path2` which points to `path1`.",N,[[["p2"],["p1"],[R[49],["rawfd"]],["rawfd"]],[R[15]]]],[5,"getcwd",E,"Returns the current directory as a `PathBuf`",N,[[],[[R[15],[R[575]]],[R[575]]]]],[5,"chown",E,R[1050],N,[[[R[49],["uid"]],["uid"],[R[49],["gid"]],["p"],["gid"]],[R[15]]]],[5,"fchownat",E,R[1050],N,[[[R[49],["uid"]],[R[49],["gid"]],[R[1111]],["p"],["gid"],[R[49],["rawfd"]],["uid"],["rawfd"]],[R[15]]]],[5,"execv",E,R[1051],N,[[["cstring"]],[["void"],[R[15],["void"]]]]],[5,"execve",E,R[1051],N,[[["cstring"]],[["void"],[R[15],["void"]]]]],[5,"execvp",E,R[1052],N,[[["cstring"]],[["void"],[R[15],["void"]]]]],[5,"execvpe",E,R[1052],N,[[["cstring"]],[["void"],[R[15],["void"]]]]],[5,"fexecve",E,R[1051],N,[[["rawfd"]],[["void"],[R[15],["void"]]]]],[5,"execveat",E,"Execute program relative to a directory file descriptor…",N,[[["rawfd"],["cstring"],[R[627]]],[["void"],[R[15],["void"]]]]],[5,"daemon",E,"Daemonize this process by detaching from the controlling…",N,[[["bool"]],[R[15]]]],[5,R[1053],E,"Set the system host name (see sethostname(2)).",N,[[["osstr"],["asref",["osstr"]]],[R[15]]]],[5,R[1054],E,"Get the host name and store it in the provided buffer,…",N,[[],[["cstr"],[R[15],["cstr"]]]]],[5,"close",E,"Close a raw file descriptor",N,[[["rawfd"]],[R[15]]]],[5,"read",E,"Read from a raw file descriptor.",N,[[["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"write",E,"Write to a raw file descriptor.",N,[[["rawfd"]],[[R[15],["usize"]],["usize"]]]],[5,"lseek",E,"Move the read/write file offset.",N,[[["off_t"],["whence"],["rawfd"]],[["off_t"],[R[15],["off_t"]]]]],[5,"lseek64",E,E,N,[[["whence"],["off64_t"],["rawfd"]],[["off64_t"],[R[15],["off64_t"]]]]],[5,"pipe",E,"Create an interprocess channel.",N,[[],[R[15]]]],[5,"pipe2",E,"Like `pipe`, but allows setting certain file descriptor…",N,[[["oflag"]],[R[15]]]],[5,"truncate",E,R[1055],N,[[["off_t"],["p"]],[R[15]]]],[5,"ftruncate",E,R[1055],N,[[["off_t"],["rawfd"]],[R[15]]]],[5,"isatty",E,E,N,[[["rawfd"]],[[R[15],["bool"]],["bool"]]]],[5,"unlink",E,"Remove a directory entry",N,[[["p"]],[R[15]]]],[5,"chroot",E,E,N,[[["p"]],[R[15]]]],[5,"sync",E,"Commit filesystem caches to disk",N,[[]]],[5,"fsync",E,"Synchronize changes to a file",N,[[["rawfd"]],[R[15]]]],[5,"fdatasync",E,"Synchronize the data of a file",N,[[["rawfd"]],[R[15]]]],[5,"getuid",E,"Get a real user ID",N,[[],["uid"]]],[5,"geteuid",E,"Get the effective user ID",N,[[],["uid"]]],[5,"getgid",E,"Get the real group ID",N,[[],["gid"]]],[5,"getegid",E,"Get the effective group ID",N,[[],["gid"]]],[5,"seteuid",E,"Set the effective user ID",N,[[["uid"]],[R[15]]]],[5,"setegid",E,"Set the effective group ID",N,[[["gid"]],[R[15]]]],[5,"setuid",E,"Set the user ID",N,[[["uid"]],[R[15]]]],[5,"setgid",E,"Set the group ID",N,[[["gid"]],[R[15]]]],[5,"getgroups",E,"Get the list of supplementary group IDs of the calling…",N,[[],[["vec",["gid"]],[R[15],["vec"]]]]],[5,"setgroups",E,"Set the list of supplementary group IDs for the calling…",N,[[],[R[15]]]],[5,R[1056],E,"Calculate the supplementary group access list.",N,[[["cstr"],["gid"]],[["vec",["gid"]],[R[15],["vec"]]]]],[5,"initgroups",E,"Initialize the supplementary group access list.",N,[[["cstr"],["gid"]],[R[15]]]],[5,"pause",E,"Suspend the thread until a signal is received.",N,[[]]],[5,"sleep",E,"Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp",E,"Creates a regular file which persists even after process…",N,[[["p"]],[R[15]]]],[5,"fpathconf",E,"Like `pathconf`, but works with file descriptors instead…",N,[[[R[1057]],["rawfd"]],[[R[15],[R[49]]],[R[49],["c_long"]]]]],[5,"pathconf",E,"Get path-dependent configurable system variables (see…",N,[[["p"],[R[1057]]],[[R[15],[R[49]]],[R[49],["c_long"]]]]],[5,"sysconf",E,"Get configurable system variables (see sysconf(3))",N,[[[R[1117]]],[[R[15],[R[49]]],[R[49],["c_long"]]]]],[5,"access",E,"Checks the file named by `path` for accessibility…",N,[[["p"],[R[1058]]],[R[15]]]],[0,"alarm",E,"Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],[[R[49],["c_uint"]],["c_uint"]]]],[5,"cancel",E,"Cancel an previously set alarm signal.",N,[[],[[R[49],["c_uint"]],["c_uint"]]]],[0,"acct",R[1045],E,N,N],[5,"enable","nix::unistd::acct","Enable process accounting",N,[[["p"]],[R[15]]]],[5,"disable",E,"Disable process accounting",N,[[],[R[15]]]],[17,"ROOT",R[1045],"Constant for UID = 0",N,N],[11,"from_raw",E,"Creates `Uid` from raw `uid_t`.",137,[[["uid_t"]],["self"]]],[11,"current",E,"Returns Uid of calling process. This is practically a more…",137,[[],["self"]]],[11,"effective",E,"Returns effective Uid of calling process. This is…",137,[[],["self"]]],[11,"is_root",E,"Returns true if the `Uid` represents privileged user -…",137,[[["self"]],["bool"]]],[11,"as_raw",E,"Get the raw `uid_t` wrapped by `self`.",137,[[["self"]],["uid_t"]]],[11,"from_raw",E,"Creates `Gid` from raw `gid_t`.",138,[[["gid_t"]],["self"]]],[11,"current",E,"Returns Gid of calling process. This is practically a more…",138,[[],["self"]]],[11,"effective",E,"Returns effective Gid of calling process. This is…",138,[[],["self"]]],[11,"as_raw",E,"Get the raw `gid_t` wrapped by `self`.",138,[[["self"]],["gid_t"]]],[11,"from_raw",E,"Creates `Pid` from raw `pid_t`.",139,[[["pid_t"]],["self"]]],[11,"this",E,"Returns PID of calling process",139,[[],["self"]]],[11,"parent",E,"Returns PID of parent of calling process",139,[[],["self"]]],[11,"as_raw",E,"Get the raw `pid_t` wrapped by `self`.",139,[[["self"]],["pid_t"]]],[11,"is_child",E,"Return `true` if this is the child process of the `fork()`",132,[[["self"]],["bool"]]],[11,"is_parent",E,"Returns `true` if this is the parent process of the `fork()`",132,[[["self"]],["bool"]]],[18,"F_OK",E,"Test for existence of file.",140,N],[18,"R_OK",E,"Test for read permission.",140,N],[18,"W_OK",E,"Test for write permission.",140,N],[18,"X_OK",E,"Test for execute (search) permission.",140,N],[11,"empty",E,R[636],140,[[],[R[1058]]]],[11,"all",E,R[637],140,[[],[R[1058]]]],[11,"bits",E,R[638],140,[[["self"]],["c_int"]]],[11,R[639],E,R[640],140,[[["c_int"]],[[R[49],[R[1058]]],[R[1058]]]]],[11,R[641],E,R[642],140,[[["c_int"]],[R[1058]]]],[11,R[643],E,R[644],140,[[["c_int"]],[R[1058]]]],[11,R[166],E,R[645],140,[[["self"]],["bool"]]],[11,"is_all",E,R[646],140,[[["self"]],["bool"]]],[11,R[647],E,R[648],140,[[["self"],[R[1058]]],["bool"]]],[11,R[649],E,R[650],140,[[["self"],[R[1058]]],["bool"]]],[11,R[5],E,R[651],140,[[["self"],[R[1058]]]]],[11,"remove",E,R[652],140,[[["self"],[R[1058]]]]],[11,"toggle",E,R[653],140,[[["self"],[R[1058]]]]],[11,"set",E,R[654],140,[[["bool"],["self"],[R[1058]]]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath",E,E,N,N],[10,"len",E,E,141,[[["self"]],["usize"]]],[10,"with_nix_path",E,E,141,[[["self"],["f"]],[R[15]]]],[11,"as_errno",E,"Convert this `Error` to an `Errno`.",0,[[["self"]],[["errno"],[R[49],["errno"]]]]],[11,"from_errno",E,"Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last",E,"Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument",E,"Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none",E,"Generate an ioctl request code for a command that passes…",N,N],[14,"request_code_read",E,"Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write",E,"Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite",E,"Generate an ioctl request code for a command that reads…",N,N],[14,"ioctl_none",E,"Generates a wrapper function for an ioctl that passes no…",N,N],[14,"ioctl_none_bad",E,"Generates a wrapper function for a \"bad\" ioctl that passes…",N,N],[14,"ioctl_read",E,"Generates a wrapper function for an ioctl that reads data…",N,N],[14,"ioctl_read_bad",E,R[1060],N,N],[14,"ioctl_write_ptr",E,"Generates a wrapper function for an ioctl that writes data…",N,N],[14,"ioctl_write_ptr_bad",E,R[1059],N,N],[14,"ioctl_write_int",E,"Generates a wrapper function for a ioctl that writes an…",N,N],[14,"ioctl_write_int_bad",E,R[1059],N,N],[14,"ioctl_readwrite",E,R[1061],N,N],[14,"ioctl_readwrite_bad",E,R[1060],N,N],[14,"ioctl_read_buf",E,"Generates a wrapper function for an ioctl that reads an…",N,N],[14,"ioctl_write_buf",E,"Generates a wrapper function for an ioctl that writes an…",N,N],[14,"ioctl_readwrite_buf",E,R[1061],N,N],[14,"cmsg_space",E,"Create a buffer large enough for storing some control…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",R[1118],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[50],E,E,142,[[],["i"]]],[11,R[12],E,E,142,[[[U]],[R[15]]]],[11,R[13],E,E,142,[[],[R[15]]]],[11,R[17],E,E,142,[[["self"]],[T]]],[11,R[14],E,E,142,[[["self"]],[T]]],[11,R[16],E,E,142,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",R[1101],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[114],E,E,4,[[["self"]],["string"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",R[1098],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[51],E,E,11,[[["self"]],[T]]],[11,R[52],E,E,11,[[["self"],[T]]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[51],E,E,12,[[["self"]],[T]]],[11,R[52],E,E,12,[[["self"],[T]]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[51],E,E,13,[[["self"]],[T]]],[11,R[52],E,E,13,[[["self"],[T]]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",R[1062],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[51],E,E,14,[[["self"]],[T]]],[11,R[52],E,E,14,[[["self"],[T]]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[50],E,E,143,[[],["i"]]],[11,R[12],E,E,143,[[[U]],[R[15]]]],[11,R[13],E,E,143,[[],[R[15]]]],[11,R[17],E,E,143,[[["self"]],[T]]],[11,R[14],E,E,143,[[["self"]],[T]]],[11,R[16],E,E,143,[[["self"]],[R[18]]]],[11,"into",R[1102],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[51],E,E,15,[[["self"]],[T]]],[11,R[52],E,E,15,[[["self"],[T]]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[51],E,E,16,[[["self"]],[T]]],[11,R[52],E,E,16,[[["self"],[T]]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"into",R[1099],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[51],E,E,17,[[["self"]],[T]]],[11,R[52],E,E,17,[[["self"],[T]]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[51],E,E,18,[[["self"]],[T]]],[11,R[52],E,E,18,[[["self"],[T]]]],[11,R[12],E,E,18,[[[U]],[R[15]]]],[11,R[13],E,E,18,[[],[R[15]]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[R[18]]]],[11,"into",R[1063],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[51],E,E,19,[[["self"]],[T]]],[11,R[52],E,E,19,[[["self"],[T]]]],[11,R[12],E,E,19,[[[U]],[R[15]]]],[11,R[13],E,E,19,[[],[R[15]]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[R[18]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[51],E,E,20,[[["self"]],[T]]],[11,R[52],E,E,20,[[["self"],[T]]]],[11,R[12],E,E,20,[[[U]],[R[15]]]],[11,R[13],E,E,20,[[],[R[15]]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[R[18]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[51],E,E,21,[[["self"]],[T]]],[11,R[52],E,E,21,[[["self"],[T]]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"into",R[1064],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[51],E,E,22,[[["self"]],[T]]],[11,R[52],E,E,22,[[["self"],[T]]]],[11,R[12],E,E,22,[[[U]],[R[15]]]],[11,R[13],E,E,22,[[],[R[15]]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[R[18]]]],[11,"into",R[1103],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[51],E,E,23,[[["self"]],[T]]],[11,R[52],E,E,23,[[["self"],[T]]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[51],E,E,24,[[["self"]],[T]]],[11,R[52],E,E,24,[[["self"],[T]]]],[11,R[12],E,E,24,[[[U]],[R[15]]]],[11,R[13],E,E,24,[[],[R[15]]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[R[18]]]],[11,"into",R[1132],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[51],E,E,25,[[["self"]],[T]]],[11,R[52],E,E,25,[[["self"],[T]]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[51],E,E,26,[[["self"]],[T]]],[11,R[52],E,E,26,[[["self"],[T]]]],[11,R[12],E,E,26,[[[U]],[R[15]]]],[11,R[13],E,E,26,[[],[R[15]]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[R[18]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[51],E,E,27,[[["self"]],[T]]],[11,R[52],E,E,27,[[["self"],[T]]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[12],E,E,144,[[[U]],[R[15]]]],[11,R[13],E,E,144,[[],[R[15]]]],[11,R[17],E,E,144,[[["self"]],[T]]],[11,R[14],E,E,144,[[["self"]],[T]]],[11,R[16],E,E,144,[[["self"]],[R[18]]]],[11,"into",R[1100],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[51],E,E,28,[[["self"]],[T]]],[11,R[52],E,E,28,[[["self"],[T]]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[51],E,E,29,[[["self"]],[T]]],[11,R[52],E,E,29,[[["self"],[T]]]],[11,R[12],E,E,29,[[[U]],[R[15]]]],[11,R[13],E,E,29,[[],[R[15]]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[R[18]]]],[11,"into",R[1065],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[15]]]],[11,R[13],E,E,36,[[],[R[15]]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[16],E,E,36,[[["self"]],[R[18]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[15]]]],[11,R[13],E,E,30,[[],[R[15]]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[R[18]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[51],E,E,31,[[["self"]],[T]]],[11,R[52],E,E,31,[[["self"],[T]]]],[11,R[12],E,E,31,[[[U]],[R[15]]]],[11,R[13],E,E,31,[[],[R[15]]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[R[18]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[51],E,E,32,[[["self"]],[T]]],[11,R[52],E,E,32,[[["self"],[T]]]],[11,R[12],E,E,32,[[[U]],[R[15]]]],[11,R[13],E,E,32,[[],[R[15]]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[R[18]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[51],E,E,33,[[["self"]],[T]]],[11,R[52],E,E,33,[[["self"],[T]]]],[11,R[12],E,E,33,[[[U]],[R[15]]]],[11,R[13],E,E,33,[[],[R[15]]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[R[18]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[51],E,E,34,[[["self"]],[T]]],[11,R[52],E,E,34,[[["self"],[T]]]],[11,R[12],E,E,34,[[[U]],[R[15]]]],[11,R[13],E,E,34,[[],[R[15]]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[R[18]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[12],E,E,35,[[[U]],[R[15]]]],[11,R[13],E,E,35,[[],[R[15]]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[16],E,E,35,[[["self"]],[R[18]]]],[11,"into",R[1066],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[51],E,E,38,[[["self"]],[T]]],[11,R[52],E,E,38,[[["self"],[T]]]],[11,R[12],E,E,38,[[[U]],[R[15]]]],[11,R[13],E,E,38,[[],[R[15]]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[16],E,E,38,[[["self"]],[R[18]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[51],E,E,39,[[["self"]],[T]]],[11,R[52],E,E,39,[[["self"],[T]]]],[11,R[12],E,E,39,[[[U]],[R[15]]]],[11,R[13],E,E,39,[[],[R[15]]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[R[18]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[51],E,E,40,[[["self"]],[T]]],[11,R[52],E,E,40,[[["self"],[T]]]],[11,R[12],E,E,40,[[[U]],[R[15]]]],[11,R[13],E,E,40,[[],[R[15]]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[R[18]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[51],E,E,37,[[["self"]],[T]]],[11,R[52],E,E,37,[[["self"],[T]]]],[11,R[12],E,E,37,[[[U]],[R[15]]]],[11,R[13],E,E,37,[[],[R[15]]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[16],E,E,37,[[["self"]],[R[18]]]],[11,"into",R[1067],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[51],E,E,41,[[["self"]],[T]]],[11,R[52],E,E,41,[[["self"],[T]]]],[11,R[12],E,E,41,[[[U]],[R[15]]]],[11,R[13],E,E,41,[[],[R[15]]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[R[18]]]],[11,"into",R[1068],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[51],E,E,42,[[["self"]],[T]]],[11,R[52],E,E,42,[[["self"],[T]]]],[11,R[12],E,E,42,[[[U]],[R[15]]]],[11,R[13],E,E,42,[[],[R[15]]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[R[18]]]],[11,"into",R[1069],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[51],E,E,44,[[["self"]],[T]]],[11,R[52],E,E,44,[[["self"],[T]]]],[11,R[12],E,E,44,[[[U]],[R[15]]]],[11,R[13],E,E,44,[[],[R[15]]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[16],E,E,44,[[["self"]],[R[18]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[51],E,E,45,[[["self"]],[T]]],[11,R[52],E,E,45,[[["self"],[T]]]],[11,R[12],E,E,45,[[[U]],[R[15]]]],[11,R[13],E,E,45,[[],[R[15]]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"]],[T]]],[11,R[16],E,E,45,[[["self"]],[R[18]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[51],E,E,46,[[["self"]],[T]]],[11,R[52],E,E,46,[[["self"],[T]]]],[11,R[12],E,E,46,[[[U]],[R[15]]]],[11,R[13],E,E,46,[[],[R[15]]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[16],E,E,46,[[["self"]],[R[18]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[51],E,E,47,[[["self"]],[T]]],[11,R[52],E,E,47,[[["self"],[T]]]],[11,R[12],E,E,47,[[[U]],[R[15]]]],[11,R[13],E,E,47,[[],[R[15]]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[16],E,E,47,[[["self"]],[R[18]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[51],E,E,43,[[["self"]],[T]]],[11,R[52],E,E,43,[[["self"],[T]]]],[11,R[12],E,E,43,[[[U]],[R[15]]]],[11,R[13],E,E,43,[[],[R[15]]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[R[18]]]],[11,"into",R[1070],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[51],E,E,50,[[["self"]],[T]]],[11,R[52],E,E,50,[[["self"],[T]]]],[11,R[12],E,E,50,[[[U]],[R[15]]]],[11,R[13],E,E,50,[[],[R[15]]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[16],E,E,50,[[["self"]],[R[18]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[51],E,E,48,[[["self"]],[T]]],[11,R[52],E,E,48,[[["self"],[T]]]],[11,R[12],E,E,48,[[[U]],[R[15]]]],[11,R[13],E,E,48,[[],[R[15]]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[16],E,E,48,[[["self"]],[R[18]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[51],E,E,49,[[["self"]],[T]]],[11,R[52],E,E,49,[[["self"],[T]]]],[11,R[12],E,E,49,[[[U]],[R[15]]]],[11,R[13],E,E,49,[[],[R[15]]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[16],E,E,49,[[["self"]],[R[18]]]],[11,"into",R[1071],E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[51],E,E,53,[[["self"]],[T]]],[11,R[52],E,E,53,[[["self"],[T]]]],[11,R[12],E,E,53,[[[U]],[R[15]]]],[11,R[13],E,E,53,[[],[R[15]]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"]],[T]]],[11,R[16],E,E,53,[[["self"]],[R[18]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[51],E,E,54,[[["self"]],[T]]],[11,R[52],E,E,54,[[["self"],[T]]]],[11,R[12],E,E,54,[[[U]],[R[15]]]],[11,R[13],E,E,54,[[],[R[15]]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"]],[T]]],[11,R[16],E,E,54,[[["self"]],[R[18]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[51],E,E,51,[[["self"]],[T]]],[11,R[52],E,E,51,[[["self"],[T]]]],[11,R[12],E,E,51,[[[U]],[R[15]]]],[11,R[13],E,E,51,[[],[R[15]]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"]],[T]]],[11,R[16],E,E,51,[[["self"]],[R[18]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[51],E,E,52,[[["self"]],[T]]],[11,R[52],E,E,52,[[["self"],[T]]]],[11,R[12],E,E,52,[[[U]],[R[15]]]],[11,R[13],E,E,52,[[],[R[15]]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"]],[T]]],[11,R[16],E,E,52,[[["self"]],[R[18]]]],[11,"into",R[1072],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[51],E,E,55,[[["self"]],[T]]],[11,R[52],E,E,55,[[["self"],[T]]]],[11,R[12],E,E,55,[[[U]],[R[15]]]],[11,R[13],E,E,55,[[],[R[15]]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"]],[T]]],[11,R[16],E,E,55,[[["self"]],[R[18]]]],[11,"into",R[1073],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[51],E,E,56,[[["self"]],[T]]],[11,R[52],E,E,56,[[["self"],[T]]]],[11,R[12],E,E,56,[[[U]],[R[15]]]],[11,R[13],E,E,56,[[],[R[15]]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"]],[T]]],[11,R[16],E,E,56,[[["self"]],[R[18]]]],[11,"into",R[923],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[51],E,E,61,[[["self"]],[T]]],[11,R[52],E,E,61,[[["self"],[T]]]],[11,R[12],E,E,61,[[[U]],[R[15]]]],[11,R[13],E,E,61,[[],[R[15]]]],[11,R[17],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"]],[T]]],[11,R[16],E,E,61,[[["self"]],[R[18]]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[50],E,E,145,[[],["i"]]],[11,R[51],E,E,145,[[["self"]],[T]]],[11,R[52],E,E,145,[[["self"],[T]]]],[11,R[12],E,E,145,[[[U]],[R[15]]]],[11,R[13],E,E,145,[[],[R[15]]]],[11,R[17],E,E,145,[[["self"]],[T]]],[11,R[14],E,E,145,[[["self"]],[T]]],[11,R[16],E,E,145,[[["self"]],[R[18]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[51],E,E,62,[[["self"]],[T]]],[11,R[52],E,E,62,[[["self"],[T]]]],[11,R[12],E,E,62,[[[U]],[R[15]]]],[11,R[13],E,E,62,[[],[R[15]]]],[11,R[17],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"]],[T]]],[11,R[16],E,E,62,[[["self"]],[R[18]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[51],E,E,63,[[["self"]],[T]]],[11,R[52],E,E,63,[[["self"],[T]]]],[11,R[12],E,E,63,[[[U]],[R[15]]]],[11,R[13],E,E,63,[[],[R[15]]]],[11,R[17],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[["self"]],[T]]],[11,R[16],E,E,63,[[["self"]],[R[18]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[51],E,E,64,[[["self"]],[T]]],[11,R[52],E,E,64,[[["self"],[T]]]],[11,R[12],E,E,64,[[[U]],[R[15]]]],[11,R[13],E,E,64,[[],[R[15]]]],[11,R[17],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"]],[T]]],[11,R[16],E,E,64,[[["self"]],[R[18]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[51],E,E,57,[[["self"]],[T]]],[11,R[52],E,E,57,[[["self"],[T]]]],[11,R[114],E,E,57,[[["self"]],["string"]]],[11,R[12],E,E,57,[[[U]],[R[15]]]],[11,R[13],E,E,57,[[],[R[15]]]],[11,R[17],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"]],[T]]],[11,R[16],E,E,57,[[["self"]],[R[18]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[51],E,E,58,[[["self"]],[T]]],[11,R[52],E,E,58,[[["self"],[T]]]],[11,R[12],E,E,58,[[[U]],[R[15]]]],[11,R[13],E,E,58,[[],[R[15]]]],[11,R[17],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[["self"]],[T]]],[11,R[16],E,E,58,[[["self"]],[R[18]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[51],E,E,59,[[["self"]],[T]]],[11,R[52],E,E,59,[[["self"],[T]]]],[11,R[12],E,E,59,[[[U]],[R[15]]]],[11,R[13],E,E,59,[[],[R[15]]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[["self"]],[T]]],[11,R[16],E,E,59,[[["self"]],[R[18]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[51],E,E,60,[[["self"]],[T]]],[11,R[52],E,E,60,[[["self"],[T]]]],[11,R[12],E,E,60,[[[U]],[R[15]]]],[11,R[13],E,E,60,[[],[R[15]]]],[11,R[17],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[["self"]],[T]]],[11,R[16],E,E,60,[[["self"]],[R[18]]]],[11,"into",R[1074],E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[51],E,E,65,[[["self"]],[T]]],[11,R[52],E,E,65,[[["self"],[T]]]],[11,R[12],E,E,65,[[[U]],[R[15]]]],[11,R[13],E,E,65,[[],[R[15]]]],[11,R[17],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"]],[T]]],[11,R[16],E,E,65,[[["self"]],[R[18]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[51],E,E,66,[[["self"]],[T]]],[11,R[52],E,E,66,[[["self"],[T]]]],[11,R[12],E,E,66,[[[U]],[R[15]]]],[11,R[13],E,E,66,[[],[R[15]]]],[11,R[17],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"]],[T]]],[11,R[16],E,E,66,[[["self"]],[R[18]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[50],E,E,67,[[],["i"]]],[11,R[51],E,E,67,[[["self"]],[T]]],[11,R[52],E,E,67,[[["self"],[T]]]],[11,R[12],E,E,67,[[[U]],[R[15]]]],[11,R[13],E,E,67,[[],[R[15]]]],[11,R[17],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[["self"]],[T]]],[11,R[16],E,E,67,[[["self"]],[R[18]]]],[11,"into",R[994],E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[51],E,E,68,[[["self"]],[T]]],[11,R[52],E,E,68,[[["self"],[T]]]],[11,R[12],E,E,68,[[[U]],[R[15]]]],[11,R[13],E,E,68,[[],[R[15]]]],[11,R[17],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"]],[T]]],[11,R[16],E,E,68,[[["self"]],[R[18]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[51],E,E,69,[[["self"]],[T]]],[11,R[52],E,E,69,[[["self"],[T]]]],[11,R[12],E,E,69,[[[U]],[R[15]]]],[11,R[13],E,E,69,[[],[R[15]]]],[11,R[17],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"]],[T]]],[11,R[16],E,E,69,[[["self"]],[R[18]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[51],E,E,70,[[["self"]],[T]]],[11,R[52],E,E,70,[[["self"],[T]]]],[11,R[12],E,E,70,[[[U]],[R[15]]]],[11,R[13],E,E,70,[[],[R[15]]]],[11,R[17],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"]],[T]]],[11,R[16],E,E,70,[[["self"]],[R[18]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[51],E,E,71,[[["self"]],[T]]],[11,R[52],E,E,71,[[["self"],[T]]]],[11,R[12],E,E,71,[[[U]],[R[15]]]],[11,R[13],E,E,71,[[],[R[15]]]],[11,R[17],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"]],[T]]],[11,R[16],E,E,71,[[["self"]],[R[18]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[51],E,E,72,[[["self"]],[T]]],[11,R[52],E,E,72,[[["self"],[T]]]],[11,R[12],E,E,72,[[[U]],[R[15]]]],[11,R[13],E,E,72,[[],[R[15]]]],[11,R[17],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"]],[T]]],[11,R[16],E,E,72,[[["self"]],[R[18]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[51],E,E,73,[[["self"]],[T]]],[11,R[52],E,E,73,[[["self"],[T]]]],[11,R[12],E,E,73,[[[U]],[R[15]]]],[11,R[13],E,E,73,[[],[R[15]]]],[11,R[17],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[["self"]],[T]]],[11,R[16],E,E,73,[[["self"]],[R[18]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[51],E,E,74,[[["self"]],[T]]],[11,R[52],E,E,74,[[["self"],[T]]]],[11,R[12],E,E,74,[[[U]],[R[15]]]],[11,R[13],E,E,74,[[],[R[15]]]],[11,R[17],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[["self"]],[T]]],[11,R[16],E,E,74,[[["self"]],[R[18]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[51],E,E,75,[[["self"]],[T]]],[11,R[52],E,E,75,[[["self"],[T]]]],[11,R[114],E,E,75,[[["self"]],["string"]]],[11,R[12],E,E,75,[[[U]],[R[15]]]],[11,R[13],E,E,75,[[],[R[15]]]],[11,R[17],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[["self"]],[T]]],[11,R[16],E,E,75,[[["self"]],[R[18]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[51],E,E,76,[[["self"]],[T]]],[11,R[52],E,E,76,[[["self"],[T]]]],[11,R[114],E,E,76,[[["self"]],["string"]]],[11,R[12],E,E,76,[[[U]],[R[15]]]],[11,R[13],E,E,76,[[],[R[15]]]],[11,R[17],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[["self"]],[T]]],[11,R[16],E,E,76,[[["self"]],[R[18]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[51],E,E,77,[[["self"]],[T]]],[11,R[52],E,E,77,[[["self"],[T]]]],[11,R[114],E,E,77,[[["self"]],["string"]]],[11,R[12],E,E,77,[[[U]],[R[15]]]],[11,R[13],E,E,77,[[],[R[15]]]],[11,R[17],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[["self"]],[T]]],[11,R[16],E,E,77,[[["self"]],[R[18]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[51],E,E,78,[[["self"]],[T]]],[11,R[52],E,E,78,[[["self"],[T]]]],[11,R[114],E,E,78,[[["self"]],["string"]]],[11,R[12],E,E,78,[[[U]],[R[15]]]],[11,R[13],E,E,78,[[],[R[15]]]],[11,R[17],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[["self"]],[T]]],[11,R[16],E,E,78,[[["self"]],[R[18]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[51],E,E,79,[[["self"]],[T]]],[11,R[52],E,E,79,[[["self"],[T]]]],[11,R[114],E,E,79,[[["self"]],["string"]]],[11,R[12],E,E,79,[[[U]],[R[15]]]],[11,R[13],E,E,79,[[],[R[15]]]],[11,R[17],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[["self"]],[T]]],[11,R[16],E,E,79,[[["self"]],[R[18]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[51],E,E,80,[[["self"]],[T]]],[11,R[52],E,E,80,[[["self"],[T]]]],[11,R[114],E,E,80,[[["self"]],["string"]]],[11,R[12],E,E,80,[[[U]],[R[15]]]],[11,R[13],E,E,80,[[],[R[15]]]],[11,R[17],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[["self"]],[T]]],[11,R[16],E,E,80,[[["self"]],[R[18]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[51],E,E,95,[[["self"]],[T]]],[11,R[52],E,E,95,[[["self"],[T]]]],[11,R[12],E,E,95,[[[U]],[R[15]]]],[11,R[13],E,E,95,[[],[R[15]]]],[11,R[17],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[["self"]],[T]]],[11,R[16],E,E,95,[[["self"]],[R[18]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[51],E,E,96,[[["self"]],[T]]],[11,R[52],E,E,96,[[["self"],[T]]]],[11,R[12],E,E,96,[[[U]],[R[15]]]],[11,R[13],E,E,96,[[],[R[15]]]],[11,R[17],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[["self"]],[T]]],[11,R[16],E,E,96,[[["self"]],[R[18]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[51],E,E,97,[[["self"]],[T]]],[11,R[52],E,E,97,[[["self"],[T]]]],[11,R[12],E,E,97,[[[U]],[R[15]]]],[11,R[13],E,E,97,[[],[R[15]]]],[11,R[17],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[["self"]],[T]]],[11,R[16],E,E,97,[[["self"]],[R[18]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[51],E,E,98,[[["self"]],[T]]],[11,R[52],E,E,98,[[["self"],[T]]]],[11,R[12],E,E,98,[[[U]],[R[15]]]],[11,R[13],E,E,98,[[],[R[15]]]],[11,R[17],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[["self"]],[T]]],[11,R[16],E,E,98,[[["self"]],[R[18]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[51],E,E,99,[[["self"]],[T]]],[11,R[52],E,E,99,[[["self"],[T]]]],[11,R[12],E,E,99,[[[U]],[R[15]]]],[11,R[13],E,E,99,[[],[R[15]]]],[11,R[17],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[["self"]],[T]]],[11,R[16],E,E,99,[[["self"]],[R[18]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[12],E,E,100,[[[U]],[R[15]]]],[11,R[13],E,E,100,[[],[R[15]]]],[11,R[17],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[["self"]],[T]]],[11,R[16],E,E,100,[[["self"]],[R[18]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[12],E,E,81,[[[U]],[R[15]]]],[11,R[13],E,E,81,[[],[R[15]]]],[11,R[17],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[["self"]],[T]]],[11,R[16],E,E,81,[[["self"]],[R[18]]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[50],E,E,146,[[],["i"]]],[11,R[12],E,E,146,[[[U]],[R[15]]]],[11,R[13],E,E,146,[[],[R[15]]]],[11,R[17],E,E,146,[[["self"]],[T]]],[11,R[14],E,E,146,[[["self"]],[T]]],[11,R[16],E,E,146,[[["self"]],[R[18]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[51],E,E,82,[[["self"]],[T]]],[11,R[52],E,E,82,[[["self"],[T]]]],[11,R[12],E,E,82,[[[U]],[R[15]]]],[11,R[13],E,E,82,[[],[R[15]]]],[11,R[17],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[["self"]],[T]]],[11,R[16],E,E,82,[[["self"]],[R[18]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[51],E,E,83,[[["self"]],[T]]],[11,R[52],E,E,83,[[["self"],[T]]]],[11,R[114],E,E,83,[[["self"]],["string"]]],[11,R[12],E,E,83,[[[U]],[R[15]]]],[11,R[13],E,E,83,[[],[R[15]]]],[11,R[17],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[["self"]],[T]]],[11,R[16],E,E,83,[[["self"]],[R[18]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[51],E,E,84,[[["self"]],[T]]],[11,R[52],E,E,84,[[["self"],[T]]]],[11,R[114],E,E,84,[[["self"]],["string"]]],[11,R[12],E,E,84,[[[U]],[R[15]]]],[11,R[13],E,E,84,[[],[R[15]]]],[11,R[17],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[["self"]],[T]]],[11,R[16],E,E,84,[[["self"]],[R[18]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[51],E,E,85,[[["self"]],[T]]],[11,R[52],E,E,85,[[["self"],[T]]]],[11,R[114],E,E,85,[[["self"]],["string"]]],[11,R[12],E,E,85,[[[U]],[R[15]]]],[11,R[13],E,E,85,[[],[R[15]]]],[11,R[17],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[["self"]],[T]]],[11,R[16],E,E,85,[[["self"]],[R[18]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[51],E,E,86,[[["self"]],[T]]],[11,R[52],E,E,86,[[["self"],[T]]]],[11,R[12],E,E,86,[[[U]],[R[15]]]],[11,R[13],E,E,86,[[],[R[15]]]],[11,R[17],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[["self"]],[T]]],[11,R[16],E,E,86,[[["self"]],[R[18]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[51],E,E,87,[[["self"]],[T]]],[11,R[52],E,E,87,[[["self"],[T]]]],[11,R[12],E,E,87,[[[U]],[R[15]]]],[11,R[13],E,E,87,[[],[R[15]]]],[11,R[17],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[["self"]],[T]]],[11,R[16],E,E,87,[[["self"]],[R[18]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[12],E,E,88,[[[U]],[R[15]]]],[11,R[13],E,E,88,[[],[R[15]]]],[11,R[17],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[["self"]],[T]]],[11,R[16],E,E,88,[[["self"]],[R[18]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[12],E,E,89,[[[U]],[R[15]]]],[11,R[13],E,E,89,[[],[R[15]]]],[11,R[17],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[["self"]],[T]]],[11,R[16],E,E,89,[[["self"]],[R[18]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[51],E,E,90,[[["self"]],[T]]],[11,R[52],E,E,90,[[["self"],[T]]]],[11,R[12],E,E,90,[[[U]],[R[15]]]],[11,R[13],E,E,90,[[],[R[15]]]],[11,R[17],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[["self"]],[T]]],[11,R[16],E,E,90,[[["self"]],[R[18]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[51],E,E,91,[[["self"]],[T]]],[11,R[52],E,E,91,[[["self"],[T]]]],[11,R[12],E,E,91,[[[U]],[R[15]]]],[11,R[13],E,E,91,[[],[R[15]]]],[11,R[17],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[["self"]],[T]]],[11,R[16],E,E,91,[[["self"]],[R[18]]]],[11,"into",R[1075],E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[51],E,E,147,[[["self"]],[T]]],[11,R[52],E,E,147,[[["self"],[T]]]],[11,R[12],E,E,147,[[[U]],[R[15]]]],[11,R[13],E,E,147,[[],[R[15]]]],[11,R[17],E,E,147,[[["self"]],[T]]],[11,R[14],E,E,147,[[["self"]],[T]]],[11,R[16],E,E,147,[[["self"]],[R[18]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[51],E,E,148,[[["self"]],[T]]],[11,R[52],E,E,148,[[["self"],[T]]]],[11,R[12],E,E,148,[[[U]],[R[15]]]],[11,R[13],E,E,148,[[],[R[15]]]],[11,R[17],E,E,148,[[["self"]],[T]]],[11,R[14],E,E,148,[[["self"]],[T]]],[11,R[16],E,E,148,[[["self"]],[R[18]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[51],E,E,149,[[["self"]],[T]]],[11,R[52],E,E,149,[[["self"],[T]]]],[11,R[12],E,E,149,[[[U]],[R[15]]]],[11,R[13],E,E,149,[[],[R[15]]]],[11,R[17],E,E,149,[[["self"]],[T]]],[11,R[14],E,E,149,[[["self"]],[T]]],[11,R[16],E,E,149,[[["self"]],[R[18]]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[51],E,E,150,[[["self"]],[T]]],[11,R[52],E,E,150,[[["self"],[T]]]],[11,R[12],E,E,150,[[[U]],[R[15]]]],[11,R[13],E,E,150,[[],[R[15]]]],[11,R[17],E,E,150,[[["self"]],[T]]],[11,R[14],E,E,150,[[["self"]],[T]]],[11,R[16],E,E,150,[[["self"]],[R[18]]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[51],E,E,151,[[["self"]],[T]]],[11,R[52],E,E,151,[[["self"],[T]]]],[11,R[12],E,E,151,[[[U]],[R[15]]]],[11,R[13],E,E,151,[[],[R[15]]]],[11,R[17],E,E,151,[[["self"]],[T]]],[11,R[14],E,E,151,[[["self"]],[T]]],[11,R[16],E,E,151,[[["self"]],[R[18]]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[51],E,E,152,[[["self"]],[T]]],[11,R[52],E,E,152,[[["self"],[T]]]],[11,R[12],E,E,152,[[[U]],[R[15]]]],[11,R[13],E,E,152,[[],[R[15]]]],[11,R[17],E,E,152,[[["self"]],[T]]],[11,R[14],E,E,152,[[["self"]],[T]]],[11,R[16],E,E,152,[[["self"]],[R[18]]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[51],E,E,153,[[["self"]],[T]]],[11,R[52],E,E,153,[[["self"],[T]]]],[11,R[12],E,E,153,[[[U]],[R[15]]]],[11,R[13],E,E,153,[[],[R[15]]]],[11,R[17],E,E,153,[[["self"]],[T]]],[11,R[14],E,E,153,[[["self"]],[T]]],[11,R[16],E,E,153,[[["self"]],[R[18]]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[51],E,E,154,[[["self"]],[T]]],[11,R[52],E,E,154,[[["self"],[T]]]],[11,R[12],E,E,154,[[[U]],[R[15]]]],[11,R[13],E,E,154,[[],[R[15]]]],[11,R[17],E,E,154,[[["self"]],[T]]],[11,R[14],E,E,154,[[["self"]],[T]]],[11,R[16],E,E,154,[[["self"]],[R[18]]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[51],E,E,155,[[["self"]],[T]]],[11,R[52],E,E,155,[[["self"],[T]]]],[11,R[12],E,E,155,[[[U]],[R[15]]]],[11,R[13],E,E,155,[[],[R[15]]]],[11,R[17],E,E,155,[[["self"]],[T]]],[11,R[14],E,E,155,[[["self"]],[T]]],[11,R[16],E,E,155,[[["self"]],[R[18]]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[51],E,E,156,[[["self"]],[T]]],[11,R[52],E,E,156,[[["self"],[T]]]],[11,R[12],E,E,156,[[[U]],[R[15]]]],[11,R[13],E,E,156,[[],[R[15]]]],[11,R[17],E,E,156,[[["self"]],[T]]],[11,R[14],E,E,156,[[["self"]],[T]]],[11,R[16],E,E,156,[[["self"]],[R[18]]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[51],E,E,157,[[["self"]],[T]]],[11,R[52],E,E,157,[[["self"],[T]]]],[11,R[12],E,E,157,[[[U]],[R[15]]]],[11,R[13],E,E,157,[[],[R[15]]]],[11,R[17],E,E,157,[[["self"]],[T]]],[11,R[14],E,E,157,[[["self"]],[T]]],[11,R[16],E,E,157,[[["self"]],[R[18]]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[51],E,E,158,[[["self"]],[T]]],[11,R[52],E,E,158,[[["self"],[T]]]],[11,R[12],E,E,158,[[[U]],[R[15]]]],[11,R[13],E,E,158,[[],[R[15]]]],[11,R[17],E,E,158,[[["self"]],[T]]],[11,R[14],E,E,158,[[["self"]],[T]]],[11,R[16],E,E,158,[[["self"]],[R[18]]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[51],E,E,159,[[["self"]],[T]]],[11,R[52],E,E,159,[[["self"],[T]]]],[11,R[12],E,E,159,[[[U]],[R[15]]]],[11,R[13],E,E,159,[[],[R[15]]]],[11,R[17],E,E,159,[[["self"]],[T]]],[11,R[14],E,E,159,[[["self"]],[T]]],[11,R[16],E,E,159,[[["self"]],[R[18]]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[51],E,E,160,[[["self"]],[T]]],[11,R[52],E,E,160,[[["self"],[T]]]],[11,R[12],E,E,160,[[[U]],[R[15]]]],[11,R[13],E,E,160,[[],[R[15]]]],[11,R[17],E,E,160,[[["self"]],[T]]],[11,R[14],E,E,160,[[["self"]],[T]]],[11,R[16],E,E,160,[[["self"]],[R[18]]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[51],E,E,161,[[["self"]],[T]]],[11,R[52],E,E,161,[[["self"],[T]]]],[11,R[12],E,E,161,[[[U]],[R[15]]]],[11,R[13],E,E,161,[[],[R[15]]]],[11,R[17],E,E,161,[[["self"]],[T]]],[11,R[14],E,E,161,[[["self"]],[T]]],[11,R[16],E,E,161,[[["self"]],[R[18]]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[51],E,E,162,[[["self"]],[T]]],[11,R[52],E,E,162,[[["self"],[T]]]],[11,R[12],E,E,162,[[[U]],[R[15]]]],[11,R[13],E,E,162,[[],[R[15]]]],[11,R[17],E,E,162,[[["self"]],[T]]],[11,R[14],E,E,162,[[["self"]],[T]]],[11,R[16],E,E,162,[[["self"]],[R[18]]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[51],E,E,163,[[["self"]],[T]]],[11,R[52],E,E,163,[[["self"],[T]]]],[11,R[12],E,E,163,[[[U]],[R[15]]]],[11,R[13],E,E,163,[[],[R[15]]]],[11,R[17],E,E,163,[[["self"]],[T]]],[11,R[14],E,E,163,[[["self"]],[T]]],[11,R[16],E,E,163,[[["self"]],[R[18]]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[51],E,E,164,[[["self"]],[T]]],[11,R[52],E,E,164,[[["self"],[T]]]],[11,R[12],E,E,164,[[[U]],[R[15]]]],[11,R[13],E,E,164,[[],[R[15]]]],[11,R[17],E,E,164,[[["self"]],[T]]],[11,R[14],E,E,164,[[["self"]],[T]]],[11,R[16],E,E,164,[[["self"]],[R[18]]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[51],E,E,165,[[["self"]],[T]]],[11,R[52],E,E,165,[[["self"],[T]]]],[11,R[12],E,E,165,[[[U]],[R[15]]]],[11,R[13],E,E,165,[[],[R[15]]]],[11,R[17],E,E,165,[[["self"]],[T]]],[11,R[14],E,E,165,[[["self"]],[T]]],[11,R[16],E,E,165,[[["self"]],[R[18]]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[51],E,E,166,[[["self"]],[T]]],[11,R[52],E,E,166,[[["self"],[T]]]],[11,R[12],E,E,166,[[[U]],[R[15]]]],[11,R[13],E,E,166,[[],[R[15]]]],[11,R[17],E,E,166,[[["self"]],[T]]],[11,R[14],E,E,166,[[["self"]],[T]]],[11,R[16],E,E,166,[[["self"]],[R[18]]]],[11,"into",E,E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[51],E,E,167,[[["self"]],[T]]],[11,R[52],E,E,167,[[["self"],[T]]]],[11,R[12],E,E,167,[[[U]],[R[15]]]],[11,R[13],E,E,167,[[],[R[15]]]],[11,R[17],E,E,167,[[["self"]],[T]]],[11,R[14],E,E,167,[[["self"]],[T]]],[11,R[16],E,E,167,[[["self"]],[R[18]]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[51],E,E,168,[[["self"]],[T]]],[11,R[52],E,E,168,[[["self"],[T]]]],[11,R[12],E,E,168,[[[U]],[R[15]]]],[11,R[13],E,E,168,[[],[R[15]]]],[11,R[17],E,E,168,[[["self"]],[T]]],[11,R[14],E,E,168,[[["self"]],[T]]],[11,R[16],E,E,168,[[["self"]],[R[18]]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[51],E,E,169,[[["self"]],[T]]],[11,R[52],E,E,169,[[["self"],[T]]]],[11,R[12],E,E,169,[[[U]],[R[15]]]],[11,R[13],E,E,169,[[],[R[15]]]],[11,R[17],E,E,169,[[["self"]],[T]]],[11,R[14],E,E,169,[[["self"]],[T]]],[11,R[16],E,E,169,[[["self"]],[R[18]]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[51],E,E,170,[[["self"]],[T]]],[11,R[52],E,E,170,[[["self"],[T]]]],[11,R[12],E,E,170,[[[U]],[R[15]]]],[11,R[13],E,E,170,[[],[R[15]]]],[11,R[17],E,E,170,[[["self"]],[T]]],[11,R[14],E,E,170,[[["self"]],[T]]],[11,R[16],E,E,170,[[["self"]],[R[18]]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[51],E,E,171,[[["self"]],[T]]],[11,R[52],E,E,171,[[["self"],[T]]]],[11,R[12],E,E,171,[[[U]],[R[15]]]],[11,R[13],E,E,171,[[],[R[15]]]],[11,R[17],E,E,171,[[["self"]],[T]]],[11,R[14],E,E,171,[[["self"]],[T]]],[11,R[16],E,E,171,[[["self"]],[R[18]]]],[11,"into",E,E,172,[[],[U]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[51],E,E,172,[[["self"]],[T]]],[11,R[52],E,E,172,[[["self"],[T]]]],[11,R[12],E,E,172,[[[U]],[R[15]]]],[11,R[13],E,E,172,[[],[R[15]]]],[11,R[17],E,E,172,[[["self"]],[T]]],[11,R[14],E,E,172,[[["self"]],[T]]],[11,R[16],E,E,172,[[["self"]],[R[18]]]],[11,"into",E,E,173,[[],[U]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[51],E,E,173,[[["self"]],[T]]],[11,R[52],E,E,173,[[["self"],[T]]]],[11,R[12],E,E,173,[[[U]],[R[15]]]],[11,R[13],E,E,173,[[],[R[15]]]],[11,R[17],E,E,173,[[["self"]],[T]]],[11,R[14],E,E,173,[[["self"]],[T]]],[11,R[16],E,E,173,[[["self"]],[R[18]]]],[11,"into",E,E,174,[[],[U]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[51],E,E,174,[[["self"]],[T]]],[11,R[52],E,E,174,[[["self"],[T]]]],[11,R[12],E,E,174,[[[U]],[R[15]]]],[11,R[13],E,E,174,[[],[R[15]]]],[11,R[17],E,E,174,[[["self"]],[T]]],[11,R[14],E,E,174,[[["self"]],[T]]],[11,R[16],E,E,174,[[["self"]],[R[18]]]],[11,"into",E,E,175,[[],[U]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[51],E,E,175,[[["self"]],[T]]],[11,R[52],E,E,175,[[["self"],[T]]]],[11,R[12],E,E,175,[[[U]],[R[15]]]],[11,R[13],E,E,175,[[],[R[15]]]],[11,R[17],E,E,175,[[["self"]],[T]]],[11,R[14],E,E,175,[[["self"]],[T]]],[11,R[16],E,E,175,[[["self"]],[R[18]]]],[11,"into",E,E,176,[[],[U]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[51],E,E,176,[[["self"]],[T]]],[11,R[52],E,E,176,[[["self"],[T]]]],[11,R[12],E,E,176,[[[U]],[R[15]]]],[11,R[13],E,E,176,[[],[R[15]]]],[11,R[17],E,E,176,[[["self"]],[T]]],[11,R[14],E,E,176,[[["self"]],[T]]],[11,R[16],E,E,176,[[["self"]],[R[18]]]],[11,"into",E,E,177,[[],[U]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[51],E,E,177,[[["self"]],[T]]],[11,R[52],E,E,177,[[["self"],[T]]]],[11,R[12],E,E,177,[[[U]],[R[15]]]],[11,R[13],E,E,177,[[],[R[15]]]],[11,R[17],E,E,177,[[["self"]],[T]]],[11,R[14],E,E,177,[[["self"]],[T]]],[11,R[16],E,E,177,[[["self"]],[R[18]]]],[11,"into",E,E,178,[[],[U]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[51],E,E,178,[[["self"]],[T]]],[11,R[52],E,E,178,[[["self"],[T]]]],[11,R[12],E,E,178,[[[U]],[R[15]]]],[11,R[13],E,E,178,[[],[R[15]]]],[11,R[17],E,E,178,[[["self"]],[T]]],[11,R[14],E,E,178,[[["self"]],[T]]],[11,R[16],E,E,178,[[["self"]],[R[18]]]],[11,"into",E,E,179,[[],[U]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[51],E,E,179,[[["self"]],[T]]],[11,R[52],E,E,179,[[["self"],[T]]]],[11,R[12],E,E,179,[[[U]],[R[15]]]],[11,R[13],E,E,179,[[],[R[15]]]],[11,R[17],E,E,179,[[["self"]],[T]]],[11,R[14],E,E,179,[[["self"]],[T]]],[11,R[16],E,E,179,[[["self"]],[R[18]]]],[11,"into",E,E,180,[[],[U]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[51],E,E,180,[[["self"]],[T]]],[11,R[52],E,E,180,[[["self"],[T]]]],[11,R[12],E,E,180,[[[U]],[R[15]]]],[11,R[13],E,E,180,[[],[R[15]]]],[11,R[17],E,E,180,[[["self"]],[T]]],[11,R[14],E,E,180,[[["self"]],[T]]],[11,R[16],E,E,180,[[["self"]],[R[18]]]],[11,"into",R[1076],E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[51],E,E,101,[[["self"]],[T]]],[11,R[52],E,E,101,[[["self"],[T]]]],[11,R[12],E,E,101,[[[U]],[R[15]]]],[11,R[13],E,E,101,[[],[R[15]]]],[11,R[17],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[["self"]],[T]]],[11,R[16],E,E,101,[[["self"]],[R[18]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[51],E,E,104,[[["self"]],[T]]],[11,R[52],E,E,104,[[["self"],[T]]]],[11,R[12],E,E,104,[[[U]],[R[15]]]],[11,R[13],E,E,104,[[],[R[15]]]],[11,R[17],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[["self"]],[T]]],[11,R[16],E,E,104,[[["self"]],[R[18]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[51],E,E,105,[[["self"]],[T]]],[11,R[52],E,E,105,[[["self"],[T]]]],[11,R[12],E,E,105,[[[U]],[R[15]]]],[11,R[13],E,E,105,[[],[R[15]]]],[11,R[17],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[["self"]],[T]]],[11,R[16],E,E,105,[[["self"]],[R[18]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[51],E,E,102,[[["self"]],[T]]],[11,R[52],E,E,102,[[["self"],[T]]]],[11,R[12],E,E,102,[[[U]],[R[15]]]],[11,R[13],E,E,102,[[],[R[15]]]],[11,R[17],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[["self"]],[T]]],[11,R[16],E,E,102,[[["self"]],[R[18]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[51],E,E,103,[[["self"]],[T]]],[11,R[52],E,E,103,[[["self"],[T]]]],[11,R[12],E,E,103,[[[U]],[R[15]]]],[11,R[13],E,E,103,[[],[R[15]]]],[11,R[17],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[["self"]],[T]]],[11,R[16],E,E,103,[[["self"]],[R[18]]]],[11,"into",R[1077],E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[51],E,E,106,[[["self"]],[T]]],[11,R[52],E,E,106,[[["self"],[T]]]],[11,R[12],E,E,106,[[[U]],[R[15]]]],[11,R[13],E,E,106,[[],[R[15]]]],[11,R[17],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[["self"]],[T]]],[11,R[16],E,E,106,[[["self"]],[R[18]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[51],E,E,107,[[["self"]],[T]]],[11,R[52],E,E,107,[[["self"],[T]]]],[11,R[12],E,E,107,[[[U]],[R[15]]]],[11,R[13],E,E,107,[[],[R[15]]]],[11,R[17],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[["self"]],[T]]],[11,R[16],E,E,107,[[["self"]],[R[18]]]],[11,"into",R[1078],E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[51],E,E,108,[[["self"]],[T]]],[11,R[52],E,E,108,[[["self"],[T]]]],[11,R[12],E,E,108,[[[U]],[R[15]]]],[11,R[13],E,E,108,[[],[R[15]]]],[11,R[17],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[["self"]],[T]]],[11,R[16],E,E,108,[[["self"]],[R[18]]]],[11,"into",R[1079],E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[51],E,E,109,[[["self"]],[T]]],[11,R[52],E,E,109,[[["self"],[T]]]],[11,R[12],E,E,109,[[[U]],[R[15]]]],[11,R[13],E,E,109,[[],[R[15]]]],[11,R[17],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[["self"]],[T]]],[11,R[16],E,E,109,[[["self"]],[R[18]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[51],E,E,115,[[["self"]],[T]]],[11,R[52],E,E,115,[[["self"],[T]]]],[11,R[12],E,E,115,[[[U]],[R[15]]]],[11,R[13],E,E,115,[[],[R[15]]]],[11,R[17],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[["self"]],[T]]],[11,R[16],E,E,115,[[["self"]],[R[18]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[51],E,E,116,[[["self"]],[T]]],[11,R[52],E,E,116,[[["self"],[T]]]],[11,R[12],E,E,116,[[[U]],[R[15]]]],[11,R[13],E,E,116,[[],[R[15]]]],[11,R[17],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[["self"]],[T]]],[11,R[16],E,E,116,[[["self"]],[R[18]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[51],E,E,117,[[["self"]],[T]]],[11,R[52],E,E,117,[[["self"],[T]]]],[11,R[12],E,E,117,[[[U]],[R[15]]]],[11,R[13],E,E,117,[[],[R[15]]]],[11,R[17],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[["self"]],[T]]],[11,R[16],E,E,117,[[["self"]],[R[18]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[51],E,E,118,[[["self"]],[T]]],[11,R[52],E,E,118,[[["self"],[T]]]],[11,R[12],E,E,118,[[[U]],[R[15]]]],[11,R[13],E,E,118,[[],[R[15]]]],[11,R[17],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[["self"]],[T]]],[11,R[16],E,E,118,[[["self"]],[R[18]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[51],E,E,110,[[["self"]],[T]]],[11,R[52],E,E,110,[[["self"],[T]]]],[11,R[12],E,E,110,[[[U]],[R[15]]]],[11,R[13],E,E,110,[[],[R[15]]]],[11,R[17],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[["self"]],[T]]],[11,R[16],E,E,110,[[["self"]],[R[18]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[51],E,E,111,[[["self"]],[T]]],[11,R[52],E,E,111,[[["self"],[T]]]],[11,R[12],E,E,111,[[[U]],[R[15]]]],[11,R[13],E,E,111,[[],[R[15]]]],[11,R[17],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[["self"]],[T]]],[11,R[16],E,E,111,[[["self"]],[R[18]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[51],E,E,112,[[["self"]],[T]]],[11,R[52],E,E,112,[[["self"],[T]]]],[11,R[12],E,E,112,[[[U]],[R[15]]]],[11,R[13],E,E,112,[[],[R[15]]]],[11,R[17],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[["self"]],[T]]],[11,R[16],E,E,112,[[["self"]],[R[18]]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[51],E,E,113,[[["self"]],[T]]],[11,R[52],E,E,113,[[["self"],[T]]]],[11,R[12],E,E,113,[[[U]],[R[15]]]],[11,R[13],E,E,113,[[],[R[15]]]],[11,R[17],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[["self"]],[T]]],[11,R[16],E,E,113,[[["self"]],[R[18]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[51],E,E,114,[[["self"]],[T]]],[11,R[52],E,E,114,[[["self"],[T]]]],[11,R[12],E,E,114,[[[U]],[R[15]]]],[11,R[13],E,E,114,[[],[R[15]]]],[11,R[17],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[["self"]],[T]]],[11,R[16],E,E,114,[[["self"]],[R[18]]]],[11,"into",R[1080],E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[51],E,E,120,[[["self"]],[T]]],[11,R[52],E,E,120,[[["self"],[T]]]],[11,R[114],E,E,120,[[["self"]],["string"]]],[11,R[12],E,E,120,[[[U]],[R[15]]]],[11,R[13],E,E,120,[[],[R[15]]]],[11,R[17],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[["self"]],[T]]],[11,R[16],E,E,120,[[["self"]],[R[18]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[51],E,E,121,[[["self"]],[T]]],[11,R[52],E,E,121,[[["self"],[T]]]],[11,R[114],E,E,121,[[["self"]],["string"]]],[11,R[12],E,E,121,[[[U]],[R[15]]]],[11,R[13],E,E,121,[[],[R[15]]]],[11,R[17],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[["self"]],[T]]],[11,R[16],E,E,121,[[["self"]],[R[18]]]],[11,"into",R[1081],E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[51],E,E,122,[[["self"]],[T]]],[11,R[52],E,E,122,[[["self"],[T]]]],[11,R[12],E,E,122,[[[U]],[R[15]]]],[11,R[13],E,E,122,[[],[R[15]]]],[11,R[17],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[["self"]],[T]]],[11,R[16],E,E,122,[[["self"]],[R[18]]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[12],E,E,123,[[[U]],[R[15]]]],[11,R[13],E,E,123,[[],[R[15]]]],[11,R[17],E,E,123,[[["self"]],[T]]],[11,R[14],E,E,123,[[["self"]],[T]]],[11,R[16],E,E,123,[[["self"]],[R[18]]]],[11,"into",R[1082],E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[51],E,E,124,[[["self"]],[T]]],[11,R[52],E,E,124,[[["self"],[T]]]],[11,R[12],E,E,124,[[[U]],[R[15]]]],[11,R[13],E,E,124,[[],[R[15]]]],[11,R[17],E,E,124,[[["self"]],[T]]],[11,R[14],E,E,124,[[["self"]],[T]]],[11,R[16],E,E,124,[[["self"]],[R[18]]]],[11,"into",R[1083],E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[51],E,E,126,[[["self"]],[T]]],[11,R[52],E,E,126,[[["self"],[T]]]],[11,R[12],E,E,126,[[[U]],[R[15]]]],[11,R[13],E,E,126,[[],[R[15]]]],[11,R[17],E,E,126,[[["self"]],[T]]],[11,R[14],E,E,126,[[["self"]],[T]]],[11,R[16],E,E,126,[[["self"]],[R[18]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[51],E,E,125,[[["self"]],[T]]],[11,R[52],E,E,125,[[["self"],[T]]]],[11,R[12],E,E,125,[[[U]],[R[15]]]],[11,R[13],E,E,125,[[],[R[15]]]],[11,R[17],E,E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[["self"]],[T]]],[11,R[16],E,E,125,[[["self"]],[R[18]]]],[11,"into",R[1084],E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[51],E,E,128,[[["self"]],[T]]],[11,R[52],E,E,128,[[["self"],[T]]]],[11,R[12],E,E,128,[[[U]],[R[15]]]],[11,R[13],E,E,128,[[],[R[15]]]],[11,R[17],E,E,128,[[["self"]],[T]]],[11,R[14],E,E,128,[[["self"]],[T]]],[11,R[16],E,E,128,[[["self"]],[R[18]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[51],E,E,129,[[["self"]],[T]]],[11,R[52],E,E,129,[[["self"],[T]]]],[11,R[12],E,E,129,[[[U]],[R[15]]]],[11,R[13],E,E,129,[[],[R[15]]]],[11,R[17],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[["self"]],[T]]],[11,R[16],E,E,129,[[["self"]],[R[18]]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[51],E,E,130,[[["self"]],[T]]],[11,R[52],E,E,130,[[["self"],[T]]]],[11,R[12],E,E,130,[[[U]],[R[15]]]],[11,R[13],E,E,130,[[],[R[15]]]],[11,R[17],E,E,130,[[["self"]],[T]]],[11,R[14],E,E,130,[[["self"]],[T]]],[11,R[16],E,E,130,[[["self"]],[R[18]]]],[11,"into",E,E,181,[[],[U]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[51],E,E,181,[[["self"]],[T]]],[11,R[52],E,E,181,[[["self"],[T]]]],[11,R[12],E,E,181,[[[U]],[R[15]]]],[11,R[13],E,E,181,[[],[R[15]]]],[11,R[17],E,E,181,[[["self"]],[T]]],[11,R[14],E,E,181,[[["self"]],[T]]],[11,R[16],E,E,181,[[["self"]],[R[18]]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[12],E,E,127,[[[U]],[R[15]]]],[11,R[13],E,E,127,[[],[R[15]]]],[11,R[17],E,E,127,[[["self"]],[T]]],[11,R[14],E,E,127,[[["self"]],[T]]],[11,R[16],E,E,127,[[["self"]],[R[18]]]],[11,"into",R[1085],E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[51],E,E,131,[[["self"]],[T]]],[11,R[52],E,E,131,[[["self"],[T]]]],[11,R[12],E,E,131,[[[U]],[R[15]]]],[11,R[13],E,E,131,[[],[R[15]]]],[11,R[17],E,E,131,[[["self"]],[T]]],[11,R[14],E,E,131,[[["self"]],[T]]],[11,R[16],E,E,131,[[["self"]],[R[18]]]],[11,"into",R[1045],E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[51],E,E,137,[[["self"]],[T]]],[11,R[52],E,E,137,[[["self"],[T]]]],[11,R[114],E,E,137,[[["self"]],["string"]]],[11,R[12],E,E,137,[[[U]],[R[15]]]],[11,R[13],E,E,137,[[],[R[15]]]],[11,R[17],E,E,137,[[["self"]],[T]]],[11,R[14],E,E,137,[[["self"]],[T]]],[11,R[16],E,E,137,[[["self"]],[R[18]]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[51],E,E,138,[[["self"]],[T]]],[11,R[52],E,E,138,[[["self"],[T]]]],[11,R[114],E,E,138,[[["self"]],["string"]]],[11,R[12],E,E,138,[[[U]],[R[15]]]],[11,R[13],E,E,138,[[],[R[15]]]],[11,R[17],E,E,138,[[["self"]],[T]]],[11,R[14],E,E,138,[[["self"]],[T]]],[11,R[16],E,E,138,[[["self"]],[R[18]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[51],E,E,139,[[["self"]],[T]]],[11,R[52],E,E,139,[[["self"],[T]]]],[11,R[114],E,E,139,[[["self"]],["string"]]],[11,R[12],E,E,139,[[[U]],[R[15]]]],[11,R[13],E,E,139,[[],[R[15]]]],[11,R[17],E,E,139,[[["self"]],[T]]],[11,R[14],E,E,139,[[["self"]],[T]]],[11,R[16],E,E,139,[[["self"]],[R[18]]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[51],E,E,140,[[["self"]],[T]]],[11,R[52],E,E,140,[[["self"],[T]]]],[11,R[12],E,E,140,[[[U]],[R[15]]]],[11,R[13],E,E,140,[[],[R[15]]]],[11,R[17],E,E,140,[[["self"]],[T]]],[11,R[14],E,E,140,[[["self"]],[T]]],[11,R[16],E,E,140,[[["self"]],[R[18]]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[51],E,E,132,[[["self"]],[T]]],[11,R[52],E,E,132,[[["self"],[T]]]],[11,R[12],E,E,132,[[[U]],[R[15]]]],[11,R[13],E,E,132,[[],[R[15]]]],[11,R[17],E,E,132,[[["self"]],[T]]],[11,R[14],E,E,132,[[["self"]],[T]]],[11,R[16],E,E,132,[[["self"]],[R[18]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[51],E,E,133,[[["self"]],[T]]],[11,R[52],E,E,133,[[["self"],[T]]]],[11,R[12],E,E,133,[[[U]],[R[15]]]],[11,R[13],E,E,133,[[],[R[15]]]],[11,R[17],E,E,133,[[["self"]],[T]]],[11,R[14],E,E,133,[[["self"]],[T]]],[11,R[16],E,E,133,[[["self"]],[R[18]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[51],E,E,134,[[["self"]],[T]]],[11,R[52],E,E,134,[[["self"],[T]]]],[11,R[12],E,E,134,[[[U]],[R[15]]]],[11,R[13],E,E,134,[[],[R[15]]]],[11,R[17],E,E,134,[[["self"]],[T]]],[11,R[14],E,E,134,[[["self"]],[T]]],[11,R[16],E,E,134,[[["self"]],[R[18]]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[51],E,E,135,[[["self"]],[T]]],[11,R[52],E,E,135,[[["self"],[T]]]],[11,R[12],E,E,135,[[[U]],[R[15]]]],[11,R[13],E,E,135,[[],[R[15]]]],[11,R[17],E,E,135,[[["self"]],[T]]],[11,R[14],E,E,135,[[["self"]],[T]]],[11,R[16],E,E,135,[[["self"]],[R[18]]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[51],E,E,136,[[["self"]],[T]]],[11,R[52],E,E,136,[[["self"],[T]]]],[11,R[12],E,E,136,[[[U]],[R[15]]]],[11,R[13],E,E,136,[[],[R[15]]]],[11,R[17],E,E,136,[[["self"]],[T]]],[11,R[14],E,E,136,[[["self"]],[T]]],[11,R[16],E,E,136,[[["self"]],[R[18]]]],[11,"clone",R[994],E,69,[[["self"]],["msghdr"]]],[11,"clone",E,E,72,[[["self"]],[R[440]]]],[11,"clone",E,E,71,[[["self"]],[R[439]]]],[11,"clone",E,E,73,[[["self"]],[R[448]]]],[11,"clone",E,E,68,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,74,[[["self"]],[R[447]]]],[11,"clone",R[1074],E,65,[[["self"]],[R[449]]]],[11,"clone",R[1132],E,25,[[["self"]],["winsize"]]],[11,"clone",R[994],E,70,[[["self"]],[R[502]]]],[11,"clone",R[1076],E,101,[[["self"]],["stat"]]],[11,R[1086],R[994],E,100,[[["self"]]]],[11,"get",R[1075],E,147,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,148,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,149,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,150,[[["self"],["rawfd"]],[["linger"],[R[15],["linger"]]]]],[11,"get",E,E,155,[[["self"],["rawfd"]],[[R[15],["u8"]],["u8"]]]],[11,"get",E,E,156,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,157,[[["self"],["rawfd"]],[[R[15],["timeval"]],["timeval"]]]],[11,"get",E,E,158,[[["self"],["rawfd"]],[[R[15],["timeval"]],["timeval"]]]],[11,"get",E,E,159,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,160,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,161,[[["self"],["rawfd"]],[[R[15],["i32"]],["i32"]]]],[11,"get",E,E,162,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,163,[[["self"],["rawfd"]],[[R[15],[R[1087]]],[R[1087]]]]],[11,"get",E,E,164,[[["self"],["rawfd"]],[["u32"],[R[15],["u32"]]]]],[11,"get",E,E,165,[[["self"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[11,"get",E,E,166,[[["self"],["rawfd"]],[[R[15],["usize"]],["usize"]]]],[11,"get",E,E,169,[[["self"],["rawfd"]],[[R[1116]],[R[15],[R[1116]]]]]],[11,"get",E,E,170,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,171,[[["self"],["rawfd"]],[[R[439]],[R[15],[R[439]]]]]],[11,"get",E,E,172,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,173,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,174,[[["self"],["rawfd"]],[["u32"],[R[15],["u32"]]]]],[11,"get",E,E,175,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,176,[[["self"],["rawfd"]],[["osstring"],[R[15],["osstring"]]]]],[11,"get",E,E,177,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"get",E,E,178,[[["self"],["rawfd"]],[[R[15],["bool"]],["bool"]]]],[11,"set",E,E,147,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,148,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,149,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,150,[[["linger"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,151,[[[R[1088]],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,152,[[[R[1088]],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,153,[[[R[1089]],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,154,[[[R[1089]],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,155,[[["u8"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,156,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,157,[[["timeval"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,158,[[["timeval"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,159,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,160,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,162,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,164,[[["u32"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,165,[[["usize"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,166,[[["usize"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,167,[[["usize"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,168,[[["usize"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,172,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,173,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,174,[[["u32"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,175,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,176,[[["osstring"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,177,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,178,[[["bool"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,179,[[["usize"],["self"],["rawfd"]],[R[15]]]],[11,"set",E,E,180,[[[T],["self"],["rawfd"]],[R[15]]]],[11,"seconds",R[1080],E,120,[[["i64"]],[R[500]]]],[11,R[1090],E,E,120,[[["i64"]],[R[500]]]],[11,R[1091],E,"Makes a new `TimeSpec` with given number of microseconds.",120,[[["i64"]],[R[500]]]],[11,R[1092],E,"Makes a new `TimeSpec` with given number of nanoseconds.",120,[[["i64"]],[R[500]]]],[11,R[1093],E,E,120,[[["self"]],["i64"]]],[11,R[1094],E,E,120,[[["self"]],["i64"]]],[11,R[1095],E,E,120,[[["self"]],["i64"]]],[11,R[1096],E,E,120,[[["self"]],["i64"]]],[11,"seconds",E,E,121,[[["i64"]],["timeval"]]],[11,R[1090],E,E,121,[[["i64"]],["timeval"]]],[11,R[1091],E,"Makes a new `TimeVal` with given number of microseconds.",121,[[["i64"]],["timeval"]]],[11,R[1092],E,"Makes a new `TimeVal` with given number of nanoseconds.…",121,[[["i64"]],["timeval"]]],[11,R[1093],E,E,121,[[["self"]],["i64"]]],[11,R[1094],E,E,121,[[["self"]],["i64"]]],[11,R[1095],E,E,121,[[["self"]],["i64"]]],[11,R[1096],E,E,121,[[["self"]],["i64"]]],[11,"drop",R[1118],E,2,[[["self"]]]],[11,"drop",E,E,142,[[["self"]]]],[11,"drop",R[1062],E,143,[[["self"]]]],[11,"drop",R[1132],E,144,[[["self"]]]],[11,"drop",R[1065],"If the `AioCb` has no remaining state in the kernel, just…",36,[[["self"]]]],[11,"drop",R[1074],E,67,[[["self"]]]],[11,"as_ref",R[923],E,57,[[["self"]],["str"]]],[11,"as_ref",E,E,63,[[["self"]],[R[527]]]],[11,"as_ref",R[1080],E,120,[[["self"]],[R[500]]]],[11,"as_ref",E,E,121,[[["self"]],["timeval"]]],[11,"into",R[994],E,97,[[],["ucred"]]],[11,"from",R[1065],E,30,[[["vec",["aiocb"]],["aiocb"]],["liocb"]]],[11,"from",R[923],E,61,[[[R[504]]],["self"]]],[11,"from",R[994],E,97,[[["ucred"]],["self"]]],[11,"from",R[1079],E,109,[[["termios"]],["self"]]],[11,"from",E,E,110,[[["speed_t"]],[R[1109]]]],[11,"from",R[1080],E,121,[[["timeval"]],["self"]]],[11,"from","nix",E,182,[[["pid"]],["self"]]],[11,"from",E,E,0,[[["errno"]],["error"]]],[11,"from",E,E,0,[[["fromutf8error"]],["error"]]],[11,"next",R[1118],E,142,[[["self"]],[R[49]]]],[11,"next",R[1062],E,143,[[["self"]],[R[49]]]],[11,"next",R[923],E,145,[[["self"]],[[R[49],["signal"]],["signal"]]]],[11,"next",R[1074],E,67,[[["self"]],[R[49]]]],[11,"next",R[994],E,146,[[["self"]],[[R[49],[R[1097]]],[R[1097]]]]],[11,"extend",R[1098],E,8,[[["self"],[R[54]]]]],[11,"extend",E,E,9,[[[R[54]],["self"]]]],[11,"extend",E,E,10,[[["self"],[R[54]]]]],[11,"extend",E,E,11,[[["self"],[R[54]]]]],[11,"extend",E,E,12,[[["self"],[R[54]]]]],[11,"extend",E,E,13,[[["self"],[R[54]]]]],[11,"extend",R[1102],E,15,[[["self"],[R[54]]]]],[11,"extend",E,E,16,[[["self"],[R[54]]]]],[11,"extend",R[1099],E,17,[[["self"],[R[54]]]]],[11,"extend",E,E,18,[[["self"],[R[54]]]]],[11,"extend",R[1063],E,19,[[["self"],[R[54]]]]],[11,"extend",E,E,20,[[["self"],[R[54]]]]],[11,"extend",R[1064],E,22,[[[R[54]],["self"]]]],[11,"extend",R[1103],E,24,[[["self"],[R[54]]]]],[11,"extend",R[1100],E,28,[[["self"],[R[54]]]]],[11,"extend",R[1066],E,38,[[["self"],[R[54]]]]],[11,"extend",E,E,39,[[["self"],[R[54]]]]],[11,"extend",R[1067],E,41,[[[R[54]],["self"]]]],[11,"extend",R[1068],E,42,[[["self"],[R[54]]]]],[11,"extend",R[1069],E,44,[[[R[54]],["self"]]]],[11,"extend",E,E,45,[[[R[54]],["self"]]]],[11,"extend",E,E,46,[[["self"],[R[54]]]]],[11,"extend",E,E,47,[[["self"],[R[54]]]]],[11,"extend",R[1070],E,50,[[["self"],[R[54]]]]],[11,"extend",R[1071],E,53,[[[R[54]],["self"]]]],[11,"extend",R[923],E,62,[[["self"],[R[54]]]]],[11,"extend",R[1074],E,66,[[["self"],[R[54]]]]],[11,"extend",R[994],E,95,[[["self"],[R[54]]]]],[11,"extend",E,E,96,[[[R[54]],["self"]]]],[11,"extend",R[1076],E,104,[[["self"],[R[54]]]]],[11,"extend",E,E,105,[[["self"],[R[54]]]]],[11,"extend",R[1077],E,106,[[[R[54]],["self"]]]],[11,"extend",R[1079],E,115,[[[R[54]],["self"]]]],[11,"extend",E,E,116,[[[R[54]],["self"]]]],[11,"extend",E,E,117,[[[R[54]],["self"]]]],[11,"extend",E,E,118,[[["self"],[R[54]]]]],[11,"extend",R[1083],E,126,[[[R[54]],["self"]]]],[11,"extend",R[1084],E,128,[[[R[54]],["self"]]]],[11,"extend",E,E,129,[[["self"],[R[54]]]]],[11,"extend",R[1045],E,140,[[["self"],[R[54]]]]],[11,"clone",R[1118],E,3,[[["self"]],["entry"]]],[11,"clone",E,E,1,[[["self"]],["type"]]],[11,"clone",R[1101],E,4,[[["self"]],["errno"]]],[11,"clone",R[1098],E,8,[[["self"]],[R[627]]]],[11,"clone",E,E,9,[[["self"]],["oflag"]]],[11,"clone",E,E,10,[[["self"]],[R[659]]]],[11,"clone",E,E,11,[[["self"]],["fdflag"]]],[11,"clone",E,E,7,[[["self"]],["flockarg"]]],[11,"clone",E,E,12,[[["self"]],[R[622]]]],[11,"clone",E,E,13,[[["self"]],[R[671]]]],[11,"clone",R[1062],E,14,[[["self"]],[R[1115]]]],[11,"clone",R[1102],E,15,[[["self"]],[R[676]]]],[11,"clone",E,E,16,[[["self"]],[R[677]]]],[11,"clone",R[1099],E,17,[[["self"]],[R[701]]]],[11,"clone",E,E,18,[[["self"]],[R[705]]]],[11,"clone",R[1063],E,19,[[["self"]],[R[712]]]],[11,"clone",E,E,20,[[["self"]],["fdflag"]]],[11,"clone",E,E,21,[[["self"]],["mqattr"]]],[11,"clone",R[1064],E,22,[[["self"]],[R[732]]]],[11,"clone",R[1103],E,23,[[["self"]],["pollfd"]]],[11,"clone",E,E,24,[[["self"]],[R[733]]]],[11,"clone",R[1132],E,26,[[["self"]],[R[745]]]],[11,"clone",E,E,27,[[["self"]],[R[746]]]],[11,"clone",R[1100],E,28,[[["self"]],[R[749]]]],[11,"clone",E,E,29,[[["self"]],["cpuset"]]],[11,"clone",R[1065],E,31,[[["self"]],[R[1104]]]],[11,"clone",E,E,32,[[["self"]],[R[775]]]],[11,"clone",E,E,33,[[["self"]],["liomode"]]],[11,"clone",E,E,34,[[["self"]],[R[772]]]],[11,"clone",R[1066],E,38,[[["self"]],[R[791]]]],[11,"clone",E,E,37,[[["self"]],["epollop"]]],[11,"clone",E,E,39,[[["self"]],[R[793]]]],[11,"clone",E,E,40,[[["self"]],["epollevent"]]],[11,"clone",R[1067],E,41,[[["self"]],[R[798]]]],[11,"clone",R[1068],E,42,[[["self"]],[R[801]]]],[11,"clone",R[1069],E,44,[[["self"]],[R[820]]]],[11,"clone",E,E,45,[[["self"]],[R[843]]]],[11,"clone",E,E,43,[[["self"]],[R[1112]]]],[11,"clone",E,E,46,[[["self"]],[R[701]]]],[11,"clone",E,E,47,[[["self"]],[R[847]]]],[11,"clone",R[1070],E,48,[[["self"]],["request"]]],[11,"clone",E,E,49,[[["self"]],["event"]]],[11,"clone",E,E,50,[[["self"]],[R[895]]]],[11,"clone",R[1071],E,51,[[["self"]],[R[899]]]],[11,"clone",E,E,52,[[["self"]],["quotafmt"]]],[11,"clone",E,E,53,[[["self"]],[R[909]]]],[11,"clone",E,E,54,[[["self"]],["dqblk"]]],[11,"clone",R[1072],E,55,[[["self"]],[R[1113]]]],[11,"clone",R[1073],E,56,[[["self"]],["fdset"]]],[11,"clone",R[923],E,57,[[["self"]],["signal"]]],[11,"clone",E,E,145,[[["self"]],[R[1105]]]],[11,"clone",E,E,62,[[["self"]],[R[938]]]],[11,"clone",E,E,58,[[["self"]],[R[929]]]],[11,"clone",E,E,63,[[["self"]],["sigset"]]],[11,"clone",E,E,59,[[["self"]],[R[926]]]],[11,"clone",E,E,64,[[["self"]],[R[433]]]],[11,"clone",E,E,60,[[["self"]],[R[774]]]],[11,"clone",E,E,61,[[["self"]],[R[504]]]],[11,"clone",R[1074],E,66,[[["self"]],[R[952]]]],[11,"clone",E,E,67,[[["self"]],[R[949]]]],[11,"clone",R[994],E,82,[[["self"]],[R[977]]]],[11,"clone",E,E,84,[[["self"]],[R[992]]]],[11,"clone",E,E,85,[[["self"]],["ipaddr"]]],[11,"clone",E,E,76,[[["self"]],[R[989]]]],[11,"clone",E,E,77,[[["self"]],[R[990]]]],[11,"clone",E,E,75,[[["self"]],[R[991]]]],[11,"clone",E,E,83,[[["self"]],[R[502]]]],[11,"clone",E,E,79,[[["self"]],[R[1106]]]],[11,"clone",E,E,80,[[["self"]],["algaddr"]]],[11,"clone",E,E,78,[[["self"]],["linkaddr"]]],[11,"clone",R[1075],E,147,[[["self"]],["reuseaddr"]]],[11,"clone",E,E,148,[[["self"]],["reuseport"]]],[11,"clone",E,E,149,[[["self"]],["tcpnodelay"]]],[11,"clone",E,E,150,[[["self"]],["linger"]]],[11,"clone",E,E,151,[[["self"]],["ipaddmembership"]]],[11,"clone",E,E,152,[[["self"]],["ipdropmembership"]]],[11,"clone",E,E,153,[[["self"]],["ipv6addmembership"]]],[11,"clone",E,E,154,[[["self"]],["ipv6dropmembership"]]],[11,"clone",E,E,155,[[["self"]],["ipmulticastttl"]]],[11,"clone",E,E,156,[[["self"]],["ipmulticastloop"]]],[11,"clone",E,E,157,[[["self"]],["receivetimeout"]]],[11,"clone",E,E,158,[[["self"]],["sendtimeout"]]],[11,"clone",E,E,159,[[["self"]],["broadcast"]]],[11,"clone",E,E,160,[[["self"]],["oobinline"]]],[11,"clone",E,E,161,[[["self"]],["socketerror"]]],[11,"clone",E,E,162,[[["self"]],["keepalive"]]],[11,"clone",E,E,163,[[["self"]],["peercredentials"]]],[11,"clone",E,E,164,[[["self"]],["tcpkeepidle"]]],[11,"clone",E,E,165,[[["self"]],["rcvbuf"]]],[11,"clone",E,E,166,[[["self"]],["sndbuf"]]],[11,"clone",E,E,167,[[["self"]],["rcvbufforce"]]],[11,"clone",E,E,168,[[["self"]],["sndbufforce"]]],[11,"clone",E,E,169,[[["self"]],[R[1116]]]],[11,"clone",E,E,170,[[["self"]],["acceptconn"]]],[11,"clone",E,E,171,[[["self"]],["originaldst"]]],[11,"clone",E,E,172,[[["self"]],["receivetimestamp"]]],[11,"clone",E,E,173,[[["self"]],["iptransparent"]]],[11,"clone",E,E,174,[[["self"]],["mark"]]],[11,"clone",E,E,175,[[["self"]],["passcred"]]],[11,"clone",E,E,176,[[["self"]],["tcpcongestion"]]],[11,"clone",E,E,177,[[["self"]],["ipv4packetinfo"]]],[11,"clone",E,E,178,[[["self"]],["ipv6recvpacketinfo"]]],[11,"clone",E,E,179,[[["self"]],["algsetaeadauthsize"]]],[11,"clone",E,E,180,[[["self"]],["algsetkey"]]],[11,"clone",R[994],E,86,[[["self"]],[R[1116]]]],[11,"clone",E,E,87,[[["self"]],[R[976]]]],[11,"clone",E,E,95,[[["self"]],[R[979]]]],[11,"clone",E,E,96,[[["self"]],[R[980]]]],[11,"clone",E,E,97,[[["self"]],[R[1087]]]],[11,"clone",E,E,98,[[["self"]],[R[1088]]]],[11,"clone",E,E,99,[[["self"]],[R[1089]]]],[11,"clone",E,E,90,[[["self"]],["socklevel"]]],[11,"clone",E,E,91,[[["self"]],[R[985]]]],[11,"clone",R[1076],E,104,[[["self"]],["sflag"]]],[11,"clone",E,E,105,[[["self"]],["mode"]]],[11,"clone",E,E,102,[[["self"]],[R[1107]]]],[11,"clone",E,E,103,[[["self"]],[R[1108]]]],[11,"clone",R[1077],E,106,[[["self"]],["fsflags"]]],[11,"clone",E,E,107,[[["self"]],["statvfs"]]],[11,"clone",R[1078],E,108,[[["self"]],["sysinfo"]]],[11,"clone",R[1079],E,109,[[["self"]],["termios"]]],[11,"clone",E,E,110,[[["self"]],[R[1109]]]],[11,"clone",E,E,111,[[["self"]],["setarg"]]],[11,"clone",E,E,112,[[["self"]],["flusharg"]]],[11,"clone",E,E,113,[[["self"]],["flowarg"]]],[11,"clone",E,E,114,[[["self"]],[R[1114]]]],[11,"clone",E,E,115,[[["self"]],[R[1020]]]],[11,"clone",E,E,116,[[["self"]],[R[1021]]]],[11,"clone",E,E,117,[[["self"]],[R[1023]]]],[11,"clone",E,E,118,[[["self"]],[R[1024]]]],[11,"clone",R[1080],E,120,[[["self"]],[R[500]]]],[11,"clone",E,E,121,[[["self"]],["timeval"]]],[11,"clone",R[1081],E,122,[[["self"]],["remoteiovec"]]],[11,"clone",R[1082],E,124,[[["self"]],["utsname"]]],[11,"clone",R[1083],E,126,[[["self"]],[R[1029]]]],[11,"clone",E,E,125,[[["self"]],[R[1030]]]],[11,"clone",R[1084],E,128,[[["self"]],[R[1041]]]],[11,"clone",E,E,129,[[["self"]],[R[1043]]]],[11,"clone",E,E,130,[[["self"]],["inotify"]]],[11,"clone",E,E,181,[[["self"]],[R[1044]]]],[11,"clone",R[1085],E,131,[[["self"]],["ucontext"]]],[11,"clone",R[1045],E,137,[[["self"]],["uid"]]],[11,"clone",E,E,138,[[["self"]],["gid"]]],[11,"clone",E,E,139,[[["self"]],["pid"]]],[11,"clone",E,E,132,[[["self"]],[R[1110]]]],[11,"clone",E,E,133,[[["self"]],[R[1111]]]],[11,"clone",E,E,134,[[["self"]],["whence"]]],[11,"clone",E,E,135,[[["self"]],[R[1057]]]],[11,"clone",E,E,136,[[["self"]],[R[1117]]]],[11,"clone",E,E,140,[[["self"]],[R[1058]]]],[11,"clone","nix",E,0,[[["self"]],["error"]]],[11,R[23],R[1071],E,53,[[],[R[909]]]],[11,R[23],E,E,54,[[],["dqblk"]]],[11,R[23],R[1075],E,180,[[],["self"]]],[11,R[23],R[1077],E,106,[[],["fsflags"]]],[11,"cmp",R[1098],E,8,[[["self"],[R[627]]],[R[37]]]],[11,"cmp",E,E,9,[[["oflag"],["self"]],[R[37]]]],[11,"cmp",E,E,10,[[[R[659]],["self"]],[R[37]]]],[11,"cmp",E,E,11,[[["self"],["fdflag"]],[R[37]]]],[11,"cmp",E,E,12,[[[R[622]],["self"]],[R[37]]]],[11,"cmp",E,E,13,[[["self"],[R[671]]],[R[37]]]],[11,"cmp",R[1102],E,15,[[["self"],[R[676]]],[R[37]]]],[11,"cmp",E,E,16,[[["self"],[R[677]]],[R[37]]]],[11,"cmp",R[1099],E,17,[[["self"],[R[701]]],[R[37]]]],[11,"cmp",E,E,18,[[[R[705]],["self"]],[R[37]]]],[11,"cmp",R[1063],E,19,[[["self"],[R[712]]],[R[37]]]],[11,"cmp",E,E,20,[[["self"],["fdflag"]],[R[37]]]],[11,"cmp",R[1064],E,22,[[["self"],[R[732]]],[R[37]]]],[11,"cmp",R[1103],E,24,[[["self"],[R[733]]],[R[37]]]],[11,"cmp",R[1100],E,28,[[["self"],[R[749]]],[R[37]]]],[11,"cmp",R[1065],E,31,[[["self"],[R[1104]]],[R[37]]]],[11,"cmp",E,E,32,[[["self"],[R[775]]],[R[37]]]],[11,"cmp",E,E,33,[[["self"],["liomode"]],[R[37]]]],[11,"cmp",R[1066],E,38,[[[R[791]],["self"]],[R[37]]]],[11,"cmp",E,E,39,[[[R[793]],["self"]],[R[37]]]],[11,"cmp",R[1067],E,41,[[[R[798]],["self"]],[R[37]]]],[11,"cmp",R[1068],E,42,[[["self"],[R[801]]],[R[37]]]],[11,"cmp",R[1069],E,44,[[[R[820]],["self"]],[R[37]]]],[11,"cmp",E,E,45,[[["self"],[R[843]]],[R[37]]]],[11,"cmp",E,E,43,[[["self"],[R[1112]]],[R[37]]]],[11,"cmp",E,E,46,[[["self"],[R[701]]],[R[37]]]],[11,"cmp",E,E,47,[[[R[847]],["self"]],[R[37]]]],[11,"cmp",R[1070],E,48,[[["request"],["self"]],[R[37]]]],[11,"cmp",E,E,49,[[["event"],["self"]],[R[37]]]],[11,"cmp",E,E,50,[[[R[895]],["self"]],[R[37]]]],[11,"cmp",R[1071],E,51,[[["self"],[R[899]]],[R[37]]]],[11,"cmp",E,E,52,[[["self"],["quotafmt"]],[R[37]]]],[11,"cmp",E,E,53,[[["self"],[R[909]]],[R[37]]]],[11,"cmp",R[1072],E,55,[[[R[1113]],["self"]],[R[37]]]],[11,"cmp",R[923],E,57,[[["signal"],["self"]],[R[37]]]],[11,"cmp",E,E,62,[[[R[938]],["self"]],[R[37]]]],[11,"cmp",E,E,58,[[["self"],[R[929]]],[R[37]]]],[11,"cmp",R[1074],E,66,[[["self"],[R[952]]],[R[37]]]],[11,"cmp",R[994],E,95,[[[R[979]],["self"]],[R[37]]]],[11,"cmp",E,E,96,[[[R[980]],["self"]],[R[37]]]],[11,"cmp",R[1076],E,104,[[["sflag"],["self"]],[R[37]]]],[11,"cmp",E,E,105,[[["self"],["mode"]],[R[37]]]],[11,"cmp",R[1077],E,106,[[["self"],["fsflags"]],[R[37]]]],[11,"cmp",R[1079],E,110,[[["self"],[R[1109]]],[R[37]]]],[11,"cmp",E,E,111,[[["setarg"],["self"]],[R[37]]]],[11,"cmp",E,E,112,[[["flusharg"],["self"]],[R[37]]]],[11,"cmp",E,E,113,[[["flowarg"],["self"]],[R[37]]]],[11,"cmp",E,E,114,[[[R[1114]],["self"]],[R[37]]]],[11,"cmp",E,E,115,[[["self"],[R[1020]]],[R[37]]]],[11,"cmp",E,E,116,[[[R[1021]],["self"]],[R[37]]]],[11,"cmp",E,E,117,[[[R[1023]],["self"]],[R[37]]]],[11,"cmp",E,E,118,[[["self"],[R[1024]]],[R[37]]]],[11,"cmp",R[1080],E,120,[[[R[500]],["self"]],[R[37]]]],[11,"cmp",E,E,121,[[["self"],["timeval"]],[R[37]]]],[11,"cmp",R[1083],E,126,[[["self"],[R[1029]]],[R[37]]]],[11,"cmp",R[1084],E,128,[[[R[1041]],["self"]],[R[37]]]],[11,"cmp",E,E,129,[[["self"],[R[1043]]],[R[37]]]],[11,"cmp",E,E,181,[[[R[1044]],["self"]],[R[37]]]],[11,"cmp",R[1045],E,140,[[["self"],[R[1058]]],[R[37]]]],[11,"eq",R[1118],E,1,[[["type"],["self"]],["bool"]]],[11,"eq",R[1101],E,4,[[["self"],["errno"]],["bool"]]],[11,"eq",R[1098],E,8,[[["self"],[R[627]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[627]]],["bool"]]],[11,"eq",E,E,9,[[["oflag"],["self"]],["bool"]]],[11,"ne",E,E,9,[[["oflag"],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[659]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[659]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,12,[[[R[622]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[622]],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[671]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[671]]],["bool"]]],[11,"eq",R[1062],E,14,[[[R[1115]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[1115]],["self"]],["bool"]]],[11,"eq",E,E,143,[[[R[673]],["self"]],["bool"]]],[11,"ne",E,E,143,[[[R[673]],["self"]],["bool"]]],[11,"eq",R[1102],E,15,[[["self"],[R[676]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[676]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[677]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[677]]],["bool"]]],[11,"eq",R[1099],E,17,[[["self"],[R[701]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[701]]],["bool"]]],[11,"eq",E,E,18,[[[R[705]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[705]],["self"]],["bool"]]],[11,"eq",R[1063],E,19,[[["self"],[R[712]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[712]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,21,[[["mqattr"],["self"]],["bool"]]],[11,"eq",R[1064],E,22,[[["self"],[R[732]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[732]]],["bool"]]],[11,"eq",R[1103],E,24,[[["self"],[R[733]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[733]]],["bool"]]],[11,"eq",R[1100],E,28,[[["self"],[R[749]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[749]]],["bool"]]],[11,"eq",R[1065],E,31,[[["self"],[R[1104]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[775]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["liomode"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[772]]],["bool"]]],[11,"eq",R[1066],E,38,[[[R[791]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[791]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],["epollop"]],["bool"]]],[11,"eq",E,E,39,[[[R[793]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[793]],["self"]],["bool"]]],[11,"eq",R[1067],E,41,[[[R[798]],["self"]],["bool"]]],[11,"ne",E,E,41,[[[R[798]],["self"]],["bool"]]],[11,"eq",R[1068],E,42,[[["self"],[R[801]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[801]]],["bool"]]],[11,"eq",R[1069],E,44,[[[R[820]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[820]],["self"]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[843]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[843]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[1112]]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[701]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[701]]],["bool"]]],[11,"eq",E,E,47,[[[R[847]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[847]],["self"]],["bool"]]],[11,"eq",R[1070],E,48,[[["request"],["self"]],["bool"]]],[11,"eq",E,E,49,[[["event"],["self"]],["bool"]]],[11,"eq",E,E,50,[[[R[895]],["self"]],["bool"]]],[11,"ne",E,E,50,[[[R[895]],["self"]],["bool"]]],[11,"eq",R[1071],E,51,[[["self"],[R[899]]],["bool"]]],[11,"eq",E,E,52,[[["self"],["quotafmt"]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[909]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[909]]],["bool"]]],[11,"eq",R[1072],E,55,[[[R[1113]],["self"]],["bool"]]],[11,"eq",R[923],E,57,[[["signal"],["self"]],["bool"]]],[11,"eq",E,E,62,[[[R[938]],["self"]],["bool"]]],[11,"ne",E,E,62,[[[R[938]],["self"]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[929]]],["bool"]]],[11,"eq",E,E,59,[[[R[926]],["self"]],["bool"]]],[11,"ne",E,E,59,[[[R[926]],["self"]],["bool"]]],[11,"eq",E,E,60,[[[R[774]],["self"]],["bool"]]],[11,"ne",E,E,60,[[[R[774]],["self"]],["bool"]]],[11,"eq",R[1074],E,66,[[["self"],[R[952]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[952]]],["bool"]]],[11,"eq",E,E,67,[[[R[949]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[949]],["self"]],["bool"]]],[11,"eq",R[994],E,82,[[["self"],[R[977]]],["bool"]]],[11,"eq",E,E,84,[[[R[992]],["self"]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[989]]],["bool"]]],[11,"eq",E,E,75,[[[R[991]],["self"]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[502]]],["bool"]]],[11,"eq",E,E,79,[[["self"]],["bool"]]],[11,"eq",E,E,80,[[["self"]],["bool"]]],[11,"eq",E,E,78,[[["self"]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[1116]]],["bool"]]],[11,"eq",E,E,87,[[[R[976]],["self"]],["bool"]]],[11,"eq",E,E,95,[[[R[979]],["self"]],["bool"]]],[11,"ne",E,E,95,[[[R[979]],["self"]],["bool"]]],[11,"eq",E,E,96,[[[R[980]],["self"]],["bool"]]],[11,"ne",E,E,96,[[[R[980]],["self"]],["bool"]]],[11,"eq",E,E,97,[[["self"]],["bool"]]],[11,"eq",E,E,98,[[["self"]],["bool"]]],[11,"eq",E,E,99,[[["self"]],["bool"]]],[11,"eq",E,E,90,[[["socklevel"],["self"]],["bool"]]],[11,"eq",E,E,91,[[[R[985]],["self"]],["bool"]]],[11,"eq",R[1076],E,104,[[["sflag"],["self"]],["bool"]]],[11,"ne",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"eq",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"ne",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"eq",R[1077],E,106,[[["self"],["fsflags"]],["bool"]]],[11,"ne",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"eq",R[1079],E,110,[[["self"],[R[1109]]],["bool"]]],[11,"eq",E,E,111,[[["setarg"],["self"]],["bool"]]],[11,"eq",E,E,112,[[["flusharg"],["self"]],["bool"]]],[11,"eq",E,E,113,[[["flowarg"],["self"]],["bool"]]],[11,"eq",E,E,114,[[[R[1114]],["self"]],["bool"]]],[11,"eq",E,E,115,[[["self"],[R[1020]]],["bool"]]],[11,"ne",E,E,115,[[["self"],[R[1020]]],["bool"]]],[11,"eq",E,E,116,[[[R[1021]],["self"]],["bool"]]],[11,"ne",E,E,116,[[[R[1021]],["self"]],["bool"]]],[11,"eq",E,E,117,[[[R[1023]],["self"]],["bool"]]],[11,"ne",E,E,117,[[[R[1023]],["self"]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[1024]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[1024]]],["bool"]]],[11,"eq",R[1080],E,120,[[[R[500]],["self"]],["bool"]]],[11,"eq",E,E,121,[[["self"],["timeval"]],["bool"]]],[11,"eq",R[1083],E,126,[[["self"],[R[1029]]],["bool"]]],[11,"ne",E,E,126,[[["self"],[R[1029]]],["bool"]]],[11,"eq",E,E,125,[[["self"],[R[1030]]],["bool"]]],[11,"ne",E,E,125,[[["self"],[R[1030]]],["bool"]]],[11,"eq",R[1084],E,128,[[[R[1041]],["self"]],["bool"]]],[11,"ne",E,E,128,[[[R[1041]],["self"]],["bool"]]],[11,"eq",E,E,129,[[["self"],[R[1043]]],["bool"]]],[11,"ne",E,E,129,[[["self"],[R[1043]]],["bool"]]],[11,"eq",E,E,181,[[[R[1044]],["self"]],["bool"]]],[11,"ne",E,E,181,[[[R[1044]],["self"]],["bool"]]],[11,"eq",R[1045],E,137,[[["uid"],["self"]],["bool"]]],[11,"ne",E,E,137,[[["uid"],["self"]],["bool"]]],[11,"eq",E,E,138,[[["gid"],["self"]],["bool"]]],[11,"ne",E,E,138,[[["gid"],["self"]],["bool"]]],[11,"eq",E,E,139,[[["pid"],["self"]],["bool"]]],[11,"ne",E,E,139,[[["pid"],["self"]],["bool"]]],[11,"eq",E,E,135,[[["self"],[R[1057]]],["bool"]]],[11,"eq",E,E,136,[[[R[1117]],["self"]],["bool"]]],[11,"eq",E,E,140,[[["self"],[R[1058]]],["bool"]]],[11,"ne",E,E,140,[[["self"],[R[1058]]],["bool"]]],[11,"eq","nix",E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,R[61],R[1098],E,8,[[["self"],[R[627]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,8,[[["self"],[R[627]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[627]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[627]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[627]]],["bool"]]],[11,R[61],E,E,9,[[["oflag"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,9,[[["oflag"],["self"]],["bool"]]],[11,"le",E,E,9,[[["oflag"],["self"]],["bool"]]],[11,"gt",E,E,9,[[["oflag"],["self"]],["bool"]]],[11,"ge",E,E,9,[[["oflag"],["self"]],["bool"]]],[11,R[61],E,E,10,[[[R[659]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,10,[[[R[659]],["self"]],["bool"]]],[11,"le",E,E,10,[[[R[659]],["self"]],["bool"]]],[11,"gt",E,E,10,[[[R[659]],["self"]],["bool"]]],[11,"ge",E,E,10,[[[R[659]],["self"]],["bool"]]],[11,R[61],E,E,11,[[["self"],["fdflag"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,R[61],E,E,12,[[[R[622]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,12,[[[R[622]],["self"]],["bool"]]],[11,"le",E,E,12,[[[R[622]],["self"]],["bool"]]],[11,"gt",E,E,12,[[[R[622]],["self"]],["bool"]]],[11,"ge",E,E,12,[[[R[622]],["self"]],["bool"]]],[11,R[61],E,E,13,[[["self"],[R[671]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,13,[[["self"],[R[671]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[671]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[671]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[671]]],["bool"]]],[11,R[61],R[1102],E,15,[[["self"],[R[676]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,15,[[["self"],[R[676]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[676]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[676]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[676]]],["bool"]]],[11,R[61],E,E,16,[[["self"],[R[677]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,16,[[["self"],[R[677]]],["bool"]]],[11,"le",E,E,16,[[["self"],[R[677]]],["bool"]]],[11,"gt",E,E,16,[[["self"],[R[677]]],["bool"]]],[11,"ge",E,E,16,[[["self"],[R[677]]],["bool"]]],[11,R[61],R[1099],E,17,[[["self"],[R[701]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,17,[[["self"],[R[701]]],["bool"]]],[11,"le",E,E,17,[[["self"],[R[701]]],["bool"]]],[11,"gt",E,E,17,[[["self"],[R[701]]],["bool"]]],[11,"ge",E,E,17,[[["self"],[R[701]]],["bool"]]],[11,R[61],E,E,18,[[[R[705]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,18,[[[R[705]],["self"]],["bool"]]],[11,"le",E,E,18,[[[R[705]],["self"]],["bool"]]],[11,"gt",E,E,18,[[[R[705]],["self"]],["bool"]]],[11,"ge",E,E,18,[[[R[705]],["self"]],["bool"]]],[11,R[61],R[1063],E,19,[[["self"],[R[712]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,19,[[["self"],[R[712]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[712]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[712]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[712]]],["bool"]]],[11,R[61],E,E,20,[[["self"],["fdflag"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,R[61],R[1064],E,22,[[["self"],[R[732]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,22,[[["self"],[R[732]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[732]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[732]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[732]]],["bool"]]],[11,R[61],R[1103],E,24,[[["self"],[R[733]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,24,[[["self"],[R[733]]],["bool"]]],[11,"le",E,E,24,[[["self"],[R[733]]],["bool"]]],[11,"gt",E,E,24,[[["self"],[R[733]]],["bool"]]],[11,"ge",E,E,24,[[["self"],[R[733]]],["bool"]]],[11,R[61],R[1100],E,28,[[["self"],[R[749]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,28,[[["self"],[R[749]]],["bool"]]],[11,"le",E,E,28,[[["self"],[R[749]]],["bool"]]],[11,"gt",E,E,28,[[["self"],[R[749]]],["bool"]]],[11,"ge",E,E,28,[[["self"],[R[749]]],["bool"]]],[11,R[61],R[1065],E,31,[[["self"],[R[1104]]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,32,[[["self"],[R[775]]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,33,[[["self"],["liomode"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],R[1066],E,38,[[[R[791]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,38,[[[R[791]],["self"]],["bool"]]],[11,"le",E,E,38,[[[R[791]],["self"]],["bool"]]],[11,"gt",E,E,38,[[[R[791]],["self"]],["bool"]]],[11,"ge",E,E,38,[[[R[791]],["self"]],["bool"]]],[11,R[61],E,E,39,[[[R[793]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,39,[[[R[793]],["self"]],["bool"]]],[11,"le",E,E,39,[[[R[793]],["self"]],["bool"]]],[11,"gt",E,E,39,[[[R[793]],["self"]],["bool"]]],[11,"ge",E,E,39,[[[R[793]],["self"]],["bool"]]],[11,R[61],R[1067],E,41,[[[R[798]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,41,[[[R[798]],["self"]],["bool"]]],[11,"le",E,E,41,[[[R[798]],["self"]],["bool"]]],[11,"gt",E,E,41,[[[R[798]],["self"]],["bool"]]],[11,"ge",E,E,41,[[[R[798]],["self"]],["bool"]]],[11,R[61],R[1068],E,42,[[["self"],[R[801]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,42,[[["self"],[R[801]]],["bool"]]],[11,"le",E,E,42,[[["self"],[R[801]]],["bool"]]],[11,"gt",E,E,42,[[["self"],[R[801]]],["bool"]]],[11,"ge",E,E,42,[[["self"],[R[801]]],["bool"]]],[11,R[61],R[1069],E,44,[[[R[820]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,44,[[[R[820]],["self"]],["bool"]]],[11,"le",E,E,44,[[[R[820]],["self"]],["bool"]]],[11,"gt",E,E,44,[[[R[820]],["self"]],["bool"]]],[11,"ge",E,E,44,[[[R[820]],["self"]],["bool"]]],[11,R[61],E,E,45,[[["self"],[R[843]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,45,[[["self"],[R[843]]],["bool"]]],[11,"le",E,E,45,[[["self"],[R[843]]],["bool"]]],[11,"gt",E,E,45,[[["self"],[R[843]]],["bool"]]],[11,"ge",E,E,45,[[["self"],[R[843]]],["bool"]]],[11,R[61],E,E,43,[[["self"],[R[1112]]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,46,[[["self"],[R[701]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,46,[[["self"],[R[701]]],["bool"]]],[11,"le",E,E,46,[[["self"],[R[701]]],["bool"]]],[11,"gt",E,E,46,[[["self"],[R[701]]],["bool"]]],[11,"ge",E,E,46,[[["self"],[R[701]]],["bool"]]],[11,R[61],E,E,47,[[[R[847]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,47,[[[R[847]],["self"]],["bool"]]],[11,"le",E,E,47,[[[R[847]],["self"]],["bool"]]],[11,"gt",E,E,47,[[[R[847]],["self"]],["bool"]]],[11,"ge",E,E,47,[[[R[847]],["self"]],["bool"]]],[11,R[61],R[1070],E,48,[[["request"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,49,[[["event"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,50,[[[R[895]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,50,[[[R[895]],["self"]],["bool"]]],[11,"le",E,E,50,[[[R[895]],["self"]],["bool"]]],[11,"gt",E,E,50,[[[R[895]],["self"]],["bool"]]],[11,"ge",E,E,50,[[[R[895]],["self"]],["bool"]]],[11,R[61],R[1071],E,51,[[["self"],[R[899]]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,52,[[["self"],["quotafmt"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,53,[[["self"],[R[909]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,53,[[["self"],[R[909]]],["bool"]]],[11,"le",E,E,53,[[["self"],[R[909]]],["bool"]]],[11,"gt",E,E,53,[[["self"],[R[909]]],["bool"]]],[11,"ge",E,E,53,[[["self"],[R[909]]],["bool"]]],[11,R[61],R[1072],E,55,[[[R[1113]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],R[923],E,57,[[["signal"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,62,[[[R[938]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,62,[[[R[938]],["self"]],["bool"]]],[11,"le",E,E,62,[[[R[938]],["self"]],["bool"]]],[11,"gt",E,E,62,[[[R[938]],["self"]],["bool"]]],[11,"ge",E,E,62,[[[R[938]],["self"]],["bool"]]],[11,R[61],E,E,58,[[["self"],[R[929]]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],R[1074],E,66,[[["self"],[R[952]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,66,[[["self"],[R[952]]],["bool"]]],[11,"le",E,E,66,[[["self"],[R[952]]],["bool"]]],[11,"gt",E,E,66,[[["self"],[R[952]]],["bool"]]],[11,"ge",E,E,66,[[["self"],[R[952]]],["bool"]]],[11,R[61],R[994],E,95,[[[R[979]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,95,[[[R[979]],["self"]],["bool"]]],[11,"le",E,E,95,[[[R[979]],["self"]],["bool"]]],[11,"gt",E,E,95,[[[R[979]],["self"]],["bool"]]],[11,"ge",E,E,95,[[[R[979]],["self"]],["bool"]]],[11,R[61],E,E,96,[[[R[980]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,96,[[[R[980]],["self"]],["bool"]]],[11,"le",E,E,96,[[[R[980]],["self"]],["bool"]]],[11,"gt",E,E,96,[[[R[980]],["self"]],["bool"]]],[11,"ge",E,E,96,[[[R[980]],["self"]],["bool"]]],[11,R[61],R[1076],E,104,[[["sflag"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"le",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"gt",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"ge",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,R[61],E,E,105,[[["self"],["mode"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"le",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"gt",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"ge",E,E,105,[[["self"],["mode"]],["bool"]]],[11,R[61],R[1077],E,106,[[["self"],["fsflags"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"le",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"gt",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"ge",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,R[61],R[1079],E,110,[[["self"],[R[1109]]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,111,[[["setarg"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,112,[[["flusharg"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,113,[[["flowarg"],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,114,[[[R[1114]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,115,[[["self"],[R[1020]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,115,[[["self"],[R[1020]]],["bool"]]],[11,"le",E,E,115,[[["self"],[R[1020]]],["bool"]]],[11,"gt",E,E,115,[[["self"],[R[1020]]],["bool"]]],[11,"ge",E,E,115,[[["self"],[R[1020]]],["bool"]]],[11,R[61],E,E,116,[[[R[1021]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,116,[[[R[1021]],["self"]],["bool"]]],[11,"le",E,E,116,[[[R[1021]],["self"]],["bool"]]],[11,"gt",E,E,116,[[[R[1021]],["self"]],["bool"]]],[11,"ge",E,E,116,[[[R[1021]],["self"]],["bool"]]],[11,R[61],E,E,117,[[[R[1023]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,117,[[[R[1023]],["self"]],["bool"]]],[11,"le",E,E,117,[[[R[1023]],["self"]],["bool"]]],[11,"gt",E,E,117,[[[R[1023]],["self"]],["bool"]]],[11,"ge",E,E,117,[[[R[1023]],["self"]],["bool"]]],[11,R[61],E,E,118,[[["self"],[R[1024]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,118,[[["self"],[R[1024]]],["bool"]]],[11,"le",E,E,118,[[["self"],[R[1024]]],["bool"]]],[11,"gt",E,E,118,[[["self"],[R[1024]]],["bool"]]],[11,"ge",E,E,118,[[["self"],[R[1024]]],["bool"]]],[11,R[61],R[1080],E,120,[[[R[500]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,121,[[["self"],["timeval"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],R[1083],E,126,[[["self"],[R[1029]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,126,[[["self"],[R[1029]]],["bool"]]],[11,"le",E,E,126,[[["self"],[R[1029]]],["bool"]]],[11,"gt",E,E,126,[[["self"],[R[1029]]],["bool"]]],[11,"ge",E,E,126,[[["self"],[R[1029]]],["bool"]]],[11,R[61],R[1084],E,128,[[[R[1041]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,128,[[[R[1041]],["self"]],["bool"]]],[11,"le",E,E,128,[[[R[1041]],["self"]],["bool"]]],[11,"gt",E,E,128,[[[R[1041]],["self"]],["bool"]]],[11,"ge",E,E,128,[[[R[1041]],["self"]],["bool"]]],[11,R[61],E,E,129,[[["self"],[R[1043]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,129,[[["self"],[R[1043]]],["bool"]]],[11,"le",E,E,129,[[["self"],[R[1043]]],["bool"]]],[11,"gt",E,E,129,[[["self"],[R[1043]]],["bool"]]],[11,"ge",E,E,129,[[["self"],[R[1043]]],["bool"]]],[11,R[61],E,E,181,[[[R[1044]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,181,[[[R[1044]],["self"]],["bool"]]],[11,"le",E,E,181,[[[R[1044]],["self"]],["bool"]]],[11,"gt",E,E,181,[[[R[1044]],["self"]],["bool"]]],[11,"ge",E,E,181,[[[R[1044]],["self"]],["bool"]]],[11,R[61],R[1045],E,140,[[["self"],[R[1058]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,140,[[["self"],[R[1058]]],["bool"]]],[11,"le",E,E,140,[[["self"],[R[1058]]],["bool"]]],[11,"gt",E,E,140,[[["self"],[R[1058]]],["bool"]]],[11,"ge",E,E,140,[[["self"],[R[1058]]],["bool"]]],[11,"fmt",R[1101],E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[923],E,57,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[994],E,84,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,85,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,76,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,77,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,75,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,83,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,79,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,80,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,78,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1080],E,120,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,121,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1045],E,137,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,138,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,139,[[["self"],[R[38]]],[R[15]]]],[11,"fmt","nix",E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1118],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,142,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1101],E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1098],E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,10,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,11,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,12,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,13,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1062],E,14,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,143,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1102],E,15,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,16,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1099],E,17,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,18,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1063],E,19,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,20,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1064],E,22,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1103],E,23,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,24,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1132],E,27,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,144,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1100],E,28,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1065],E,31,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,32,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,33,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,34,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,35,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,36,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,30,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1066],E,38,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,37,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,39,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1067],E,41,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1068],E,42,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1069],E,44,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,45,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,43,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,46,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,47,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1070],E,48,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,49,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,50,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1071],E,51,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,52,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,53,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1072],E,55,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[923],E,57,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,62,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,58,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,59,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,60,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,61,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1074],E,66,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,67,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[994],E,82,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,84,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,85,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,76,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,77,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,75,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,83,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,79,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,80,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,78,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1075],E,147,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,148,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,149,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,150,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,151,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,152,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,153,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,154,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,155,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,156,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,157,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,158,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,159,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,160,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,161,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,162,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,163,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,164,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,165,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,166,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,167,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,168,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,169,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,170,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,171,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,172,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,173,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,174,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,175,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,176,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,177,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,178,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,179,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,180,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[994],E,86,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,87,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,95,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,96,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,97,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,98,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,99,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,90,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,91,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1076],E,104,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,105,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,102,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,103,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1077],E,106,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1079],E,110,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,111,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,112,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,113,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,114,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,115,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,116,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,117,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,118,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1080],E,120,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,121,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1083],E,126,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,125,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1084],E,128,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,129,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,130,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,181,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,127,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1045],E,137,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,138,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,139,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,132,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,133,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,134,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,135,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,136,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,140,[[[R[38]],["self"]],[R[15]]]],[11,"fmt","nix",E,0,[[["self"],[R[38]]],[R[15]]]],[11,"div",R[1080],E,120,[[["i32"]],[R[500]]]],[11,"div",E,E,121,[[["i32"]],["timeval"]]],[11,"sub",R[1098],R[1119],8,[[[R[627]]],[R[627]]]],[11,"sub",E,R[1119],9,[[["oflag"]],["oflag"]]],[11,"sub",E,R[1119],10,[[[R[659]]],[R[659]]]],[11,"sub",E,R[1119],11,[[["fdflag"]],["fdflag"]]],[11,"sub",E,R[1119],12,[[[R[622]]],[R[622]]]],[11,"sub",E,R[1119],13,[[[R[671]]],[R[671]]]],[11,"sub",R[1102],R[1119],15,[[[R[676]]],[R[676]]]],[11,"sub",E,R[1119],16,[[[R[677]]],[R[677]]]],[11,"sub",R[1099],R[1119],17,[[[R[701]]],[R[701]]]],[11,"sub",E,R[1119],18,[[[R[705]]],[R[705]]]],[11,"sub",R[1063],R[1119],19,[[[R[712]]],[R[712]]]],[11,"sub",E,R[1119],20,[[["fdflag"]],["fdflag"]]],[11,"sub",R[1064],R[1119],22,[[[R[732]]],[R[732]]]],[11,"sub",R[1103],R[1119],24,[[[R[733]]],[R[733]]]],[11,"sub",R[1100],R[1119],28,[[[R[749]]],[R[749]]]],[11,"sub",R[1066],R[1119],38,[[[R[791]]],[R[791]]]],[11,"sub",E,R[1119],39,[[[R[793]]],[R[793]]]],[11,"sub",R[1067],R[1119],41,[[[R[798]]],[R[798]]]],[11,"sub",R[1068],R[1119],42,[[[R[801]]],[R[801]]]],[11,"sub",R[1069],R[1119],44,[[[R[820]]],[R[820]]]],[11,"sub",E,R[1119],45,[[[R[843]]],[R[843]]]],[11,"sub",E,R[1119],46,[[[R[701]]],[R[701]]]],[11,"sub",E,R[1119],47,[[[R[847]]],[R[847]]]],[11,"sub",R[1070],R[1119],50,[[[R[895]]],[R[895]]]],[11,"sub",R[1071],R[1119],53,[[[R[909]]],[R[909]]]],[11,"sub",R[923],R[1119],62,[[[R[938]]],[R[938]]]],[11,"sub",R[1074],R[1119],66,[[[R[952]]],[R[952]]]],[11,"sub",R[994],R[1119],95,[[[R[979]]],[R[979]]]],[11,"sub",E,R[1119],96,[[[R[980]]],[R[980]]]],[11,"sub",R[1076],R[1119],104,[[["sflag"]],["sflag"]]],[11,"sub",E,R[1119],105,[[["mode"]],["mode"]]],[11,"sub",R[1077],R[1119],106,[[["fsflags"]],["fsflags"]]],[11,"sub",R[1079],R[1119],115,[[[R[1020]]],[R[1020]]]],[11,"sub",E,R[1119],116,[[[R[1021]]],[R[1021]]]],[11,"sub",E,R[1119],117,[[[R[1023]]],[R[1023]]]],[11,"sub",E,R[1119],118,[[[R[1024]]],[R[1024]]]],[11,"sub",R[1080],E,120,[[[R[500]]],[R[500]]]],[11,"sub",E,E,121,[[["timeval"]],["timeval"]]],[11,"sub",R[1083],R[1119],126,[[[R[1029]]],[R[1029]]]],[11,"sub",R[1084],R[1119],128,[[[R[1041]]],[R[1041]]]],[11,"sub",E,R[1119],129,[[[R[1043]]],[R[1043]]]],[11,"sub",R[1045],R[1119],140,[[[R[1058]]],[R[1058]]]],[11,R[1355],R[923],E,57,[[["str"]],[[R[15],["signal"]],["signal"]]]],[11,"add",R[1080],E,120,[[[R[500]]],[R[500]]]],[11,"add",E,E,121,[[["timeval"]],["timeval"]]],[11,"mul",E,E,120,[[["i32"]],[R[500]]]],[11,"mul",E,E,121,[[["i32"]],["timeval"]]],[11,"neg",E,E,120,[[],[R[500]]]],[11,"neg",E,E,121,[[],["timeval"]]],[11,R[1121],R[1098],R[1120],8,[[[R[627]],["self"]]]],[11,R[1121],E,R[1120],9,[[["self"],["oflag"]]]],[11,R[1121],E,R[1120],10,[[["self"],[R[659]]]]],[11,R[1121],E,R[1120],11,[[["self"],["fdflag"]]]],[11,R[1121],E,R[1120],12,[[["self"],[R[622]]]]],[11,R[1121],E,R[1120],13,[[["self"],[R[671]]]]],[11,R[1121],R[1102],R[1120],15,[[["self"],[R[676]]]]],[11,R[1121],E,R[1120],16,[[["self"],[R[677]]]]],[11,R[1121],R[1099],R[1120],17,[[[R[701]],["self"]]]],[11,R[1121],E,R[1120],18,[[[R[705]],["self"]]]],[11,R[1121],R[1063],R[1120],19,[[["self"],[R[712]]]]],[11,R[1121],E,R[1120],20,[[["fdflag"],["self"]]]],[11,R[1121],R[1064],R[1120],22,[[["self"],[R[732]]]]],[11,R[1121],R[1103],R[1120],24,[[["self"],[R[733]]]]],[11,R[1121],R[1100],R[1120],28,[[["self"],[R[749]]]]],[11,R[1121],R[1066],R[1120],38,[[[R[791]],["self"]]]],[11,R[1121],E,R[1120],39,[[["self"],[R[793]]]]],[11,R[1121],R[1067],R[1120],41,[[["self"],[R[798]]]]],[11,R[1121],R[1068],R[1120],42,[[["self"],[R[801]]]]],[11,R[1121],R[1069],R[1120],44,[[["self"],[R[820]]]]],[11,R[1121],E,R[1120],45,[[["self"],[R[843]]]]],[11,R[1121],E,R[1120],46,[[["self"],[R[701]]]]],[11,R[1121],E,R[1120],47,[[["self"],[R[847]]]]],[11,R[1121],R[1070],R[1120],50,[[["self"],[R[895]]]]],[11,R[1121],R[1071],R[1120],53,[[["self"],[R[909]]]]],[11,R[1121],R[923],R[1120],62,[[["self"],[R[938]]]]],[11,R[1121],R[1074],R[1120],66,[[[R[952]],["self"]]]],[11,R[1121],R[994],R[1120],95,[[["self"],[R[979]]]]],[11,R[1121],E,R[1120],96,[[["self"],[R[980]]]]],[11,R[1121],R[1076],R[1120],104,[[["self"],["sflag"]]]],[11,R[1121],E,R[1120],105,[[["self"],["mode"]]]],[11,R[1121],R[1077],R[1120],106,[[["self"],["fsflags"]]]],[11,R[1121],R[1079],R[1120],115,[[["self"],[R[1020]]]]],[11,R[1121],E,R[1120],116,[[[R[1021]],["self"]]]],[11,R[1121],E,R[1120],117,[[[R[1023]],["self"]]]],[11,R[1121],E,R[1120],118,[[[R[1024]],["self"]]]],[11,R[1121],R[1083],R[1120],126,[[["self"],[R[1029]]]]],[11,R[1121],R[1084],R[1120],128,[[["self"],[R[1041]]]]],[11,R[1121],E,R[1120],129,[[[R[1043]],["self"]]]],[11,R[1121],R[1045],R[1120],140,[[["self"],[R[1058]]]]],[11,"not",R[1098],R[1122],8,[[],[R[627]]]],[11,"not",E,R[1122],9,[[],["oflag"]]],[11,"not",E,R[1122],10,[[],[R[659]]]],[11,"not",E,R[1122],11,[[],["fdflag"]]],[11,"not",E,R[1122],12,[[],[R[622]]]],[11,"not",E,R[1122],13,[[],[R[671]]]],[11,"not",R[1102],R[1122],15,[[],[R[676]]]],[11,"not",E,R[1122],16,[[],[R[677]]]],[11,"not",R[1099],R[1122],17,[[],[R[701]]]],[11,"not",E,R[1122],18,[[],[R[705]]]],[11,"not",R[1063],R[1122],19,[[],[R[712]]]],[11,"not",E,R[1122],20,[[],["fdflag"]]],[11,"not",R[1064],R[1122],22,[[],[R[732]]]],[11,"not",R[1103],R[1122],24,[[],[R[733]]]],[11,"not",R[1100],R[1122],28,[[],[R[749]]]],[11,"not",R[1066],R[1122],38,[[],[R[791]]]],[11,"not",E,R[1122],39,[[],[R[793]]]],[11,"not",R[1067],R[1122],41,[[],[R[798]]]],[11,"not",R[1068],R[1122],42,[[],[R[801]]]],[11,"not",R[1069],R[1122],44,[[],[R[820]]]],[11,"not",E,R[1122],45,[[],[R[843]]]],[11,"not",E,R[1122],46,[[],[R[701]]]],[11,"not",E,R[1122],47,[[],[R[847]]]],[11,"not",R[1070],R[1122],50,[[],[R[895]]]],[11,"not",R[1071],R[1122],53,[[],[R[909]]]],[11,"not",R[923],R[1122],62,[[],[R[938]]]],[11,"not",R[1074],R[1122],66,[[],[R[952]]]],[11,"not",R[994],R[1122],95,[[],[R[979]]]],[11,"not",E,R[1122],96,[[],[R[980]]]],[11,"not",R[1076],R[1122],104,[[],["sflag"]]],[11,"not",E,R[1122],105,[[],["mode"]]],[11,"not",R[1077],R[1122],106,[[],["fsflags"]]],[11,"not",R[1079],R[1122],115,[[],[R[1020]]]],[11,"not",E,R[1122],116,[[],[R[1021]]]],[11,"not",E,R[1122],117,[[],[R[1023]]]],[11,"not",E,R[1122],118,[[],[R[1024]]]],[11,"not",R[1083],R[1122],126,[[],[R[1029]]]],[11,"not",R[1084],R[1122],128,[[],[R[1041]]]],[11,"not",E,R[1122],129,[[],[R[1043]]]],[11,"not",R[1045],R[1122],140,[[],[R[1058]]]],[11,"bitand",R[1098],R[1123],8,[[[R[627]]],[R[627]]]],[11,"bitand",E,R[1123],9,[[["oflag"]],["oflag"]]],[11,"bitand",E,R[1123],10,[[[R[659]]],[R[659]]]],[11,"bitand",E,R[1123],11,[[["fdflag"]],["fdflag"]]],[11,"bitand",E,R[1123],12,[[[R[622]]],[R[622]]]],[11,"bitand",E,R[1123],13,[[[R[671]]],[R[671]]]],[11,"bitand",R[1102],R[1123],15,[[[R[676]]],[R[676]]]],[11,"bitand",E,R[1123],16,[[[R[677]]],[R[677]]]],[11,"bitand",R[1099],R[1123],17,[[[R[701]]],[R[701]]]],[11,"bitand",E,R[1123],18,[[[R[705]]],[R[705]]]],[11,"bitand",R[1063],R[1123],19,[[[R[712]]],[R[712]]]],[11,"bitand",E,R[1123],20,[[["fdflag"]],["fdflag"]]],[11,"bitand",R[1064],R[1123],22,[[[R[732]]],[R[732]]]],[11,"bitand",R[1103],R[1123],24,[[[R[733]]],[R[733]]]],[11,"bitand",R[1100],R[1123],28,[[[R[749]]],[R[749]]]],[11,"bitand",R[1066],R[1123],38,[[[R[791]]],[R[791]]]],[11,"bitand",E,R[1123],39,[[[R[793]]],[R[793]]]],[11,"bitand",R[1067],R[1123],41,[[[R[798]]],[R[798]]]],[11,"bitand",R[1068],R[1123],42,[[[R[801]]],[R[801]]]],[11,"bitand",R[1069],R[1123],44,[[[R[820]]],[R[820]]]],[11,"bitand",E,R[1123],45,[[[R[843]]],[R[843]]]],[11,"bitand",E,R[1123],46,[[[R[701]]],[R[701]]]],[11,"bitand",E,R[1123],47,[[[R[847]]],[R[847]]]],[11,"bitand",R[1070],R[1123],50,[[[R[895]]],[R[895]]]],[11,"bitand",R[1071],R[1123],53,[[[R[909]]],[R[909]]]],[11,"bitand",R[923],R[1123],62,[[[R[938]]],[R[938]]]],[11,"bitand",R[1074],R[1123],66,[[[R[952]]],[R[952]]]],[11,"bitand",R[994],R[1123],95,[[[R[979]]],[R[979]]]],[11,"bitand",E,R[1123],96,[[[R[980]]],[R[980]]]],[11,"bitand",R[1076],R[1123],104,[[["sflag"]],["sflag"]]],[11,"bitand",E,R[1123],105,[[["mode"]],["mode"]]],[11,"bitand",R[1077],R[1123],106,[[["fsflags"]],["fsflags"]]],[11,"bitand",R[1079],R[1123],115,[[[R[1020]]],[R[1020]]]],[11,"bitand",E,R[1123],116,[[[R[1021]]],[R[1021]]]],[11,"bitand",E,R[1123],117,[[[R[1023]]],[R[1023]]]],[11,"bitand",E,R[1123],118,[[[R[1024]]],[R[1024]]]],[11,"bitand",R[1083],R[1123],126,[[[R[1029]]],[R[1029]]]],[11,"bitand",R[1084],R[1123],128,[[[R[1041]]],[R[1041]]]],[11,"bitand",E,R[1123],129,[[[R[1043]]],[R[1043]]]],[11,"bitand",R[1045],R[1123],140,[[[R[1058]]],[R[1058]]]],[11,"bitor",R[1098],R[1124],8,[[[R[627]]],[R[627]]]],[11,"bitor",E,R[1124],9,[[["oflag"]],["oflag"]]],[11,"bitor",E,R[1124],10,[[[R[659]]],[R[659]]]],[11,"bitor",E,R[1124],11,[[["fdflag"]],["fdflag"]]],[11,"bitor",E,R[1124],12,[[[R[622]]],[R[622]]]],[11,"bitor",E,R[1124],13,[[[R[671]]],[R[671]]]],[11,"bitor",R[1102],R[1124],15,[[[R[676]]],[R[676]]]],[11,"bitor",E,R[1124],16,[[[R[677]]],[R[677]]]],[11,"bitor",R[1099],R[1124],17,[[[R[701]]],[R[701]]]],[11,"bitor",E,R[1124],18,[[[R[705]]],[R[705]]]],[11,"bitor",R[1063],R[1124],19,[[[R[712]]],[R[712]]]],[11,"bitor",E,R[1124],20,[[["fdflag"]],["fdflag"]]],[11,"bitor",R[1064],R[1124],22,[[[R[732]]],[R[732]]]],[11,"bitor",R[1103],R[1124],24,[[[R[733]]],[R[733]]]],[11,"bitor",R[1100],R[1124],28,[[[R[749]]],[R[749]]]],[11,"bitor",R[1066],R[1124],38,[[[R[791]]],[R[791]]]],[11,"bitor",E,R[1124],39,[[[R[793]]],[R[793]]]],[11,"bitor",R[1067],R[1124],41,[[[R[798]]],[R[798]]]],[11,"bitor",R[1068],R[1124],42,[[[R[801]]],[R[801]]]],[11,"bitor",R[1069],R[1124],44,[[[R[820]]],[R[820]]]],[11,"bitor",E,R[1124],45,[[[R[843]]],[R[843]]]],[11,"bitor",E,R[1124],46,[[[R[701]]],[R[701]]]],[11,"bitor",E,R[1124],47,[[[R[847]]],[R[847]]]],[11,"bitor",R[1070],R[1124],50,[[[R[895]]],[R[895]]]],[11,"bitor",R[1071],R[1124],53,[[[R[909]]],[R[909]]]],[11,"bitor",R[923],R[1124],62,[[[R[938]]],[R[938]]]],[11,"bitor",R[1074],R[1124],66,[[[R[952]]],[R[952]]]],[11,"bitor",R[994],R[1124],95,[[[R[979]]],[R[979]]]],[11,"bitor",E,R[1124],96,[[[R[980]]],[R[980]]]],[11,"bitor",R[1076],R[1124],104,[[["sflag"]],["sflag"]]],[11,"bitor",E,R[1124],105,[[["mode"]],["mode"]]],[11,"bitor",R[1077],R[1124],106,[[["fsflags"]],["fsflags"]]],[11,"bitor",R[1079],R[1124],115,[[[R[1020]]],[R[1020]]]],[11,"bitor",E,R[1124],116,[[[R[1021]]],[R[1021]]]],[11,"bitor",E,R[1124],117,[[[R[1023]]],[R[1023]]]],[11,"bitor",E,R[1124],118,[[[R[1024]]],[R[1024]]]],[11,"bitor",R[1083],R[1124],126,[[[R[1029]]],[R[1029]]]],[11,"bitor",R[1084],R[1124],128,[[[R[1041]]],[R[1041]]]],[11,"bitor",E,R[1124],129,[[[R[1043]]],[R[1043]]]],[11,"bitor",R[1045],R[1124],140,[[[R[1058]]],[R[1058]]]],[11,"bitxor",R[1098],R[1125],8,[[[R[627]]],[R[627]]]],[11,"bitxor",E,R[1125],9,[[["oflag"]],["oflag"]]],[11,"bitxor",E,R[1125],10,[[[R[659]]],[R[659]]]],[11,"bitxor",E,R[1125],11,[[["fdflag"]],["fdflag"]]],[11,"bitxor",E,R[1125],12,[[[R[622]]],[R[622]]]],[11,"bitxor",E,R[1125],13,[[[R[671]]],[R[671]]]],[11,"bitxor",R[1102],R[1125],15,[[[R[676]]],[R[676]]]],[11,"bitxor",E,R[1125],16,[[[R[677]]],[R[677]]]],[11,"bitxor",R[1099],R[1125],17,[[[R[701]]],[R[701]]]],[11,"bitxor",E,R[1125],18,[[[R[705]]],[R[705]]]],[11,"bitxor",R[1063],R[1125],19,[[[R[712]]],[R[712]]]],[11,"bitxor",E,R[1125],20,[[["fdflag"]],["fdflag"]]],[11,"bitxor",R[1064],R[1125],22,[[[R[732]]],[R[732]]]],[11,"bitxor",R[1103],R[1125],24,[[[R[733]]],[R[733]]]],[11,"bitxor",R[1100],R[1125],28,[[[R[749]]],[R[749]]]],[11,"bitxor",R[1066],R[1125],38,[[[R[791]]],[R[791]]]],[11,"bitxor",E,R[1125],39,[[[R[793]]],[R[793]]]],[11,"bitxor",R[1067],R[1125],41,[[[R[798]]],[R[798]]]],[11,"bitxor",R[1068],R[1125],42,[[[R[801]]],[R[801]]]],[11,"bitxor",R[1069],R[1125],44,[[[R[820]]],[R[820]]]],[11,"bitxor",E,R[1125],45,[[[R[843]]],[R[843]]]],[11,"bitxor",E,R[1125],46,[[[R[701]]],[R[701]]]],[11,"bitxor",E,R[1125],47,[[[R[847]]],[R[847]]]],[11,"bitxor",R[1070],R[1125],50,[[[R[895]]],[R[895]]]],[11,"bitxor",R[1071],R[1125],53,[[[R[909]]],[R[909]]]],[11,"bitxor",R[923],R[1125],62,[[[R[938]]],[R[938]]]],[11,"bitxor",R[1074],R[1125],66,[[[R[952]]],[R[952]]]],[11,"bitxor",R[994],R[1125],95,[[[R[979]]],[R[979]]]],[11,"bitxor",E,R[1125],96,[[[R[980]]],[R[980]]]],[11,"bitxor",R[1076],R[1125],104,[[["sflag"]],["sflag"]]],[11,"bitxor",E,R[1125],105,[[["mode"]],["mode"]]],[11,"bitxor",R[1077],R[1125],106,[[["fsflags"]],["fsflags"]]],[11,"bitxor",R[1079],R[1125],115,[[[R[1020]]],[R[1020]]]],[11,"bitxor",E,R[1125],116,[[[R[1021]]],[R[1021]]]],[11,"bitxor",E,R[1125],117,[[[R[1023]]],[R[1023]]]],[11,"bitxor",E,R[1125],118,[[[R[1024]]],[R[1024]]]],[11,"bitxor",R[1083],R[1125],126,[[[R[1029]]],[R[1029]]]],[11,"bitxor",R[1084],R[1125],128,[[[R[1041]]],[R[1041]]]],[11,"bitxor",E,R[1125],129,[[[R[1043]]],[R[1043]]]],[11,"bitxor",R[1045],R[1125],140,[[[R[1058]]],[R[1058]]]],[11,R[1126],R[1098],R[1127],8,[[[R[627]],["self"]]]],[11,R[1126],E,R[1127],9,[[["self"],["oflag"]]]],[11,R[1126],E,R[1127],10,[[["self"],[R[659]]]]],[11,R[1126],E,R[1127],11,[[["self"],["fdflag"]]]],[11,R[1126],E,R[1127],12,[[["self"],[R[622]]]]],[11,R[1126],E,R[1127],13,[[["self"],[R[671]]]]],[11,R[1126],R[1102],R[1127],15,[[["self"],[R[676]]]]],[11,R[1126],E,R[1127],16,[[["self"],[R[677]]]]],[11,R[1126],R[1099],R[1127],17,[[[R[701]],["self"]]]],[11,R[1126],E,R[1127],18,[[[R[705]],["self"]]]],[11,R[1126],R[1063],R[1127],19,[[["self"],[R[712]]]]],[11,R[1126],E,R[1127],20,[[["fdflag"],["self"]]]],[11,R[1126],R[1064],R[1127],22,[[["self"],[R[732]]]]],[11,R[1126],R[1103],R[1127],24,[[["self"],[R[733]]]]],[11,R[1126],R[1100],R[1127],28,[[["self"],[R[749]]]]],[11,R[1126],R[1066],R[1127],38,[[[R[791]],["self"]]]],[11,R[1126],E,R[1127],39,[[["self"],[R[793]]]]],[11,R[1126],R[1067],R[1127],41,[[["self"],[R[798]]]]],[11,R[1126],R[1068],R[1127],42,[[["self"],[R[801]]]]],[11,R[1126],R[1069],R[1127],44,[[["self"],[R[820]]]]],[11,R[1126],E,R[1127],45,[[["self"],[R[843]]]]],[11,R[1126],E,R[1127],46,[[["self"],[R[701]]]]],[11,R[1126],E,R[1127],47,[[["self"],[R[847]]]]],[11,R[1126],R[1070],R[1127],50,[[["self"],[R[895]]]]],[11,R[1126],R[1071],R[1127],53,[[["self"],[R[909]]]]],[11,R[1126],R[923],R[1127],62,[[["self"],[R[938]]]]],[11,R[1126],R[1074],R[1127],66,[[[R[952]],["self"]]]],[11,R[1126],R[994],R[1127],95,[[["self"],[R[979]]]]],[11,R[1126],E,R[1127],96,[[["self"],[R[980]]]]],[11,R[1126],R[1076],R[1127],104,[[["self"],["sflag"]]]],[11,R[1126],E,R[1127],105,[[["self"],["mode"]]]],[11,R[1126],R[1077],R[1127],106,[[["self"],["fsflags"]]]],[11,R[1126],R[1079],R[1127],115,[[["self"],[R[1020]]]]],[11,R[1126],E,R[1127],116,[[[R[1021]],["self"]]]],[11,R[1126],E,R[1127],117,[[[R[1023]],["self"]]]],[11,R[1126],E,R[1127],118,[[[R[1024]],["self"]]]],[11,R[1126],R[1083],R[1127],126,[[["self"],[R[1029]]]]],[11,R[1126],R[1084],R[1127],128,[[["self"],[R[1041]]]]],[11,R[1126],E,R[1127],129,[[[R[1043]],["self"]]]],[11,R[1126],R[1045],R[1127],140,[[["self"],[R[1058]]]]],[11,R[1128],R[1098],R[1129],8,[[[R[627]],["self"]]]],[11,R[1128],E,R[1129],9,[[["self"],["oflag"]]]],[11,R[1128],E,R[1129],10,[[["self"],[R[659]]]]],[11,R[1128],E,R[1129],11,[[["self"],["fdflag"]]]],[11,R[1128],E,R[1129],12,[[["self"],[R[622]]]]],[11,R[1128],E,R[1129],13,[[["self"],[R[671]]]]],[11,R[1128],R[1102],R[1129],15,[[["self"],[R[676]]]]],[11,R[1128],E,R[1129],16,[[["self"],[R[677]]]]],[11,R[1128],R[1099],R[1129],17,[[[R[701]],["self"]]]],[11,R[1128],E,R[1129],18,[[[R[705]],["self"]]]],[11,R[1128],R[1063],R[1129],19,[[["self"],[R[712]]]]],[11,R[1128],E,R[1129],20,[[["fdflag"],["self"]]]],[11,R[1128],R[1064],R[1129],22,[[["self"],[R[732]]]]],[11,R[1128],R[1103],R[1129],24,[[["self"],[R[733]]]]],[11,R[1128],R[1100],R[1129],28,[[["self"],[R[749]]]]],[11,R[1128],R[1066],R[1129],38,[[[R[791]],["self"]]]],[11,R[1128],E,R[1129],39,[[["self"],[R[793]]]]],[11,R[1128],R[1067],R[1129],41,[[["self"],[R[798]]]]],[11,R[1128],R[1068],R[1129],42,[[["self"],[R[801]]]]],[11,R[1128],R[1069],R[1129],44,[[["self"],[R[820]]]]],[11,R[1128],E,R[1129],45,[[["self"],[R[843]]]]],[11,R[1128],E,R[1129],46,[[["self"],[R[701]]]]],[11,R[1128],E,R[1129],47,[[["self"],[R[847]]]]],[11,R[1128],R[1070],R[1129],50,[[["self"],[R[895]]]]],[11,R[1128],R[1071],R[1129],53,[[["self"],[R[909]]]]],[11,R[1128],R[923],R[1129],62,[[["self"],[R[938]]]]],[11,R[1128],R[1074],R[1129],66,[[[R[952]],["self"]]]],[11,R[1128],R[994],R[1129],95,[[["self"],[R[979]]]]],[11,R[1128],E,R[1129],96,[[["self"],[R[980]]]]],[11,R[1128],R[1076],R[1129],104,[[["self"],["sflag"]]]],[11,R[1128],E,R[1129],105,[[["self"],["mode"]]]],[11,R[1128],R[1077],R[1129],106,[[["self"],["fsflags"]]]],[11,R[1128],R[1079],R[1129],115,[[["self"],[R[1020]]]]],[11,R[1128],E,R[1129],116,[[[R[1021]],["self"]]]],[11,R[1128],E,R[1129],117,[[[R[1023]],["self"]]]],[11,R[1128],E,R[1129],118,[[[R[1024]],["self"]]]],[11,R[1128],R[1083],R[1129],126,[[["self"],[R[1029]]]]],[11,R[1128],R[1084],R[1129],128,[[["self"],[R[1041]]]]],[11,R[1128],E,R[1129],129,[[[R[1043]],["self"]]]],[11,R[1128],R[1045],R[1129],140,[[["self"],[R[1058]]]]],[11,R[1130],R[1098],R[1131],8,[[[R[627]],["self"]]]],[11,R[1130],E,R[1131],9,[[["self"],["oflag"]]]],[11,R[1130],E,R[1131],10,[[["self"],[R[659]]]]],[11,R[1130],E,R[1131],11,[[["self"],["fdflag"]]]],[11,R[1130],E,R[1131],12,[[["self"],[R[622]]]]],[11,R[1130],E,R[1131],13,[[["self"],[R[671]]]]],[11,R[1130],R[1102],R[1131],15,[[["self"],[R[676]]]]],[11,R[1130],E,R[1131],16,[[["self"],[R[677]]]]],[11,R[1130],R[1099],R[1131],17,[[[R[701]],["self"]]]],[11,R[1130],E,R[1131],18,[[[R[705]],["self"]]]],[11,R[1130],R[1063],R[1131],19,[[["self"],[R[712]]]]],[11,R[1130],E,R[1131],20,[[["fdflag"],["self"]]]],[11,R[1130],R[1064],R[1131],22,[[["self"],[R[732]]]]],[11,R[1130],R[1103],R[1131],24,[[["self"],[R[733]]]]],[11,R[1130],R[1100],R[1131],28,[[["self"],[R[749]]]]],[11,R[1130],R[1066],R[1131],38,[[[R[791]],["self"]]]],[11,R[1130],E,R[1131],39,[[["self"],[R[793]]]]],[11,R[1130],R[1067],R[1131],41,[[["self"],[R[798]]]]],[11,R[1130],R[1068],R[1131],42,[[["self"],[R[801]]]]],[11,R[1130],R[1069],R[1131],44,[[["self"],[R[820]]]]],[11,R[1130],E,R[1131],45,[[["self"],[R[843]]]]],[11,R[1130],E,R[1131],46,[[["self"],[R[701]]]]],[11,R[1130],E,R[1131],47,[[["self"],[R[847]]]]],[11,R[1130],R[1070],R[1131],50,[[["self"],[R[895]]]]],[11,R[1130],R[1071],R[1131],53,[[["self"],[R[909]]]]],[11,R[1130],R[923],R[1131],62,[[["self"],[R[938]]]]],[11,R[1130],R[1074],R[1131],66,[[[R[952]],["self"]]]],[11,R[1130],R[994],R[1131],95,[[["self"],[R[979]]]]],[11,R[1130],E,R[1131],96,[[["self"],[R[980]]]]],[11,R[1130],R[1076],R[1131],104,[[["self"],["sflag"]]]],[11,R[1130],E,R[1131],105,[[["self"],["mode"]]]],[11,R[1130],R[1077],R[1131],106,[[["self"],["fsflags"]]]],[11,R[1130],R[1079],R[1131],115,[[["self"],[R[1020]]]]],[11,R[1130],E,R[1131],116,[[[R[1021]],["self"]]]],[11,R[1130],E,R[1131],117,[[[R[1023]],["self"]]]],[11,R[1130],E,R[1131],118,[[[R[1024]],["self"]]]],[11,R[1130],R[1083],R[1131],126,[[["self"],[R[1029]]]]],[11,R[1130],R[1084],R[1131],128,[[["self"],[R[1041]]]]],[11,R[1130],E,R[1131],129,[[[R[1043]],["self"]]]],[11,R[1130],R[1045],R[1131],140,[[["self"],[R[1058]]]]],[11,"hash",R[1098],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",R[1062],E,14,[[["self"],["__h"]]]],[11,"hash",E,E,143,[[["self"],["__h"]]]],[11,"hash",R[1102],E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",R[1099],E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",R[1063],E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",R[1064],E,22,[[["self"],["__h"]]]],[11,"hash",R[1103],E,24,[[["self"],["__h"]]]],[11,"hash",R[1100],E,28,[[["self"],["__h"]]]],[11,"hash",R[1065],E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",R[1066],E,38,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",R[1067],E,41,[[["self"],["__h"]]]],[11,"hash",R[1068],E,42,[[["self"],["__h"]]]],[11,"hash",R[1069],E,44,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",R[1070],E,48,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",R[1071],E,51,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",R[1072],E,55,[[["self"],["__h"]]]],[11,"hash",R[923],E,57,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",R[1074],E,66,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",R[994],E,82,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["h"]]]],[11,"hash",E,E,76,[[["self"],["h"]]]],[11,"hash",E,E,75,[[["self"],["h"]]]],[11,"hash",E,E,83,[[["self"],["h"]]]],[11,"hash",E,E,79,[[["self"],["h"]]]],[11,"hash",E,E,80,[[["self"],["h"]]]],[11,"hash",E,E,78,[[["self"],["h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,95,[[["self"],["__h"]]]],[11,"hash",E,E,96,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",E,E,91,[[["self"],["__h"]]]],[11,"hash",R[1076],E,104,[[["self"],["__h"]]]],[11,"hash",E,E,105,[[["self"],["__h"]]]],[11,"hash",R[1077],E,106,[[["self"],["__h"]]]],[11,"hash",R[1079],E,110,[[["self"],["__h"]]]],[11,"hash",E,E,111,[[["self"],["__h"]]]],[11,"hash",E,E,112,[[["self"],["__h"]]]],[11,"hash",E,E,113,[[["self"],["__h"]]]],[11,"hash",E,E,114,[[["self"],["__h"]]]],[11,"hash",E,E,115,[[["self"],["__h"]]]],[11,"hash",E,E,116,[[["self"],["__h"]]]],[11,"hash",E,E,117,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",R[1083],E,126,[[["self"],["__h"]]]],[11,"hash",R[1084],E,128,[[["self"],["__h"]]]],[11,"hash",E,E,129,[[["self"],["__h"]]]],[11,"hash",E,E,181,[[["self"],["__h"]]]],[11,"hash",R[1045],E,137,[[["self"],["__h"]]]],[11,"hash",E,E,138,[[["self"],["__h"]]]],[11,"hash",E,E,139,[[["self"],["__h"]]]],[11,"hash",E,E,135,[[["self"],["__h"]]]],[11,"hash",E,E,136,[[["self"],["__h"]]]],[11,"hash",E,E,140,[[["self"],["__h"]]]],[11,R[346],R[1098],E,8,[[[R[54]]],[R[627]]]],[11,R[346],E,E,9,[[[R[54]]],["oflag"]]],[11,R[346],E,E,10,[[[R[54]]],[R[659]]]],[11,R[346],E,E,11,[[[R[54]]],["fdflag"]]],[11,R[346],E,E,12,[[[R[54]]],[R[622]]]],[11,R[346],E,E,13,[[[R[54]]],[R[671]]]],[11,R[346],R[1102],E,15,[[[R[54]]],[R[676]]]],[11,R[346],E,E,16,[[[R[54]]],[R[677]]]],[11,R[346],R[1099],E,17,[[[R[54]]],[R[701]]]],[11,R[346],E,E,18,[[[R[54]]],[R[705]]]],[11,R[346],R[1063],E,19,[[[R[54]]],[R[712]]]],[11,R[346],E,E,20,[[[R[54]]],["fdflag"]]],[11,R[346],R[1064],E,22,[[[R[54]]],[R[732]]]],[11,R[346],R[1103],E,24,[[[R[54]]],[R[733]]]],[11,R[346],R[1100],E,28,[[[R[54]]],[R[749]]]],[11,R[346],R[1066],E,38,[[[R[54]]],[R[791]]]],[11,R[346],E,E,39,[[[R[54]]],[R[793]]]],[11,R[346],R[1067],E,41,[[[R[54]]],[R[798]]]],[11,R[346],R[1068],E,42,[[[R[54]]],[R[801]]]],[11,R[346],R[1069],E,44,[[[R[54]]],[R[820]]]],[11,R[346],E,E,45,[[[R[54]]],[R[843]]]],[11,R[346],E,E,46,[[[R[54]]],[R[701]]]],[11,R[346],E,E,47,[[[R[54]]],[R[847]]]],[11,R[346],R[1070],E,50,[[[R[54]]],[R[895]]]],[11,R[346],R[1071],E,53,[[[R[54]]],[R[909]]]],[11,R[346],R[923],E,62,[[[R[54]]],[R[938]]]],[11,R[346],R[1074],E,66,[[[R[54]]],[R[952]]]],[11,R[346],R[994],E,95,[[[R[54]]],[R[979]]]],[11,R[346],E,E,96,[[[R[54]]],[R[980]]]],[11,R[346],R[1076],E,104,[[[R[54]]],["sflag"]]],[11,R[346],E,E,105,[[[R[54]]],["mode"]]],[11,R[346],R[1077],E,106,[[[R[54]]],["fsflags"]]],[11,R[346],R[1079],E,115,[[[R[54]]],[R[1020]]]],[11,R[346],E,E,116,[[[R[54]]],[R[1021]]]],[11,R[346],E,E,117,[[[R[54]]],[R[1023]]]],[11,R[346],E,E,118,[[[R[54]]],[R[1024]]]],[11,R[346],R[1083],E,126,[[[R[54]]],[R[1029]]]],[11,R[346],R[1084],E,128,[[[R[54]]],[R[1041]]]],[11,R[346],E,E,129,[[[R[54]]],[R[1043]]]],[11,R[346],R[1045],E,140,[[[R[54]]],[R[1058]]]],[11,"fmt",R[1098],E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,10,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,11,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,12,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,13,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1102],E,15,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,16,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1099],E,17,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,18,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1063],E,19,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,20,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1064],E,22,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1103],E,24,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1100],E,28,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1066],E,38,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,39,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1067],E,41,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1068],E,42,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1069],E,44,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,45,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,46,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,47,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1070],E,50,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1071],E,53,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[923],E,62,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1074],E,66,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[994],E,95,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,96,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1076],E,104,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,105,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1077],E,106,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1079],E,115,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,116,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,117,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,118,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1083],E,126,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1084],E,128,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,129,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1045],E,140,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1098],E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,10,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,11,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,12,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,13,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1102],E,15,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,16,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1099],E,17,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,18,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1063],E,19,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,20,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1064],E,22,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1103],E,24,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1100],E,28,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1066],E,38,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,39,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1067],E,41,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1068],E,42,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1069],E,44,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,45,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,46,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,47,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1070],E,50,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1071],E,53,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[923],E,62,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1074],E,66,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[994],E,95,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,96,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1076],E,104,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,105,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1077],E,106,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1079],E,115,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,116,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,117,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,118,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1083],E,126,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1084],E,128,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,129,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1045],E,140,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1098],E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,10,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,11,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,12,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,13,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1102],E,15,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,16,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1099],E,17,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,18,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1063],E,19,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,20,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1064],E,22,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1103],E,24,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1100],E,28,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1066],E,38,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,39,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1067],E,41,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1068],E,42,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1069],E,44,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,45,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,46,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,47,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1070],E,50,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1071],E,53,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[923],E,62,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1074],E,66,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[994],E,95,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,96,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1076],E,104,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,105,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1077],E,106,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1079],E,115,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,116,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,117,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,118,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1083],E,126,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1084],E,128,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,129,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1045],E,140,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1098],E,8,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,10,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,11,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,12,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,13,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1102],E,15,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,16,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1099],E,17,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,18,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1063],E,19,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,20,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1064],E,22,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1103],E,24,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1100],E,28,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1066],E,38,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,39,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1067],E,41,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1068],E,42,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1069],E,44,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,45,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,46,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,47,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1070],E,50,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1071],E,53,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[923],E,62,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1074],E,66,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[994],E,95,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,96,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1076],E,104,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,105,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1077],E,106,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1079],E,115,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,116,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,117,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,118,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1083],E,126,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1084],E,128,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,129,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",R[1045],E,140,[[[R[38]],["self"]],[R[15]]]],[11,R[251],R[1101],E,4,[[["self"]],["str"]]],[11,R[251],"nix",E,0,[[["self"]],["str"]]],[11,R[1133],R[1118],E,2,[[["self"]],["rawfd"]]],[11,R[1133],R[1132],E,144,[[["self"]],["rawfd"]]],[11,R[1133],R[1074],E,67,[[["self"]],["rawfd"]]],[11,R[1133],R[1084],E,130,[[["self"]],["rawfd"]]],[11,"from_raw_fd",E,E,130,[[["rawfd"]],["self"]]],[11,"into_raw_fd",R[1132],E,144,[[],["rawfd"]]]],"p":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,R[1134]],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[3,R[1135]],[3,R[1136]],[3,R[1137]],[3,R[1138]],[3,R[1139]],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,R[1140]],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,R[1141]],[3,R[1142]],[3,"CloneFlags"],[3,"CpuSet"],[3,"LioCb"],[4,R[1143]],[4,"LioOpcode"],[4,"LioMode"],[4,R[1144]],[4,"Buffer"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,R[1145]],[3,"EpollEvent"],[3,"EfdFlags"],[3,R[1146]],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,R[1147]],[4,"Request"],[4,"Event"],[3,"Options"],[4,"QuotaType"],[4,"QuotaFmt"],[3,R[1148]],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,R[1149]],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,R[921]],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,R[502]],[3,R[439]],[3,R[440]],[3,R[448]],[3,R[447]],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,R[1150]],[3,"AlgAddr"],[3,"RecvMsg"],[4,R[1151]],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,R[1152]],[4,R[1153]],[4,R[1154]],[4,"SockLevel"],[4,"Shutdown"],[8,"CmsgBuffer"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,R[1155]],[3,R[1156]],[3,R[1157]],[3,"CmsgSpace"],[3,"FileStat"],[4,R[1158]],[4,R[1159]],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,R[1160]],[3,"InputFlags"],[3,R[1161]],[3,R[1162]],[3,"LocalFlags"],[8,R[1163]],[3,"TimeSpec"],[3,"TimeVal"],[3,R[1164]],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,R[1165]],[3,R[1166]],[3,R[1167]],[3,"InitFlags"],[3,"Inotify"],[3,"UContext"],[4,"ForkResult"],[4,R[1168]],[4,"Whence"],[4,R[1169]],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[3,R[1170]],[8,"NixPath"],[3,"Iter"],[3,R[1171]],[3,"PtyMaster"],[3,R[1172]],[3,R[1173]],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,R[1174]],[3,R[1175]],[3,R[1176]],[3,R[1177]],[3,R[1178]],[3,R[1179]],[3,R[1180]],[3,R[1181]],[3,"Broadcast"],[3,"OobInline"],[3,R[1182]],[3,"KeepAlive"],[3,R[1183]],[3,R[1184]],[3,"RcvBuf"],[3,"SndBuf"],[3,R[1185]],[3,R[1186]],[3,"SockType"],[3,"AcceptConn"],[3,R[1187]],[3,R[1188]],[3,R[1189]],[3,"Mark"],[3,"PassCred"],[3,R[1190]],[3,R[993]],[3,R[1191]],[3,R[1192]],[3,"AlgSetKey"],[3,R[1193]],[6,"SessionId"]]};
searchIndex["ppv_lite86"]={"doc":E,"i":[[0,"x86_64",R[3],E,N,N],[3,"YesS3",R[11],E,N,N],[3,"NoS3",E,E,N,N],[3,"YesS4",E,E,N,N],[3,"NoS4",E,E,N,N],[3,"YesA1",E,E,N,N],[3,"NoA1",E,E,N,N],[3,"YesA2",E,E,N,N],[3,"NoA2",E,E,N,N],[3,"YesNI",E,E,N,N],[3,"NoNI",E,E,N,N],[3,R[30],E,E,N,N],[3,R[31],E,E,N,N],[19,R[20],E,"Generic wrapper for unparameterized storage of any of the…",N,N],[19,R[21],E,E,N,N],[19,R[22],E,E,N,N],[6,"SSE2",E,E,N,N],[6,"SSSE3",E,E,N,N],[6,"SSE41",E,E,N,N],[6,"AVX",E,"AVX but not AVX2: only 128-bit integer operations, but use…",N,N],[6,"AVX2",E,E,N,N],[11,R[1],E,E,0,[[],["self"]]],[11,R[2],E,E,0,[[]]],[11,R[1],E,E,1,[[],["self"]]],[11,R[2],E,E,1,[[]]],[8,"AndNot",R[3],E,N,N],[16,"Output",E,E,2,N],[10,"andnot",E,E,2,[[]]],[8,"BSwap",E,E,N,N],[10,"bswap",E,E,3,[[],["self"]]],[8,"ArithOps",E,"Ops that depend on word size",N,N],[8,"BitOps0",E,"Ops that are independent of word size and endian",N,N],[8,"BitOps32",E,E,N,N],[8,"BitOps64",E,E,N,N],[8,"BitOps128",E,E,N,N],[8,R[24],E,E,N,N],[10,"rotate_each_word_right7",E,E,4,[[],["self"]]],[10,"rotate_each_word_right8",E,E,4,[[],["self"]]],[10,"rotate_each_word_right11",E,E,4,[[],["self"]]],[10,"rotate_each_word_right12",E,E,4,[[],["self"]]],[10,"rotate_each_word_right16",E,E,4,[[],["self"]]],[10,"rotate_each_word_right20",E,E,4,[[],["self"]]],[10,"rotate_each_word_right24",E,E,4,[[],["self"]]],[10,"rotate_each_word_right25",E,E,4,[[],["self"]]],[8,R[25],E,E,N,N],[10,"rotate_each_word_right32",E,E,5,[[],["self"]]],[8,"RotateEachWord128",E,E,N,N],[8,R[26],E,E,N,N],[10,"unsafe_from",E,E,6,[[[T]],["self"]]],[8,"Vec2",E,"A vector composed of two elements, which may be words or…",N,N],[10,R[4],E,E,7,[[["u32"]],["w"]]],[10,R[5],E,E,7,[[["w"],["u32"]],["self"]]],[8,"Vec4",E,"A vector composed of four elements, which may be words or…",N,N],[10,R[4],E,E,8,[[["u32"]],["w"]]],[10,R[5],E,E,8,[[["w"],["u32"]],["self"]]],[8,"Words4",E,"A vector composed of four words; depending on their size,…",N,N],[10,"shuffle1230",E,E,9,[[],["self"]]],[10,"shuffle2301",E,E,9,[[],["self"]]],[10,"shuffle3012",E,E,9,[[],["self"]]],[8,R[27],E,"A vector composed one or more lanes each composed of four…",N,N],[10,"shuffle_lane_words1230",E,E,10,[[],["self"]]],[10,"shuffle_lane_words2301",E,E,10,[[],["self"]]],[10,"shuffle_lane_words3012",E,E,10,[[],["self"]]],[8,"Swap64",E,"Exchange neigboring ranges of bits of the specified size",N,N],[10,"swap1",E,E,11,[[],["self"]]],[10,"swap2",E,E,11,[[],["self"]]],[10,"swap4",E,E,11,[[],["self"]]],[10,"swap8",E,E,11,[[],["self"]]],[10,"swap16",E,E,11,[[],["self"]]],[10,"swap32",E,E,11,[[],["self"]]],[10,"swap64",E,E,11,[[],["self"]]],[8,"u32x4",E,E,N,N],[8,"u64x2",E,E,N,N],[8,R[6],E,E,N,N],[8,R[7],E,E,N,N],[8,R[8],E,E,N,N],[8,"u64x4",E,E,N,N],[8,R[9],E,E,N,N],[8,"u32x4x4",E,E,N,N],[8,"u64x2x4",E,E,N,N],[8,"u128x4",E,E,N,N],[8,R[28],E,"A vector composed of multiple 128-bit lanes.",N,N],[10,"to_lanes",E,"Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes",E,"Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip",E,"Combine single vectors into a multi-lane vector.",N,N],[10,"vzip",E,E,13,[[],["v"]]],[8,"Machine",E,E,N,N],[16,"u32x4",E,E,14,N],[16,"u64x2",E,E,14,N],[16,R[6],E,E,14,N],[16,R[7],E,E,14,N],[16,R[8],E,E,14,N],[16,"u64x4",E,E,14,N],[16,R[9],E,E,14,N],[16,"u32x4x4",E,E,14,N],[16,"u64x2x4",E,E,14,N],[16,"u128x4",E,E,14,N],[11,"unpack",E,E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,"read_le",E,E,14,[[],["v"]]],[11,"read_be",E,E,14,[[],["v"]]],[10,R[19],E,E,14,[[],["self"]]],[8,"Store",E,E,N,N],[10,"unpack",E,E,15,[[["s"]],["self"]]],[8,R[29],E,E,N,N],[10,"unsafe_read_le",E,E,16,[[],["self"]]],[10,"unsafe_read_be",E,E,16,[[],["self"]]],[10,"write_le",E,E,16,[[]]],[10,"write_be",E,E,16,[[]]],[14,"dispatch",E,"Generate the full set of optimized implementations to take…",N,N],[14,"dispatch_light128",E,R[10],N,N],[14,"dispatch_light256",E,R[10],N,N],[11,"from",R[11],E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,"into",E,E,17,[[],[U]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[15]]]],[11,"into",E,E,18,[[],[U]]],[11,R[13],E,E,18,[[],[R[15]]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[R[18]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[15]]]],[11,"into",E,E,19,[[],[U]]],[11,R[13],E,E,19,[[],[R[15]]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[R[18]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[15]]]],[11,"into",E,E,20,[[],[U]]],[11,R[13],E,E,20,[[],[R[15]]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[R[18]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,"into",E,E,21,[[],[U]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[15]]]],[11,"into",E,E,22,[[],[U]]],[11,R[13],E,E,22,[[],[R[15]]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[R[18]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,"into",E,E,23,[[],[U]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[15]]]],[11,"into",E,E,24,[[],[U]]],[11,R[13],E,E,24,[[],[R[15]]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[R[18]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,"into",E,E,25,[[],[U]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[15]]]],[11,"into",E,E,26,[[],[U]]],[11,R[13],E,E,26,[[],[R[15]]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[R[18]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,"into",E,E,27,[[],[U]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,"into",E,E,28,[[],[U]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[15]]]],[11,"into",E,E,29,[[],[U]]],[11,R[13],E,E,29,[[],[R[15]]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[R[18]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,R[19],E,E,27,[[],["self"]]],[11,R[19],E,E,28,[[],["self"]]],[11,"unpack",E,E,29,[[[R[20]]],["self"]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"clone",E,E,17,[[["self"]],["yess3"]]],[11,"clone",E,E,18,[[["self"]],["nos3"]]],[11,"clone",E,E,19,[[["self"]],["yess4"]]],[11,"clone",E,E,20,[[["self"]],["nos4"]]],[11,"clone",E,E,21,[[["self"]],["yesa1"]]],[11,"clone",E,E,22,[[["self"]],["noa1"]]],[11,"clone",E,E,23,[[["self"]],["yesa2"]]],[11,"clone",E,E,24,[[["self"]],["noa2"]]],[11,"clone",E,E,25,[[["self"]],["yesni"]]],[11,"clone",E,E,26,[[["self"]],["noni"]]],[11,"clone",E,E,27,[[["self"]],["ssemachine"]]],[11,"clone",E,E,28,[[["self"]],["avx2machine"]]],[11,"clone",E,E,29,[[["self"]],[R[20]]]],[11,"clone",E,E,0,[[["self"]],[R[21]]]],[11,"clone",E,E,1,[[["self"]],[R[22]]]],[11,R[23],E,E,29,[[],["self"]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[23],E,E,1,[[],["self"]]],[11,"unpack",R[3],E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,"read_le",E,E,14,[[],["v"]]],[11,"read_be",E,E,14,[[],["v"]]]],"p":[[19,R[21]],[19,R[22]],[8,"AndNot"],[8,"BSwap"],[8,R[24]],[8,R[25]],[8,R[26]],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,R[27]],[8,"Swap64"],[8,R[28]],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,R[29]],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,R[30]],[3,R[31]],[19,R[20]]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand",R[1533],N,N],[3,"Error",E,R[1522],N,N],[8,"RngCore",E,R[1528],N,N],[10,R[1385],E,R[1529],0,[[["self"]],["u32"]]],[10,R[1386],E,R[1530],0,[[["self"]],["u64"]]],[10,R[1322],E,R[1531],0,[[["self"]]]],[10,R[1321],E,R[1532],0,[[["self"]],[[R[15],["error"]],["error"]]]],[8,R[1325],E,R[1534],N,N],[16,"Seed",E,R[1535],1,N],[10,R[1379],E,R[1536],1,[[],["self"]]],[11,R[1323],E,R[1537],1,[[["u64"]],["self"]]],[11,"from_rng",E,R[1538],1,[[["r"]],[[R[15],["error"]],["error"]]]],[11,R[1539],E,R[1540],1,[[],["self"]]],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions",N,N],[3,"Bernoulli",R[1484],"The Bernoulli distribution.",N,N],[3,"Open01",E,R[1478],N,N],[3,R[1514],E,R[1478],N,N],[3,R[1515],E,"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[1481],N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"ChiSquared",E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"LogNormal",E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[1516],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,R[1507],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[4,R[1503],E,"Error type returned from `Bernoulli::new`.",N,N],[13,"InvalidProbability",E,"`p < 0` or `p > 1`.",2,N],[11,"new",E,"Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[[R[1480]],[R[1479]],[R[15],[R[1480],R[1479]]]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[[R[1480]],[R[1479]],[R[15],[R[1480],R[1479]]]]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[1493],R[1481],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[1517],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[1518],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[1504],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",18,N],[8,R[1505],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",19,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,R[1482],E,"Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",19,[[["self"],["r"]]]],[11,R[1499],E,"Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,R[1506],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[17],E,"Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new",E,R[1483],21,[[["b2"],["b1"]],["uniform"]]],[11,R[1482],E,R[1483],21,[[["b2"],["b1"]],["uniform"]]],[11,"new",R[1484],"Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",23,[[],[R[1501]]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted",E,"Weighted index sampling",N,N],[3,R[1485],R[1488],R[1486],N,N],[4,R[1508],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided weight collection contains no items.",25,N],[13,"InvalidWeight",E,"A weight is either less than zero, greater than the…",25,N],[13,"AllWeightsZero",E,"All items in the provided weight collection are zero.",25,N],[13,"TooMany",E,"Too many weights are provided (length greater than…",25,N],[0,"alias_method",E,"This module contains an implementation of alias method for…",N,N],[3,R[1485],R[1494],R[1486],N,N],[8,"Weight",E,"Trait that must be implemented for weights, that are used…",N,N],[18,"MAX",E,"Maximum number representable by `Self`.",26,N],[18,"ZERO",E,"Element of `Self` equivalent to 0.",26,N],[10,"try_from_u32_lossy",E,"Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],[R[49]]]],[11,"sum",E,"Sums all values in slice `values`.",26,[[],["self"]]],[11,"new",E,"Creates a new [`WeightedIndex`].",27,[[["vec"]],[[R[15],[R[1487]]],[R[1487]]]]],[11,"new",R[1488],"Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[[R[15],[R[1489],R[1487]]],[R[1487]],[R[1489]]]]],[11,"update_weights",E,"Update a subset of weights, without changing the number of…",28,[[["self"]],[[R[1487]],[R[15],[R[1487]]]]]],[8,R[1509],R[1484],"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[1491],E,"Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"rngs",E,"Random number generators and adapters",N,N],[3,"OsRng",R[1495],R[1523],N,N],[3,"EntropyRng",E,"An interface returning random data from external…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng",E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadError",R[1496],"`ReadRng` error type",N,N],[3,"ReadRng",E,"An RNG that reads random bytes straight from any type…",N,N],[3,R[1510],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",31,[[["self"]],[["error"],[R[15],["error"]]]]],[11,"new",R[1495],"Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[1497],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",N,N],[3,R[1519],R[1500],"An iterator over multiple slice elements.",N,N],[0,"index",E,"Low-level API for sampling indices",N,N],[4,"IndexVec",R[1498],"A vector of indices.",N,N],[4,R[1520],E,"Return type of `IndexVec::iter`.",N,N],[4,R[1521],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["usize"],["r"]],["indexvec"]]],[11,"len",E,"Returns the number of indices",34,[[["self"]],["usize"]]],[11,R[166],E,"Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index",E,"Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["usize"],["vec",["usize"]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,R[50],E,"Convert into an iterator over the indices as a sequence of…",34,[[],[R[1502]]]],[8,R[1511],R[1500],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",35,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],[R[49]]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],[R[49]]]],[10,R[1490],E,"Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[[R[1487]],[R[15],[R[1487]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[[R[15],[R[1487]]],[R[1487]]]]],[10,"shuffle",E,"Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,R[1512],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator.",36,[[["r"]],[R[49]]]],[11,"choose_multiple_fill",E,"Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,R[1490],E,"Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",37,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],[T]]],[11,R[1491],E,"Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill",E,R[1492],37,[[["self"],[T]]]],[11,"try_fill",E,R[1492],37,[[["self"],[T]],[["error"],[R[15],["error"]]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,R[1513],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[114],E,E,39,[[["self"]],["string"]]],[11,R[12],E,E,39,[[[U]],[R[15]]]],[11,R[13],E,E,39,[[],[R[15]]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[R[18]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",R[1484],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[51],E,E,40,[[["self"]],[T]]],[11,R[52],E,E,40,[[["self"],[T]]]],[11,R[12],E,E,40,[[[U]],[R[15]]]],[11,R[13],E,E,40,[[],[R[15]]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[R[18]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[51],E,E,41,[[["self"]],[T]]],[11,R[52],E,E,41,[[["self"],[T]]]],[11,R[12],E,E,41,[[[U]],[R[15]]]],[11,R[13],E,E,41,[[],[R[15]]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[R[18]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[15]]]],[11,R[13],E,E,42,[[],[R[15]]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[R[18]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",R[1493],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[51],E,E,21,[[["self"]],[T]]],[11,R[52],E,E,21,[[["self"],[T]]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",R[1484],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[51],E,E,43,[[["self"]],[T]]],[11,R[52],E,E,43,[[["self"],[T]]]],[11,R[12],E,E,43,[[[U]],[R[15]]]],[11,R[13],E,E,43,[[],[R[15]]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[R[18]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[51],E,E,12,[[["self"]],[T]]],[11,R[52],E,E,12,[[["self"],[T]]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[51],E,E,11,[[["self"]],[T]]],[11,R[52],E,E,11,[[["self"],[T]]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[51],E,E,14,[[["self"]],[T]]],[11,R[52],E,E,14,[[["self"],[T]]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[51],E,E,13,[[["self"]],[T]]],[11,R[52],E,E,13,[[["self"],[T]]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[51],E,E,44,[[["self"]],[T]]],[11,R[52],E,E,44,[[["self"],[T]]]],[11,R[12],E,E,44,[[[U]],[R[15]]]],[11,R[13],E,E,44,[[],[R[15]]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[16],E,E,44,[[["self"]],[R[18]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[51],E,E,15,[[["self"]],[T]]],[11,R[52],E,E,15,[[["self"],[T]]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[51],E,E,16,[[["self"]],[T]]],[11,R[52],E,E,16,[[["self"],[T]]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[51],E,E,17,[[["self"]],[T]]],[11,R[52],E,E,17,[[["self"],[T]]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[51],E,E,22,[[["self"]],[T]]],[11,R[52],E,E,22,[[["self"],[T]]]],[11,R[12],E,E,22,[[[U]],[R[15]]]],[11,R[13],E,E,22,[[],[R[15]]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[R[18]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[51],E,E,23,[[["self"]],[T]]],[11,R[52],E,E,23,[[["self"],[T]]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[51],E,E,24,[[["self"]],[T]]],[11,R[52],E,E,24,[[["self"],[T]]]],[11,R[12],E,E,24,[[[U]],[R[15]]]],[11,R[13],E,E,24,[[],[R[15]]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[R[18]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[50],E,E,45,[[],["i"]]],[11,R[12],E,E,45,[[[U]],[R[15]]]],[11,R[13],E,E,45,[[],[R[15]]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"]],[T]]],[11,R[16],E,E,45,[[["self"]],[R[18]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[51],E,E,46,[[["self"]],[T]]],[11,R[52],E,E,46,[[["self"],[T]]]],[11,R[12],E,E,46,[[[U]],[R[15]]]],[11,R[13],E,E,46,[[],[R[15]]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[16],E,E,46,[[["self"]],[R[18]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[1493],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[51],E,E,47,[[["self"]],[T]]],[11,R[52],E,E,47,[[["self"],[T]]]],[11,R[12],E,E,47,[[[U]],[R[15]]]],[11,R[13],E,E,47,[[],[R[15]]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[16],E,E,47,[[["self"]],[R[18]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[51],E,E,48,[[["self"]],[T]]],[11,R[52],E,E,48,[[["self"],[T]]]],[11,R[12],E,E,48,[[[U]],[R[15]]]],[11,R[13],E,E,48,[[],[R[15]]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[16],E,E,48,[[["self"]],[R[18]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[51],E,E,49,[[["self"]],[T]]],[11,R[52],E,E,49,[[["self"],[T]]]],[11,R[12],E,E,49,[[[U]],[R[15]]]],[11,R[13],E,E,49,[[],[R[15]]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[16],E,E,49,[[["self"]],[R[18]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,"into",R[1488],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[51],E,E,28,[[["self"]],[T]]],[11,R[52],E,E,28,[[["self"],[T]]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[51],E,E,25,[[["self"]],[T]]],[11,R[52],E,E,25,[[["self"],[T]]]],[11,R[114],E,E,25,[[["self"]],["string"]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",R[1494],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[51],E,E,27,[[["self"]],[T]]],[11,R[52],E,E,27,[[["self"],[T]]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",R[1495],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[51],E,E,50,[[["self"]],[T]]],[11,R[52],E,E,50,[[["self"],[T]]]],[11,R[12],E,E,50,[[[U]],[R[15]]]],[11,R[13],E,E,50,[[],[R[15]]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[16],E,E,50,[[["self"]],[R[18]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[15]]]],[11,R[13],E,E,32,[[],[R[15]]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[R[18]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[51],E,E,51,[[["self"]],[T]]],[11,R[52],E,E,51,[[["self"],[T]]]],[11,R[12],E,E,51,[[[U]],[R[15]]]],[11,R[13],E,E,51,[[],[R[15]]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"]],[T]]],[11,R[16],E,E,51,[[["self"]],[R[18]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[51],E,E,52,[[["self"]],[T]]],[11,R[52],E,E,52,[[["self"],[T]]]],[11,R[12],E,E,52,[[[U]],[R[15]]]],[11,R[13],E,E,52,[[],[R[15]]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"]],[T]]],[11,R[16],E,E,52,[[["self"]],[R[18]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",R[1496],E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[114],E,E,53,[[["self"]],["string"]]],[11,R[12],E,E,53,[[[U]],[R[15]]]],[11,R[13],E,E,53,[[],[R[15]]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"]],[T]]],[11,R[16],E,E,53,[[["self"]],[R[18]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[15]]]],[11,R[13],E,E,30,[[],[R[15]]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[R[18]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[51],E,E,31,[[["self"]],[T]]],[11,R[52],E,E,31,[[["self"],[T]]]],[11,R[12],E,E,31,[[[U]],[R[15]]]],[11,R[13],E,E,31,[[],[R[15]]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[R[18]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",R[1497],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[51],E,E,33,[[["self"]],[T]]],[11,R[52],E,E,33,[[["self"],[T]]]],[11,R[12],E,E,33,[[[U]],[R[15]]]],[11,R[13],E,E,33,[[],[R[15]]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[R[18]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",R[1500],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[50],E,E,54,[[],["i"]]],[11,R[12],E,E,54,[[[U]],[R[15]]]],[11,R[13],E,E,54,[[],[R[15]]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"]],[T]]],[11,R[16],E,E,54,[[["self"]],[R[18]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",R[1498],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[51],E,E,34,[[["self"]],[T]]],[11,R[52],E,E,34,[[["self"],[T]]]],[11,R[12],E,E,34,[[[U]],[R[15]]]],[11,R[13],E,E,34,[[],[R[15]]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[R[18]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[50],E,E,55,[[],["i"]]],[11,R[12],E,E,55,[[[U]],[R[15]]]],[11,R[13],E,E,55,[[],[R[15]]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"]],[T]]],[11,R[16],E,E,55,[[["self"]],[R[18]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[50],E,E,56,[[],["i"]]],[11,R[51],E,E,56,[[["self"]],[T]]],[11,R[52],E,E,56,[[["self"],[T]]]],[11,R[12],E,E,56,[[[U]],[R[15]]]],[11,R[13],E,E,56,[[],[R[15]]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"]],[T]]],[11,R[16],E,E,56,[[["self"]],[R[18]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,R[1385],R[1495],E,50,[[["self"]],["u32"]]],[11,R[1386],E,E,50,[[["self"]],["u64"]]],[11,R[1322],E,E,50,[[["self"]]]],[11,R[1321],E,E,50,[[["self"]],[[R[15],["error"]],["error"]]]],[11,"clone",E,E,50,[[["self"]],["osrng"]]],[11,R[23],E,E,50,[[],["osrng"]]],[11,"from","rand",E,39,[[[R[574]]],["error"]]],[11,"from",E,E,39,[[["error"]],["error"]]],[11,"fmt",E,E,39,[[[R[38]],["self"]],[["error"],[R[15],["error"]]]]],[11,"fmt",R[1495],E,50,[[[R[38]],["self"]],[["error"],[R[15],["error"]]]]],[11,"fmt","rand",E,39,[[[R[38]],["self"]],[["error"],[R[15],["error"]]]]],[11,"read",E,E,0,[[["self"]],[["error"],[R[15],["usize","error"]],["usize"]]]],[11,"source",E,E,39,[[["self"]],[["error"],[R[49],["error"]]]]],[11,"new",R[1493],E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1499],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[1499],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[1499],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1482],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]],["duration"]]],[11,"sample",R[1484],E,3,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,4,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,5,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,6,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,7,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,8,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,9,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,10,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,11,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,12,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,13,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",R[1493],E,21,[[["self"],["r"]],["x"]]],[11,"sample",R[1484],E,22,[[["self"],["r"]]]],[11,"sample",E,E,23,[[["self"],["r"]]]],[11,"sample",E,E,24,[[["self"],["r"]],["f64"]]],[11,"sample",R[1494],E,27,[[["self"],["r"]],["usize"]]],[11,"sample",R[1488],E,28,[[["self"],["r"]],["usize"]]],[11,"sample",R[1484],E,46,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,41,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,40,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,41,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,40,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[574]]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["char"]]],[11,"sample",E,E,42,[[["self"],["r"]],["char"]]],[11,"sample",E,E,46,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[49]]]],[11,"sample",E,E,46,[[["self"],["r"]],["wrapping"]]],[11,"from",R[1493],E,21,[[["range"]],["uniform"]]],[11,"from",E,E,21,[[["rangeinclusive"]],["uniform"]]],[11,"from",R[1498],E,34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,34,[[["usize"],["vec",["usize"]]],["self"]]],[11,"next",R[1484],E,45,[[["self"]],[R[49]]]],[11,R[53],E,E,45,[[["self"]]]],[11,"next",R[1498],E,55,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,55,[[["self"]]]],[11,"next",E,E,56,[[["self"]],[R[49]]]],[11,R[53],E,E,56,[[["self"]]]],[11,"next",R[1500],E,54,[[["self"]],[R[49]]]],[11,R[53],E,E,54,[[["self"]]]],[11,"len",E,E,54,[[["self"]],["usize"]]],[11,"clone",R[1484],E,3,[[["self"]],[R[1480]]]],[11,"clone",E,E,2,[[["self"]],[R[1479]]]],[11,"clone",E,E,4,[[["self"]],["binomial"]]],[11,"clone",E,E,5,[[["self"]],["cauchy"]]],[11,"clone",E,E,6,[[["self"]],["dirichlet"]]],[11,"clone",E,E,43,[[["self"]],["exp1"]]],[11,"clone",E,E,7,[[["self"]],["exp"]]],[11,"clone",E,E,8,[[["self"]],["gamma"]]],[11,"clone",E,E,9,[[["self"]],["chisquared"]]],[11,"clone",E,E,10,[[["self"]],["fisherf"]]],[11,"clone",E,E,11,[[["self"]],["studentt"]]],[11,"clone",E,E,12,[[["self"]],["beta"]]],[11,"clone",E,E,44,[[["self"]],["standardnormal"]]],[11,"clone",E,E,13,[[["self"]],["normal"]]],[11,"clone",E,E,14,[[["self"]],["lognormal"]]],[11,"clone",E,E,15,[[["self"]],["pareto"]]],[11,"clone",E,E,16,[[["self"]],["poisson"]]],[11,"clone",E,E,17,[[["self"]],["triangular"]]],[11,"clone",R[1493],E,21,[[["self"]],["uniform"]]],[11,"clone",E,E,47,[[["self"]],["uniformint"]]],[11,"clone",E,E,48,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,49,[[["self"]],["uniformduration"]]],[11,"clone",R[1484],E,22,[[["self"]],["unitcircle"]]],[11,"clone",E,E,23,[[["self"]],[R[1501]]]],[11,"clone",E,E,24,[[["self"]],["weibull"]]],[11,"clone",R[1494],E,27,[[["self"]],["self"]]],[11,"clone",R[1488],E,28,[[["self"]],[R[1489]]]],[11,"clone",E,E,25,[[["self"]],[R[1487]]]],[11,"clone",R[1484],E,41,[[["self"]],["openclosed01"]]],[11,"clone",E,E,40,[[["self"]],["open01"]]],[11,"clone",E,E,46,[[["self"]],["standard"]]],[11,"clone",R[1496],E,31,[[["self"]],["reseedingrng"]]],[11,"clone",R[1497],E,33,[[["self"]],["steprng"]]],[11,"clone",R[1495],E,51,[[["self"]],["stdrng"]]],[11,"clone",E,E,52,[[["self"]],["threadrng"]]],[11,"clone",R[1498],E,34,[[["self"]],["indexvec"]]],[11,"clone",E,E,56,[[["self"]],[R[1502]]]],[11,R[23],R[1495],E,32,[[],["self"]]],[11,R[23],E,E,52,[[],["threadrng"]]],[11,"eq",R[1484],E,2,[[["self"],[R[1479]]],["bool"]]],[11,"eq",R[1488],E,25,[[[R[1487]],["self"]],["bool"]]],[11,"eq",R[1498],E,34,[[["indexvec"],["self"]],["bool"]]],[11,"fmt",R[1484],E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1488],E,25,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1496],E,53,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1484],E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,43,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,9,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,11,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,44,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,15,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1493],E,21,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,47,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,48,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,49,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1484],E,22,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,24,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1494],E,27,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1488],E,28,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,25,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1484],E,41,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,40,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,42,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,45,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,46,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1496],E,30,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,53,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,31,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1495],E,32,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1497],E,33,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1495],E,51,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,52,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1498],E,34,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,55,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,56,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1500],E,54,[[["self"],[R[38]]],[R[15]]]],[11,"source",R[1496],E,53,[[["self"]],[[R[49],["error"]],["error"]]]],[11,R[1385],E,E,30,[[["self"]],["u32"]]],[11,R[1386],E,E,30,[[["self"]],["u64"]]],[11,R[1322],E,E,30,[[["self"]]]],[11,R[1321],E,E,30,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],E,E,31,[[["self"]],["u32"]]],[11,R[1386],E,E,31,[[["self"]],["u64"]]],[11,R[1322],E,E,31,[[["self"]]]],[11,R[1321],E,E,31,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],R[1495],E,32,[[["self"]],["u32"]]],[11,R[1386],E,E,32,[[["self"]],["u64"]]],[11,R[1322],E,E,32,[[["self"]]]],[11,R[1321],E,E,32,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],R[1497],E,33,[[["self"]],["u32"]]],[11,R[1386],E,E,33,[[["self"]],["u64"]]],[11,R[1322],E,E,33,[[["self"]]]],[11,R[1321],E,E,33,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],R[1495],E,51,[[["self"]],["u32"]]],[11,R[1386],E,E,51,[[["self"]],["u64"]]],[11,R[1322],E,E,51,[[["self"]]]],[11,R[1321],E,E,51,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],E,E,52,[[["self"]],["u32"]]],[11,R[1386],E,E,52,[[["self"]],["u64"]]],[11,R[1322],E,E,52,[[["self"]]]],[11,R[1321],E,E,52,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1379],E,E,51,[[],["self"]]],[11,"from_rng",E,E,51,[[["rngcore"]],[["error"],[R[15],["error"]]]]],[11,"new","rand",R[1524],39,[[["e"]],["error"]]],[11,"inner",E,R[1525],39,[[["self"]],["error"]]],[11,"take_inner",E,R[1526],39,[[],[["box",["error"]],["error"]]]],[18,R[1305],E,R[1306],39,N],[18,R[1307],E,R[1308],39,N],[11,R[1309],E,R[1310],39,[[["self"]],[[R[49],["i32"]],["i32"]]]],[11,"code",E,R[1527],39,[[["self"]],[[R[574]],[R[49],[R[574]]]]]]],"p":[[8,"RngCore"],[8,R[1325]],[4,R[1503]],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,R[1504]],[8,R[1505]],[8,R[1506]],[3,"Uniform"],[3,"UnitCircle"],[3,R[1507]],[3,"Weibull"],[4,R[1508]],[8,"Weight"],[3,R[1485]],[3,R[1485]],[8,R[1509]],[3,"ReadRng"],[3,R[1510]],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,R[1511]],[8,R[1512]],[8,"Rng"],[8,R[1513]],[3,"Error"],[3,"Open01"],[3,R[1514]],[3,R[1515]],[3,"Exp1"],[3,R[1516]],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[1517]],[3,R[1518]],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,R[1519]],[4,R[1520]],[4,R[1521]]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","i":[[3,R[1382],"rand_chacha","ChaCha with 12 rounds",N,N],[3,R[1381],E,R[1368],N,N],[3,R[1383],E,R[1375],N,N],[3,R[1380],E,R[1368],N,N],[3,R[1384],E,"ChaCha with 8 rounds",N,N],[3,"ChaCha8Rng",E,R[1368],N,N],[11,R[1369],E,R[1370],0,[[["self"]],["u128"]]],[11,R[1371],E,R[1372],0,[[["self"],["u128"]]]],[11,R[1374],E,R[1373],0,[[["self"],["u64"]]]],[11,R[1369],E,R[1370],1,[[["self"]],["u128"]]],[11,R[1371],E,R[1372],1,[[["self"],["u128"]]]],[11,R[1374],E,R[1373],1,[[["self"],["u64"]]]],[11,R[1369],E,R[1370],2,[[["self"]],["u128"]]],[11,R[1371],E,R[1372],2,[[["self"],["u128"]]]],[11,R[1374],E,R[1373],2,[[["self"],["u64"]]]],[6,"ChaChaRng",E,R[1375],N,N],[6,"ChaChaCore",E,"ChaCha with 20 rounds, low-level interface",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,0,[[[R[1376]]],["self"]]],[11,"from",E,E,1,[[[R[1377]]],["self"]]],[11,"from",E,E,2,[[[R[1378]]],["self"]]],[11,"clone",E,E,4,[[["self"]],[R[1376]]]],[11,"clone",E,E,0,[[["self"]],["chacha20rng"]]],[11,"clone",E,E,3,[[["self"]],[R[1377]]]],[11,"clone",E,E,1,[[["self"]],["chacha12rng"]]],[11,"clone",E,E,5,[[["self"]],[R[1378]]]],[11,"clone",E,E,2,[[["self"]],["chacha8rng"]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"generate",E,E,4,[[["self"]]]],[11,"generate",E,E,3,[[["self"]]]],[11,"generate",E,E,5,[[["self"]]]],[11,R[1385],E,E,0,[[["self"]],["u32"]]],[11,R[1386],E,E,0,[[["self"]],["u64"]]],[11,R[1322],E,E,0,[[["self"]]]],[11,R[1321],E,E,0,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],E,E,1,[[["self"]],["u32"]]],[11,R[1386],E,E,1,[[["self"]],["u64"]]],[11,R[1322],E,E,1,[[["self"]]]],[11,R[1321],E,E,1,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],E,E,2,[[["self"]],["u32"]]],[11,R[1386],E,E,2,[[["self"]],["u64"]]],[11,R[1322],E,E,2,[[["self"]]]],[11,R[1321],E,E,2,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1379],E,E,4,[[],["self"]]],[11,R[1379],E,E,0,[[],["self"]]],[11,R[1379],E,E,3,[[],["self"]]],[11,R[1379],E,E,1,[[],["self"]]],[11,R[1379],E,E,5,[[],["self"]]],[11,R[1379],E,E,2,[[],["self"]]]],"p":[[3,R[1380]],[3,R[1381]],[3,"ChaCha8Rng"],[3,R[1382]],[3,R[1383]],[3,R[1384]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[3,"Error",R[1319],R[1522],N,N],[3,"OsRng",E,R[1523],N,N],[11,"new",E,R[1524],0,[[["e"]],["self"]]],[11,"inner",E,R[1525],0,[[["self"]],["error"]]],[11,"take_inner",E,R[1526],0,[[],[["error"],["box",["error"]]]]],[18,R[1305],E,R[1306],0,N],[18,R[1307],E,R[1308],0,N],[11,R[1309],E,R[1310],0,[[["self"]],[[R[49],["i32"]],["i32"]]]],[11,"code",E,R[1527],0,[[["self"]],[[R[574]],[R[49],[R[574]]]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,"BlockRng",R[1320],R[1311],N,N],[12,"core",E,R[1312],1,N],[3,"BlockRng64",E,R[1311],N,N],[12,"core",E,R[1312],2,N],[8,R[1324],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",3,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",3,N],[10,"generate",E,"Generate a new block of results.",3,[[["self"]]]],[11,"new",E,R[1313],1,[[["r"]],["blockrng"]]],[11,"index",E,R[1314],1,[[["self"]],["usize"]]],[11,"reset",E,R[1315],1,[[["self"]]]],[11,R[1316],E,R[1317],1,[[["self"],["usize"]]]],[11,"new",E,R[1313],2,[[["r"]],["blockrng64"]]],[11,"index",E,R[1314],2,[[["self"]],["usize"]]],[11,"reset",E,R[1315],2,[[["self"]]]],[11,R[1316],E,R[1317],2,[[["self"],["usize"]]]],[0,"impls",R[1319],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[1318],N,[[]]],[5,"fill_via_u64_chunks",E,R[1318],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[1319],"Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,"read_u64_into",E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[1319],R[1528],N,N],[10,R[1385],E,R[1529],4,[[["self"]],["u32"]]],[10,R[1386],E,R[1530],4,[[["self"]],["u64"]]],[10,R[1322],E,R[1531],4,[[["self"]]]],[10,R[1321],E,R[1532],4,[[["self"]],[["error"],[R[15],["error"]]]]],[8,"CryptoRng",E,R[1533],N,N],[8,R[1325],E,R[1534],N,N],[16,"Seed",E,R[1535],5,N],[10,R[1379],E,R[1536],5,[[],["self"]]],[11,R[1323],E,R[1537],5,[[["u64"]],["self"]]],[11,"from_rng",E,R[1538],5,[[["rngcore"]],[["error"],[R[15],["error"]]]]],[11,R[1539],E,R[1540],5,[[],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",R[1320],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,R[1385],E,E,1,[[["self"]],["u32"]]],[11,R[1386],E,E,1,[[["self"]],["u64"]]],[11,R[1322],E,E,1,[[["self"]]]],[11,R[1321],E,E,1,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],E,E,2,[[["self"]],["u32"]]],[11,R[1386],E,E,2,[[["self"]],["u64"]]],[11,R[1322],E,E,2,[[["self"]]]],[11,R[1321],E,E,2,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1385],R[1319],E,6,[[["self"]],["u32"]]],[11,R[1386],E,E,6,[[["self"]],["u64"]]],[11,R[1322],E,E,6,[[["self"]]]],[11,R[1321],E,E,6,[[["self"]],[["error"],[R[15],["error"]]]]],[11,R[1379],R[1320],E,1,[[],["self"]]],[11,R[1323],E,E,1,[[["u64"]],["self"]]],[11,"from_rng",E,E,1,[[["rngcore"]],[["error"],[R[15],["error"]]]]],[11,R[1379],E,E,2,[[],["self"]]],[11,R[1323],E,E,2,[[["u64"]],["self"]]],[11,"from_rng",E,E,2,[[["rngcore"]],[["error"],[R[15],["error"]]]]],[11,"from",R[1319],E,0,[[[R[574]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"clone",R[1320],E,1,[[["self"]],["blockrng"]]],[11,"clone",E,E,2,[[["self"]],["blockrng64"]]],[11,"clone",R[1319],E,6,[[["self"]],["osrng"]]],[11,R[23],E,E,6,[[],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1320],E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1319],E,6,[[["self"],[R[38]]],[R[15]]]],[11,"source",E,E,0,[[["self"]],[[R[49],["error"]],["error"]]]],[11,"read",E,E,4,[[["self"]],[[R[15],["usize","error"]],["usize"],["error"]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,R[1324]],[8,"RngCore"],[8,R[1325]],[3,"OsRng"]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,R[1197],"regex",R[1198],N,N],[3,R[1195],E,R[1196],N,N],[3,"RegexSet",E,R[1213],N,N],[3,R[1303],E,R[1214],N,N],[3,R[1215],E,R[1216],N,N],[3,R[1217],E,R[1218],N,N],[3,R[1207],E,R[1208],N,N],[3,R[1201],E,R[1202],N,N],[3,R[1205],E,R[1206],N,N],[3,"Captures",E,"Captures represents a group of captured strings for a…",N,N],[3,"Match",E,R[1199],N,N],[3,"Matches",E,R[1200],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal string replacement.",N,N],[12,"0",E,E,0,N],[3,"Regex",E,"A compiled regular expression for matching Unicode strings.",N,N],[3,R[1211],E,R[1212],N,N],[3,"Split",E,R[1203],N,N],[3,"SplitN",E,R[1204],N,N],[3,R[1209],E,R[1210],N,N],[4,"Error",E,"An error that occurred during parsing or compiling a…",N,N],[13,"Syntax",E,"A syntax error.",1,N],[13,"CompiledTooBig",E,"The compiled program exceeded the set size limit. The…",1,N],[5,"escape",E,R[1304],N,[[["str"]],["string"]]],[0,"bytes",E,"Match regular expressions on arbitrary bytes.",N,N],[3,R[1195],R[1231],R[1196],N,N],[3,R[1197],E,R[1198],N,N],[3,"Match",E,R[1199],N,N],[3,"Regex",E,"A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches",E,R[1200],N,N],[3,R[1201],E,R[1202],N,N],[3,"Split",E,R[1203],N,N],[3,"SplitN",E,R[1204],N,N],[3,R[1205],E,R[1206],N,N],[3,R[1207],E,R[1208],N,N],[3,"Captures",E,"Captures represents a group of captured byte strings for a…",N,N],[3,R[1209],E,R[1210],N,N],[3,R[1211],E,R[1212],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal byte string replacement.",N,N],[12,"0",E,E,2,N],[3,"RegexSet",E,R[1213],N,N],[3,R[1303],E,R[1214],N,N],[3,R[1215],E,R[1216],N,N],[3,R[1217],E,R[1218],N,N],[8,"Replacer",E,R[1296],N,N],[10,R[1297],E,R[1298],3,[[["vec"],["self"],[R[1262]]]]],[11,R[1235],E,R[1236],3,[[["self"]],[[R[49],["cow"]],["cow"]]]],[11,"by_ref",E,R[1237],3,[[["self"]],[R[1238]]]],[11,"new",E,R[1220],4,[[["str"]],[R[1219]]]],[11,"build",E,R[1221],4,[[["self"]],[[R[15],["regex","error"]],["error"],["regex"]]]],[11,R[212],E,R[1222],4,[[["self"],["bool"]],[R[1219]]]],[11,R[213],E,R[1223],4,[[["self"],["bool"]],[R[1219]]]],[11,R[214],E,R[1224],4,[[["self"],["bool"]],[R[1219]]]],[11,R[215],E,R[1225],4,[[["self"],["bool"]],[R[1219]]]],[11,R[210],E,R[1226],4,[[["self"],["bool"]],[R[1219]]]],[11,"unicode",E,R[1227],4,[[["self"],["bool"]],[R[1219]]]],[11,"octal",E,R[208],4,[[["self"],["bool"]],[R[1219]]]],[11,R[1233],E,R[1228],4,[[["self"],["usize"]],[R[1219]]]],[11,R[1229],E,R[1230],4,[[["self"],["usize"]],[R[1219]]]],[11,R[206],E,R[207],4,[[["self"],["u32"]],[R[1219]]]],[11,"new","regex",R[1220],5,[[["str"]],[R[1219]]]],[11,"build",E,R[1221],5,[[["self"]],[["error"],[R[15],["regex","error"]],["regex"]]]],[11,R[212],E,R[1222],5,[[["self"],["bool"]],[R[1219]]]],[11,R[213],E,R[1223],5,[[["self"],["bool"]],[R[1219]]]],[11,R[214],E,R[1224],5,[[["self"],["bool"]],[R[1219]]]],[11,R[215],E,R[1225],5,[[["self"],["bool"]],[R[1219]]]],[11,R[210],E,R[1226],5,[[["self"],["bool"]],[R[1219]]]],[11,"unicode",E,R[1227],5,[[["self"],["bool"]],[R[1219]]]],[11,"octal",E,R[208],5,[[["self"],["bool"]],[R[1219]]]],[11,R[1233],E,R[1228],5,[[["self"],["usize"]],[R[1219]]]],[11,R[1229],E,R[1230],5,[[["self"],["usize"]],[R[1219]]]],[11,R[206],E,R[207],5,[[["self"],["u32"]],[R[1219]]]],[11,"new",R[1231],R[1220],6,[[["i"]],[R[1232]]]],[11,"build",E,R[1234],6,[[["self"]],[[R[15],[R[1242],"error"]],["error"],[R[1242]]]]],[11,R[212],E,R[1222],6,[[["self"],["bool"]],[R[1232]]]],[11,R[213],E,R[1223],6,[[["self"],["bool"]],[R[1232]]]],[11,R[214],E,R[1224],6,[[["self"],["bool"]],[R[1232]]]],[11,R[215],E,R[1225],6,[[["self"],["bool"]],[R[1232]]]],[11,R[210],E,R[1226],6,[[["self"],["bool"]],[R[1232]]]],[11,"unicode",E,R[1227],6,[[["self"],["bool"]],[R[1232]]]],[11,"octal",E,R[208],6,[[["self"],["bool"]],[R[1232]]]],[11,R[1233],E,R[1228],6,[[["self"],["usize"]],[R[1232]]]],[11,R[1229],E,R[1230],6,[[["self"],["usize"]],[R[1232]]]],[11,R[206],E,R[207],6,[[["self"],["u32"]],[R[1232]]]],[11,"new","regex",R[1220],7,[[["i"]],[R[1232]]]],[11,"build",E,R[1234],7,[[["self"]],[[R[15],[R[1242],"error"]],[R[1242]],["error"]]]],[11,R[212],E,R[1222],7,[[["self"],["bool"]],[R[1232]]]],[11,R[213],E,R[1223],7,[[["self"],["bool"]],[R[1232]]]],[11,R[214],E,R[1224],7,[[["self"],["bool"]],[R[1232]]]],[11,R[215],E,R[1225],7,[[["self"],["bool"]],[R[1232]]]],[11,R[210],E,R[1226],7,[[["self"],["bool"]],[R[1232]]]],[11,"unicode",E,R[1227],7,[[["self"],["bool"]],[R[1232]]]],[11,"octal",E,R[208],7,[[["self"],["bool"]],[R[1232]]]],[11,R[1233],E,R[1228],7,[[["self"],["usize"]],[R[1232]]]],[11,R[1229],E,R[1230],7,[[["self"],["usize"]],[R[1232]]]],[11,R[206],E,R[207],7,[[["self"],["u32"]],[R[1232]]]],[11,R[1235],R[1231],R[1236],3,[[["self"]],[[R[49],["cow"]],["cow"]]]],[11,"by_ref",E,R[1237],3,[[["self"]],[R[1238]]]],[11,"start",E,R[1253],8,[[["self"]],["usize"]]],[11,"end",E,R[1254],8,[[["self"]],["usize"]]],[11,"range",E,R[1255],8,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_bytes",E,R[1256],8,[[["self"]]]],[11,"new",E,R[1257],9,[[["str"]],[[R[15],["regex","error"]],["error"],["regex"]]]],[11,"is_match",E,R[1258],9,[[["self"]],["bool"]]],[11,"find",E,R[1259],9,[[["self"]],[["match"],[R[49],["match"]]]]],[11,R[563],E,R[1260],9,[[["self"]],["matches"]]],[11,R[1262],E,R[1261],9,[[["self"]],[[R[49],[R[1262]]],[R[1262]]]]],[11,R[1263],E,R[1264],9,[[["self"]],[R[1265]]]],[11,"split",E,R[1266],9,[[["self"]],["split"]]],[11,"splitn",E,R[1267],9,[[["self"],["usize"]],["splitn"]]],[11,"replace",E,R[1268],9,[[["self"],["replacer"]],["cow"]]],[11,R[1239],E,R[1269],9,[[["self"],["replacer"]],["cow"]]],[11,"replacen",E,R[1270],9,[[["usize"],["self"],["replacer"]],["cow"]]],[11,R[1271],E,R[1272],9,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[1273],E,R[1274],9,[[["self"],["usize"]],[[R[49],["usize"]],["usize"]]]],[11,R[1275],E,R[1276],9,[[["self"],["usize"]],["bool"]]],[11,"find_at",E,R[1277],9,[[["self"],["usize"]],[["match"],[R[49],["match"]]]]],[11,R[1278],E,R[1279],9,[[["self"],[R[1240]]],[["match"],[R[49],["match"]]]]],[11,R[1280],E,"Returns the same as `captures_read`, but starts the search…",9,[[[R[1240]],["usize"],["self"]],[["match"],[R[49],["match"]]]]],[11,R[65],E,R[1281],9,[[["self"]],["str"]]],[11,R[1282],E,R[1283],9,[[["self"]],[R[1284]]]],[11,R[1285],E,R[1286],9,[[["self"]],["usize"]]],[11,R[1287],E,R[1288],9,[[["self"]],[R[1240]]]],[11,"get",E,R[1289],10,[[["self"],["usize"]],[R[49]]]],[11,"len",E,R[1290],10,[[["self"]],["usize"]]],[11,"get",E,R[1291],11,[[["self"],["usize"]],[["match"],[R[49],["match"]]]]],[11,"name",E,R[1292],11,[[["str"],["self"]],[["match"],[R[49],["match"]]]]],[11,"iter",E,R[1210],11,[[["self"]],[R[1293]]]],[11,"expand",E,R[1294],11,[[["vec"],["self"]]]],[11,"len",E,R[1295],11,[[["self"]],["usize"]]],[11,"new","regex",R[1241],12,[[["i"]],[[R[15],[R[1242],"error"]],[R[1242]],["error"]]]],[11,"is_match",E,R[1243],12,[[["str"],["self"]],["bool"]]],[11,"matches",E,R[1244],12,[[["str"],["self"]],[R[1299]]]],[11,"len",E,R[1245],12,[[["self"]],["usize"]]],[11,"patterns",E,R[1246],12,[[["self"]]]],[11,R[1247],E,R[1248],13,[[["self"]],["bool"]]],[11,"matched",E,R[1249],13,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1250],13,[[["self"]],["usize"]]],[11,"iter",E,R[1251],13,[[["self"]],[R[1252]]]],[11,"new",R[1231],R[1241],14,[[["i"]],[[R[15],[R[1242],"error"]],["error"],[R[1242]]]]],[11,"is_match",E,R[1243],14,[[["self"]],["bool"]]],[11,"matches",E,R[1244],14,[[["self"]],[R[1299]]]],[11,"len",E,R[1245],14,[[["self"]],["usize"]]],[11,"patterns",E,R[1246],14,[[["self"]]]],[11,R[1247],E,R[1248],15,[[["self"]],["bool"]]],[11,"matched",E,R[1249],15,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1250],15,[[["self"]],["usize"]]],[11,"iter",E,R[1251],15,[[["self"]],[R[1252]]]],[11,"start","regex",R[1253],16,[[["self"]],["usize"]]],[11,"end",E,R[1254],16,[[["self"]],["usize"]]],[11,"range",E,R[1255],16,[[["self"]],[["range",["usize"]],["usize"]]]],[11,R[65],E,R[1256],16,[[["self"]],["str"]]],[11,"new",E,R[1257],17,[[["str"]],[["error"],[R[15],["regex","error"]],["regex"]]]],[11,"is_match",E,R[1258],17,[[["str"],["self"]],["bool"]]],[11,"find",E,R[1259],17,[[["str"],["self"]],[["match"],[R[49],["match"]]]]],[11,R[563],E,R[1260],17,[[["str"],["self"]],["matches"]]],[11,R[1262],E,R[1261],17,[[["str"],["self"]],[[R[49],[R[1262]]],[R[1262]]]]],[11,R[1263],E,R[1264],17,[[["str"],["self"]],[R[1265]]]],[11,"split",E,R[1266],17,[[["str"],["self"]],["split"]]],[11,"splitn",E,R[1267],17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace",E,R[1268],17,[[["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,R[1239],E,R[1269],17,[[["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,"replacen",E,R[1270],17,[[["usize"],["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,R[1271],E,R[1272],17,[[["str"],["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[1273],E,R[1274],17,[[["str"],["self"],["usize"]],[[R[49],["usize"]],["usize"]]]],[11,R[1275],E,R[1276],17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at",E,R[1277],17,[[["str"],["self"],["usize"]],[["match"],[R[49],["match"]]]]],[11,R[1278],E,R[1279],17,[[["str"],["self"],[R[1240]]],[["match"],[R[49],["match"]]]]],[11,R[1280],E,"Returns the same as captures, but starts the search at the…",17,[[["usize"],["str"],["self"],[R[1240]]],[["match"],[R[49],["match"]]]]],[11,R[65],E,R[1281],17,[[["self"]],["str"]]],[11,R[1282],E,R[1283],17,[[["self"]],[R[1284]]]],[11,R[1285],E,R[1286],17,[[["self"]],["usize"]]],[11,R[1287],E,R[1288],17,[[["self"]],[R[1240]]]],[11,"get",E,R[1289],18,[[["self"],["usize"]],[R[49]]]],[11,"len",E,R[1290],18,[[["self"]],["usize"]]],[11,"get",E,R[1291],19,[[["self"],["usize"]],[["match"],[R[49],["match"]]]]],[11,"name",E,R[1292],19,[[["str"],["self"]],[["match"],[R[49],["match"]]]]],[11,"iter",E,R[1210],19,[[["self"]],[R[1293]]]],[11,"expand",E,R[1294],19,[[["str"],["self"],["string"]]]],[11,"len",E,R[1295],19,[[["self"]],["usize"]]],[8,"Replacer",E,R[1296],N,N],[10,R[1297],E,R[1298],20,[[["self"],[R[1262]],["string"]]]],[11,R[1235],E,R[1302],20,[[["self"]],[[R[49],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[1237],20,[[["self"]],[R[1238]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[51],E,E,12,[[["self"]],[T]]],[11,R[52],E,E,12,[[["self"],[T]]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[50],E,E,13,[[],["i"]]],[11,R[51],E,E,13,[[["self"]],[T]]],[11,R[52],E,E,13,[[["self"],[T]]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[50],E,E,21,[[],["i"]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[50],E,E,22,[[],["i"]]],[11,R[51],E,E,22,[[["self"]],[T]]],[11,R[52],E,E,22,[[["self"],[T]]]],[11,R[12],E,E,22,[[[U]],[R[15]]]],[11,R[13],E,E,22,[[],[R[15]]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[R[18]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[51],E,E,18,[[["self"]],[T]]],[11,R[52],E,E,18,[[["self"],[T]]]],[11,R[12],E,E,18,[[[U]],[R[15]]]],[11,R[13],E,E,18,[[],[R[15]]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[R[18]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[50],E,E,23,[[],["i"]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[50],E,E,24,[[],["i"]]],[11,R[12],E,E,24,[[[U]],[R[15]]]],[11,R[13],E,E,24,[[],[R[15]]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[R[18]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[15]]]],[11,R[13],E,E,19,[[],[R[15]]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[R[18]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[51],E,E,16,[[["self"]],[T]]],[11,R[52],E,E,16,[[["self"],[T]]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[50],E,E,25,[[],["i"]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[51],E,E,17,[[["self"]],[T]]],[11,R[52],E,E,17,[[["self"],[T]]]],[11,R[114],E,E,17,[[["self"]],["string"]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[15]]]],[11,R[13],E,E,26,[[],[R[15]]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[R[18]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[50],E,E,27,[[],["i"]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[50],E,E,28,[[],["i"]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[50],E,E,29,[[],["i"]]],[11,R[12],E,E,29,[[[U]],[R[15]]]],[11,R[13],E,E,29,[[],[R[15]]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[114],E,E,1,[[["self"]],["string"]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",R[1231],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[114],E,E,9,[[["self"]],["string"]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[50],E,E,30,[[],["i"]]],[11,R[12],E,E,30,[[[U]],[R[15]]]],[11,R[13],E,E,30,[[],[R[15]]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[R[18]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[50],E,E,31,[[],["i"]]],[11,R[12],E,E,31,[[[U]],[R[15]]]],[11,R[13],E,E,31,[[],[R[15]]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[R[18]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[50],E,E,32,[[],["i"]]],[11,R[12],E,E,32,[[[U]],[R[15]]]],[11,R[13],E,E,32,[[],[R[15]]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[R[18]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[50],E,E,33,[[],["i"]]],[11,R[12],E,E,33,[[[U]],[R[15]]]],[11,R[13],E,E,33,[[],[R[15]]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[R[18]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[50],E,E,34,[[],["i"]]],[11,R[12],E,E,34,[[[U]],[R[15]]]],[11,R[13],E,E,34,[[],[R[15]]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[50],E,E,35,[[],["i"]]],[11,R[12],E,E,35,[[[U]],[R[15]]]],[11,R[13],E,E,35,[[],[R[15]]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[16],E,E,35,[[["self"]],[R[18]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[15]]]],[11,R[13],E,E,36,[[],[R[15]]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[16],E,E,36,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[51],E,E,14,[[["self"]],[T]]],[11,R[52],E,E,14,[[["self"],[T]]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[50],E,E,15,[[],["i"]]],[11,R[51],E,E,15,[[["self"]],[T]]],[11,R[52],E,E,15,[[["self"],[T]]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[50],E,E,37,[[],["i"]]],[11,R[12],E,E,37,[[[U]],[R[15]]]],[11,R[13],E,E,37,[[],[R[15]]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[16],E,E,37,[[["self"]],[R[18]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[50],E,E,38,[[],["i"]]],[11,R[51],E,E,38,[[["self"]],[T]]],[11,R[52],E,E,38,[[["self"],[T]]]],[11,R[12],E,E,38,[[[U]],[R[15]]]],[11,R[13],E,E,38,[[],[R[15]]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[16],E,E,38,[[["self"]],[R[18]]]],[11,R[1297],E,E,36,[[["vec"],["self"],[R[1262]]]]],[11,R[1235],E,E,36,[[["self"]],[[R[49],["cow"]],["cow"]]]],[11,R[1297],E,E,2,[[["vec"],["self"],[R[1262]]]]],[11,R[1235],E,E,2,[[["self"]],[[R[49],["cow"]],["cow"]]]],[11,R[1297],"regex",E,26,[[["self"],[R[1262]],["string"]]]],[11,R[1235],E,E,26,[[["self"]],[[R[49],["cow"]],["cow",["str"]]]]],[11,R[1297],E,E,0,[[["self"],[R[1262]],["string"]]]],[11,R[1235],E,E,0,[[["self"]],[[R[49],["cow"]],["cow",["str"]]]]],[11,"next",R[1231],E,30,[[["self"]],[["match"],[R[49],["match"]]]]],[11,"next",E,E,31,[[["self"]],[[R[49],[R[1262]]],[R[1262]]]]],[11,"next",E,E,32,[[["self"]],[R[49]]]],[11,"next",E,E,33,[[["self"]],[R[49]]]],[11,"next",E,E,34,[[["self"]],[[R[49],[R[49]]],[R[49],["str"]]]]],[11,R[53],E,E,34,[[["self"]]]],[11,"next",E,E,35,[[["self"]],[[R[49],[R[49]]],[R[49],["match"]]]]],[11,"next","regex",E,21,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,22,[[["self"]]]],[11,"next",R[1231],E,37,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,37,[[["self"]]]],[11,"next",E,E,38,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,38,[[["self"]]]],[11,"next","regex",E,24,[[["self"]],[[R[49],[R[49]]],[R[49],["str"]]]]],[11,R[53],E,E,24,[[["self"]]]],[11,"next",E,E,27,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"next",E,E,28,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"next",E,E,29,[[["self"]],[[R[49],[R[49]]],[R[49],["match"]]]]],[11,"next",E,E,23,[[["self"]],[[R[49],[R[1262]]],[R[1262]]]]],[11,"next",E,E,25,[[["self"]],[["match"],[R[49],["match"]]]]],[11,R[50],E,E,13,[[]]],[11,R[50],R[1231],E,15,[[]]],[11,R[55],"regex",E,21,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[55],E,E,22,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[55],R[1231],E,37,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[55],E,E,38,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,"clone","regex",E,1,[[["self"]],["error"]]],[11,"clone",R[1231],E,8,[[["self"]],["match"]]],[11,"clone",E,E,9,[[["self"]],["regex"]]],[11,"clone",E,E,10,[[["self"]],[R[1240]]]],[11,"clone","regex",E,12,[[["self"]],[R[1242]]]],[11,"clone",E,E,13,[[["self"]],[R[1299]]]],[11,"clone",E,E,22,[[["self"]],[R[1252]]]],[11,"clone",R[1231],E,14,[[["self"]],[R[1242]]]],[11,"clone",E,E,15,[[["self"]],[R[1299]]]],[11,"clone",E,E,38,[[["self"]],[R[1252]]]],[11,"clone","regex",E,16,[[["self"]],["match"]]],[11,"clone",E,E,17,[[["self"]],["regex"]]],[11,"clone",E,E,18,[[["self"]],[R[1240]]]],[11,"eq",E,E,1,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["error"],["self"]],["bool"]]],[11,"eq",R[1231],E,8,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,8,[[["match"],["self"]],["bool"]]],[11,"eq","regex",E,16,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["match"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1231],R[1300],9,[[["self"],[R[38]]],[R[15]]]],[11,"fmt","regex",R[1300],17,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1231],E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,R[1300],9,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,11,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,36,[[["self"],[R[38]]],[R[15]]]],[11,"fmt","regex",E,13,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1231],E,15,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[38]]],[R[15]]]],[11,"fmt","regex",E,16,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,R[1300],17,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,19,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,26,[[["self"],[R[38]]],[R[15]]]],[11,R[1355],R[1231],R[1301],9,[[["str"]],[[R[15],["regex","error"]],["error"],["regex"]]]],[11,R[1355],"regex",R[1301],17,[[["str"]],[["error"],[R[15],["regex","error"]],["regex"]]]],[11,"index",R[1231],E,11,[[["self"],["usize"]]]],[11,"index",E,E,11,[[["str"],["self"]]]],[11,"index","regex",E,19,[[["self"],["usize"]],["str"]]],[11,"index",E,E,19,[[["str"],["self"]],["str"]]],[11,R[251],E,E,1,[[["self"]],["str"]]],[11,R[1235],E,R[1302],20,[[["self"]],[[R[49],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[1237],20,[[["self"]],[R[1238]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,R[1195]],[3,R[1195]],[3,R[1197]],[3,R[1197]],[3,"Match"],[3,"Regex"],[3,R[1207]],[3,"Captures"],[3,"RegexSet"],[3,R[1303]],[3,"RegexSet"],[3,R[1303]],[3,"Match"],[3,"Regex"],[3,R[1207]],[3,"Captures"],[8,"Replacer"],[3,R[1215]],[3,R[1217]],[3,R[1201]],[3,R[1205]],[3,"Matches"],[3,R[1211]],[3,"Split"],[3,"SplitN"],[3,R[1209]],[3,"Matches"],[3,R[1201]],[3,"Split"],[3,"SplitN"],[3,R[1205]],[3,R[1209]],[3,R[1211]],[3,R[1215]],[3,R[1217]]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser",R[145],"A convenience parser for regular expressions.",N,N],[3,R[137],E,R[138],N,N],[3,R[298],E,"An error that occurs when the Unicode-aware `\\w` class is…",N,N],[4,"Error",E,"This error type encompasses any error that can be returned…",N,N],[13,"Parse",E,"An error that occurred while translating concrete syntax…",0,N],[13,"Translate",E,"An error that occurred while translating abstract syntax…",0,N],[5,"escape",E,R[1304],N,[[["str"]],["string"]]],[5,"escape_into",E,"Escapes all meta characters in `text` and writes the…",N,[[["str"],["string"]]]],[5,"is_meta_character",E,"Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character",E,R[119],N,[[["char"]],["bool"]]],[5,"try_is_word_character",E,R[119],N,[[["char"]],[["bool"],[R[120]],[R[15],["bool",R[120]]]]]],[5,"is_word_byte",E,"Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast",E,"Defines an abstract syntax for regular expressions.",N,N],[3,"Error",R[122],"An error that occurred while parsing a regular expression…",N,N],[3,"Span",E,"Span represents the position information of a single AST…",N,N],[12,"start",E,"The start byte offset.",1,N],[12,"end",E,"The end byte offset.",1,N],[3,"Position",E,"A single position in a regular expression.",N,N],[12,"offset",E,"The absolute offset of this position, starting at `0` from…",2,N],[12,"line",E,"The line number, starting at `1`.",2,N],[12,"column",E,"The approximate column number, starting at `1`.",2,N],[3,R[270],E,"An abstract syntax tree for a singular expression along…",N,N],[12,"ast",E,"The actual ast.",3,N],[12,"comments",E,"All comments found in the original regular expression.",3,N],[3,"Comment",E,"A comment from a regular expression with an associated span.",N,N],[12,"span",E,"The span of this comment, including the beginning `#` and…",4,N],[12,"comment",E,"The comment text, starting with the first character…",4,N],[3,R[129],E,R[130],N,N],[12,"span",E,"The span of this alternation.",5,N],[12,"asts",E,"The alternate regular expressions.",5,N],[3,"Concat",E,R[131],N,N],[12,"span",E,"The span of this concatenation.",6,N],[12,"asts",E,"The concatenation regular expressions.",6,N],[3,R[164],E,"A single literal expression.",N,N],[12,"span",E,"The span of this literal.",7,N],[12,"kind",E,"The kind of this literal.",7,N],[12,"c",E,"The Unicode scalar value corresponding to this literal.",7,N],[3,R[271],E,"A Perl character class.",N,N],[12,"span",E,R[121],8,N],[12,"kind",E,"The kind of Perl class.",8,N],[12,"negated",E,"Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,R[272],E,"An ASCII character class.",N,N],[12,"span",E,R[121],9,N],[12,"kind",E,"The kind of ASCII class.",9,N],[12,"negated",E,"Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,R[146],E,"A Unicode character class.",N,N],[12,"span",E,R[121],10,N],[12,"negated",E,"Whether this class is negated or not.",10,N],[12,"kind",E,"The kind of Unicode class.",10,N],[3,R[273],E,"A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span",E,R[121],11,N],[12,"negated",E,"Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind",E,"The type of this set. A set is either a normal union of…",11,N],[3,R[274],E,"A single character class range in a set.",N,N],[12,"span",E,"The span of this range.",12,N],[12,"start",E,"The start of this range.",12,N],[12,"end",E,"The end of this range.",12,N],[3,R[275],E,"A union of items inside a character class set.",N,N],[12,"span",E,"The span of the items in this operation. e.g., the…",13,N],[12,"items",E,"The sequence of items that make up this union.",13,N],[3,R[276],E,"A Unicode character class set operation.",N,N],[12,"span",E,"The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind",E,"The type of this set operation.",14,N],[12,"lhs",E,"The left hand side of the operation.",14,N],[12,"rhs",E,"The right hand side of the operation.",14,N],[3,R[125],E,R[126],N,N],[12,"span",E,"The span of this assertion.",15,N],[12,"kind",E,"The assertion kind, e.g., `\\b` or `^`.",15,N],[3,R[127],E,"A repetition operation applied to a regular expression.",N,N],[12,"span",E,"The span of this operation.",16,N],[12,"op",E,"The actual operation.",16,N],[12,"greedy",E,"Whether this operation was applied greedily or not.",16,N],[12,"ast",E,"The regular expression under repetition.",16,N],[3,R[277],E,"The repetition operator itself.",N,N],[12,"span",E,"The span of this operator. This includes things like `+`,…",17,N],[12,"kind",E,"The type of operation.",17,N],[3,"Group",E,R[128],N,N],[12,"span",E,"The span of this group.",18,N],[12,"kind",E,"The kind of this group.",18,N],[12,"ast",E,"The regular expression in this group.",18,N],[3,R[136],E,"A capture name.",N,N],[12,"span",E,"The span of this capture name.",19,N],[12,"name",E,"The capture name.",19,N],[12,"index",E,"The capture index.",19,N],[3,"SetFlags",E,"A group of flags that is not applied to a particular…",N,N],[12,"span",E,"The span of these flags, including the grouping parentheses.",20,N],[12,"flags",E,"The actual sequence of flags.",20,N],[3,"Flags",E,"A group of flags.",N,N],[12,"span",E,"The span of this group of flags.",21,N],[12,"items",E,"A sequence of flag items. Each item is either a flag or a…",21,N],[3,R[278],E,"A single item in a group of flags.",N,N],[12,"span",E,"The span of this item.",22,N],[12,"kind",E,"The kind of this item.",22,N],[4,R[147],E,"The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded",E,"The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid",E,"An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid",E,"An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral",E,"An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed",E,"An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty",E,"Note that this error variant is no longer used. Namely, a…",23,N],[13,"DecimalInvalid",E,"An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty",E,"A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid",E,"A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit",E,"An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof",E,"EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized",E,"An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation",E,"A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate",E,"A flag was used twice, e.g., `i-i`.",23,N],[12,R[124],R[123],"The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation",R[122],"The negation operator was used twice, e.g., `-i-s`.",23,N],[12,R[124],R[123],"The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof",R[122],"Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized",E,"Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate",E,"A duplicate capture name was found.",23,N],[12,R[124],R[123],"The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty",R[122],"A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid",E,"An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof",E,"A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed",E,"An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened",E,"An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded",E,"The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid",E,"The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountDecimalEmpty",E,"An opening `{` was not followed by a valid decimal value.…",23,N],[13,"RepetitionCountUnclosed",E,"An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing",E,"A repetition operator was applied to a missing…",23,N],[13,"UnicodeClassInvalid",E,"The Unicode class is not valid. This typically occurs when…",23,N],[13,"UnsupportedBackreference",E,"When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround",E,"When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast",E,"An abstract syntax tree for a single regular expression.",N,N],[13,"Empty",E,"An empty regex that matches everything.",24,N],[13,"Flags",E,"A set of flags, e.g., `(?is)`.",24,N],[13,R[164],E,"A single character literal, which includes escape sequences.",24,N],[13,"Dot",E,"The \"any character\" class.",24,N],[13,R[125],E,R[126],24,N],[13,"Class",E,"A single character class. This includes all forms of…",24,N],[13,R[127],E,"A repetition operator applied to an arbitrary regular…",24,N],[13,"Group",E,R[128],24,N],[13,R[129],E,R[130],24,N],[13,"Concat",E,R[131],24,N],[4,R[279],E,"The kind of a single literal expression.",N,N],[13,"Verbatim",E,"The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation",E,"The literal is written as an escape because it is…",25,N],[13,"Octal",E,"The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed",E,"The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace",E,"The literal is written as a hex code with a bracketed…",25,N],[13,"Special",E,"The literal is written as a specially recognized escape,…",25,N],[4,R[280],E,"The type of a special literal.",N,N],[13,"Bell",E,"Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed",E,"Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab",E,"Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed",E,"Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn",E,"Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab",E,"Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space",E,"Space, spelled `\\ ` (`\\x20`). Note that this can only…",26,N],[4,R[281],E,"The type of a Unicode hex literal.",N,N],[13,"X",E,"A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort",E,"A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong",E,"A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class",E,"A single character class expression.",N,N],[13,R[152],E,R[132],28,N],[13,"Perl",E,R[133],28,N],[13,R[134],E,R[135],28,N],[4,R[282],E,"The available Perl character classes.",N,N],[13,"Digit",E,"Decimal numbers.",29,N],[13,"Space",E,"Whitespace.",29,N],[13,"Word",E,"Word characters.",29,N],[4,R[283],E,"The available ASCII character classes.",N,N],[13,"Alnum",E,"`[0-9A-Za-z]`",30,N],[13,"Alpha",E,"`[A-Za-z]`",30,N],[13,"Ascii",E,"`[\\x00-\\x7F]`",30,N],[13,"Blank",E,"`[ \\t]`",30,N],[13,"Cntrl",E,"`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit",E,"`[0-9]`",30,N],[13,"Graph",E,"`[!-~]`",30,N],[13,"Lower",E,"`[a-z]`",30,N],[13,"Print",E,"`[ -~]`",30,N],[13,"Punct",E,"`[!-/:-@\\[-`{-~]`",30,N],[13,"Space",E,"`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper",E,"`[A-Z]`",30,N],[13,"Word",E,"`[0-9A-Za-z_]`",30,N],[13,"Xdigit",E,"`[0-9A-Fa-f]`",30,N],[4,R[284],E,"The available forms of Unicode character classes.",N,N],[13,"OneLetter",E,"A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named",E,"A binary property, general category or script. The string…",31,N],[13,"NamedValue",E,"A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name",E,"The property name (which may be empty).",31,N],[12,"value",E,"The property value (which may be empty).",31,N],[4,R[285],R[122],"The type of op used in a Unicode character class.",N,N],[13,"Equal",E,"A property set to a specific value, e.g.,…",32,N],[13,"Colon",E,"A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual",E,"A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet",E,"A character class set.",N,N],[13,"Item",E,"An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp",E,"A single binary operation (i.e., &&, -- or ~~).",33,N],[4,R[286],E,"A single component of a character class set.",N,N],[13,"Empty",E,"An empty item.",34,N],[13,R[164],E,"A single literal.",34,N],[13,"Range",E,"A range between two literals.",34,N],[13,"Ascii",E,"An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,R[152],E,R[132],34,N],[13,"Perl",E,R[133],34,N],[13,R[134],E,R[135],34,N],[13,"Union",E,"A union of items.",34,N],[4,R[287],E,"The type of a Unicode character class set operation.",N,N],[13,"Intersection",E,"The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference",E,"The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference",E,"The symmetric difference of two sets. The symmetric…",35,N],[4,R[288],E,"An assertion kind.",N,N],[13,R[150],E,"`^`",36,N],[13,"EndLine",E,"`$`",36,N],[13,R[151],E,"`\\A`",36,N],[13,"EndText",E,"`\\z`",36,N],[13,R[148],E,"`\\b`",36,N],[13,"NotWordBoundary",E,"`\\B`",36,N],[4,R[157],E,R[158],N,N],[13,R[159],E,"`?`",37,N],[13,R[160],E,"`*`",37,N],[13,R[161],E,"`+`",37,N],[13,"Range",E,"`{m,n}`",37,N],[4,R[162],E,"A range repetition operator.",N,N],[13,"Exactly",E,"`{m}`",38,N],[13,"AtLeast",E,"`{m,}`",38,N],[13,"Bounded",E,"`{m,n}`",38,N],[4,R[153],E,"The kind of a group.",N,N],[13,R[154],E,"`(a)`",39,N],[13,R[136],E,"`(?P<name>a)`",39,N],[13,R[155],E,"`(?:a)` and `(?i:a)`",39,N],[4,R[289],E,"The kind of an item in a group of flags.",N,N],[13,"Negation",E,"A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag",E,"A single flag in a group.",40,N],[4,"Flag",E,"A single flag.",N,N],[13,R[1356],E,"`i`",41,N],[13,"MultiLine",E,"`m`",41,N],[13,"DotMatchesNewLine",E,"`s`",41,N],[13,"SwapGreed",E,"`U`",41,N],[13,R[152],E,"`u`",41,N],[13,"IgnoreWhitespace",E,"`x`",41,N],[5,"visit",E,R[163],N,[[["visitor"],["ast"]],[R[15]]]],[0,"parse",E,"This module provides a regular expression parser.",N,N],[3,R[137],R[218],R[138],N,N],[3,"Parser",E,"A regular expression parser.",N,N],[11,"new",E,R[204],42,[[],[R[139]]]],[11,"build",E,R[205],42,[[["self"]],["parser"]]],[11,R[206],E,R[207],42,[[["self"],["u32"]],[R[139]]]],[11,"octal",E,R[208],42,[[["self"],["bool"]],[R[139]]]],[11,R[210],E,R[211],42,[[["self"],["bool"]],[R[139]]]],[11,"new",E,R[217],43,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into an abstract syntax tree.",43,[[["str"],["self"]],[["error"],[R[15],["ast","error"]],["ast"]]]],[11,"parse_with_comments",E,"Parse the regular expression and return an abstract syntax…",43,[[["str"],["self"]],[[R[15],[R[140],"error"]],[R[140]],["error"]]]],[0,"print",R[122],"This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer",R[219],"A printer for a regular expression abstract syntax tree.",N,N],[11,"new",E,R[167],44,[[],["printer"]]],[11,"print",E,R[168],44,[[["self"],["write"],["ast"]],[R[15]]]],[8,"Visitor",R[122],"A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output",E,"The result of visiting an AST.",45,N],[16,"Err",E,"An error that visiting an AST might return.",45,N],[10,"finish",E,R[172],45,[[],[R[15]]]],[11,"start",E,R[252],45,[[["self"]]]],[11,R[173],E,R[253],45,[[["self"],["ast"]],[R[15]]]],[11,R[174],E,R[254],45,[[["self"],["ast"]],[R[15]]]],[11,R[175],E,R[255],45,[[["self"]],[R[15]]]],[11,R[256],E,R[257],45,[[["self"],[R[141]]],[R[15]]]],[11,R[258],E,R[259],45,[[["self"],[R[141]]],[R[15]]]],[11,R[260],E,R[261],45,[[["self"],[R[142]]],[R[15]]]],[11,R[262],E,R[263],45,[[["self"],[R[142]]],[R[15]]]],[11,R[264],E,R[265],45,[[["self"],[R[142]]],[R[15]]]],[11,"kind",E,R[176],46,[[["self"]],[R[177]]]],[11,"pattern",E,R[178],46,[[["self"]],["str"]]],[11,"span",E,R[179],46,[[["self"]],["span"]]],[11,"auxiliary_span",E,"Return an auxiliary span. This span exists only for some…",46,[[["self"]],[[R[49],["span"]],["span"]]]],[11,"new",E,"Create a new span with the given positions.",1,[[[R[143]]],["span"]]],[11,"splat",E,"Create a new span using the given position as the start…",1,[[[R[143]]],["span"]]],[11,"with_start",E,"Create a new span by replacing the starting the position…",1,[[[R[143]]],["span"]]],[11,"with_end",E,"Create a new span by replacing the ending the position…",1,[[[R[143]]],["span"]]],[11,"is_one_line",E,"Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,R[166],E,"Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new",E,"Create a new position with the given information.",2,[[["usize"]],[R[143]]]],[11,"span",E,"Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,R[166],E,"Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast",E,"Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast",E,"Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte",E,"If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[[R[49],["u8"]],["u8"]]]],[11,"digits",E,"The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span",E,"Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name",E,"Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],[[R[49],[R[144]]],[R[144]]]]],[11,R[202],E,"Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal",E,"Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union",E,"Build a set from a union.",33,[[[R[225]]],[R[242]]]],[11,"span",E,"Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span",E,"Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid",E,"Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push",E,"Push a new item in this union.",13,[[["self"],[R[141]]]]],[11,"into_item",E,"Return this union as a character class set item.",13,[[],[R[141]]]],[11,"is_valid",E,"Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags",E,"If this group is non-capturing, then this returns the…",18,[[["self"]],[[R[49],["flags"]],["flags"]]]],[11,"is_capturing",E,"Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index",E,"Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],[R[49],["u32"]]]]],[11,"add_item",E,"Add the given item to this sequence of flags.",21,[[["self"],[R[226]]],[[R[49],["usize"]],["usize"]]]],[11,"flag_state",E,"Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[[R[49],["bool"]],["bool"]]]],[11,"is_negation",E,"Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir",R[145],"Defines a high-level intermediate representation for…",N,N],[3,R[299],R[156],"An error that occurs when Unicode-aware simple case…",N,N],[3,"Error",E,"An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir",E,"A high-level intermediate representation (HIR) for a…",N,N],[3,R[146],E,R[149],N,N],[3,R[300],E,"An iterator over all ranges in a Unicode character class.",N,N],[3,R[292],E,"A single range of characters represented by Unicode scalar…",N,N],[3,R[293],E,"A set of characters represented by arbitrary bytes (where…",N,N],[3,R[301],E,"An iterator over all ranges in a byte character class.",N,N],[3,R[294],E,"A single range of characters represented by arbitrary bytes.",N,N],[3,"Group",E,"The high-level intermediate representation for a group.",N,N],[12,"kind",E,"The kind of this group. If it is a capturing group, then…",47,N],[12,"hir",E,"The expression inside the capturing group, which may be…",47,N],[3,R[127],E,"The high-level intermediate representation of a repetition…",N,N],[12,"kind",E,"The kind of this repetition operator.",48,N],[12,"greedy",E,"Whether this repetition operator is greedy or not. A…",48,N],[12,"hir",E,"The expression being repeated.",48,N],[4,R[147],E,"The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed",E,"This error occurs when a Unicode feature is used when…",49,N],[13,R[1194],E,"This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound",E,"This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound",E,"This occurs when an unrecognized Unicode property value…",49,N],[13,"UnicodePerlClassNotFound",E,"This occurs when a Unicode-aware Perl character class…",49,N],[13,"UnicodeCaseUnavailable",E,"This occurs when the Unicode simple case mapping tables…",49,N],[13,"EmptyClassNotAllowed",E,"This occurs when the translator attempts to construct a…",49,N],[4,"HirKind",E,"The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty",E,"The empty regular expression, which matches everything,…",50,N],[13,R[164],E,"A single literal character that matches exactly this…",50,N],[13,"Class",E,"A single character class that matches any of the…",50,N],[13,"Anchor",E,"An anchor assertion. An anchor assertion match always has…",50,N],[13,R[148],E,"A word boundary assertion, which may or may not be Unicode…",50,N],[13,R[127],E,"A repetition operation applied to a child expression.",50,N],[13,"Group",E,"A possibly capturing group, which contains a child…",50,N],[13,"Concat",E,"A concatenation of expressions. A concatenation always has…",50,N],[13,R[129],E,"An alternation of expressions. An alternation always has…",50,N],[4,R[164],E,"The high-level intermediate representation of a literal.",N,N],[13,R[152],E,"A single character represented by a Unicode scalar value.",51,N],[13,"Byte",E,"A single character represented by an arbitrary byte.",51,N],[4,"Class",E,"The high-level intermediate representation of a character…",N,N],[13,R[152],E,R[149],52,N],[13,"Bytes",E,"A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor",E,"The high-level intermediate representation for an anchor…",N,N],[13,R[150],E,"Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine",E,"Match the end of a line or the end of text. Specifically,…",53,N],[13,R[151],E,"Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText",E,"Match the end of text. Specifically, this matches at the…",53,N],[4,R[148],E,"The high-level intermediate representation for a…",N,N],[13,R[152],E,"Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate",E,"Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii",E,"Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate",E,"Match an ASCII-only negation of a word boundary.",54,N],[4,R[153],E,"The kind of group.",N,N],[13,R[154],E,"A normal unnamed capturing group.",55,N],[13,R[136],E,"A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index",E,"The capture index of the group.",55,N],[13,R[155],R[156],"A non-capturing group.",55,N],[4,R[157],E,R[158],N,N],[13,R[159],E,"Matches a sub-expression zero or one times.",56,N],[13,R[160],E,"Matches a sub-expression zero or more times.",56,N],[13,R[161],E,"Matches a sub-expression one or more times.",56,N],[13,"Range",E,"Matches a sub-expression within a bounded range of times.",56,N],[4,R[162],E,"The kind of a counted repetition operator.",N,N],[13,"Exactly",E,"Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast",E,"Matches a sub-expression at least this many times.",57,N],[13,"Bounded",E,"Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit",E,R[163],N,[[["hir"],["visitor"]],[R[15]]]],[0,R[180],E,"Provides routines for extracting literal prefixes and…",N,N],[3,"Literals",R[220],"A set of literal byte strings extracted from a regular…",N,N],[3,R[164],E,"A single member of a set of literals extracted from a…",N,N],[11,"empty",E,"Returns a new empty set of literals using default limits.",58,[[],[R[165]]]],[11,"prefixes",E,"Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],[R[165]]]],[11,"suffixes",E,"Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],[R[165]]]],[11,"limit_size",E,"Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size",E,"Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],[R[165]]]],[11,"limit_class",E,"Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class",E,"Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],[R[165]]]],[11,R[165],E,"Returns the set of literals as a slice. Its order is…",58,[[["self"]]]],[11,"min_len",E,"Returns the length of the smallest literal.",58,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,"all_complete",E,"Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete",E,"Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty",E,"Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,R[166],E,"Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty",E,"Returns a new empty set of literals using this set's limits.",58,[[["self"]],[R[165]]]],[11,R[1387],E,"Returns the longest common prefix of all members in this…",58,[[["self"]]]],[11,"longest_common_suffix",E,"Returns the longest common suffix of all members in this…",58,[[["self"]]]],[11,"trim_suffix",E,"Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],[[R[49],[R[165]]],[R[165]]]]],[11,"unambiguous_prefixes",E,"Returns a new set of prefixes of this set of literals that…",58,[[["self"]],[R[165]]]],[11,"unambiguous_suffixes",E,"Returns a new set of suffixes of this set of literals that…",58,[[["self"]],[R[165]]]],[11,"union_prefixes",E,"Unions the prefixes from the given expression to this set.",58,[[["hir"],["self"]],["bool"]]],[11,"union_suffixes",E,"Unions the suffixes from the given expression to this set.",58,[[["hir"],["self"]],["bool"]]],[11,"union",E,"Unions this set with another set.",58,[[["self"],[R[165]]],["bool"]]],[11,"cross_product",E,"Extends this set with another set.",58,[[[R[165]],["self"]],["bool"]]],[11,"cross_add",E,"Extends each literal in this set with the bytes given.",58,[[["self"]],["bool"]]],[11,"add",E,"Adds the given literal to this set.",58,[[["self"],[R[180]]],["bool"]]],[11,"add_char_class",E,"Extends each literal in this set with the character class…",58,[[["self"],[R[185]]],["bool"]]],[11,"add_byte_class",E,"Extends each literal in this set with the byte class given.",58,[[[R[191]],["self"]],["bool"]]],[11,"cut",E,"Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse",E,"Reverses all members in place.",58,[[["self"]]]],[11,"clear",E,"Clears this set of all members.",58,[[["self"]]]],[11,"new",E,"Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]],["u8"]],[R[180]]]],[11,"empty",E,"Returns a new complete empty literal.",59,[[],[R[180]]]],[11,"is_cut",E,"Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut",E,"Cuts this literal.",59,[[["self"]]]],[0,"print",R[156],"This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer",R[221],"A printer for a regular expression's high-level…",N,N],[11,"new",E,R[167],60,[[],["printer"]]],[11,"print",E,R[168],60,[[["hir"],["self"],["write"]],[R[15]]]],[0,R[171],R[156],"Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,R[290],R[222],"A builder for constructing an AST->HIR translator.",N,N],[3,R[291],E,"A translator maps abstract syntax to a high level…",N,N],[11,"new",E,"Create a new translator builder with a default c…",61,[[],[R[169]]]],[11,"build",E,"Build a translator using the current configuration.",61,[[["self"]],[R[170]]]],[11,R[209],E,"When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],[R[169]]]],[11,R[212],E,"Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],[R[169]]]],[11,R[213],E,"Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],[R[169]]]],[11,R[214],E,"Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],[R[169]]]],[11,R[215],E,"Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],[R[169]]]],[11,"unicode",E,R[216],61,[[["self"],["bool"]],[R[169]]]],[11,"new",E,"Create a new translator using the default configuration.",62,[[],[R[170]]]],[11,R[171],E,"Translate the given abstract syntax tree (AST) into a high…",62,[[["str"],["self"],["ast"]],[[R[15],["hir","error"]],["hir"],["error"]]]],[8,"Visitor",R[156],"A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output",E,"The result of visiting an HIR.",63,N],[16,"Err",E,"An error that visiting an HIR might return.",63,N],[10,"finish",E,R[172],63,[[],[R[15]]]],[11,"start",E,R[266],63,[[["self"]]]],[11,R[173],E,R[267],63,[[["hir"],["self"]],[R[15]]]],[11,R[174],E,R[268],63,[[["hir"],["self"]],[R[15]]]],[11,R[175],E,R[269],63,[[["self"]],[R[15]]]],[11,"kind",E,R[176],64,[[["self"]],[R[177]]]],[11,"pattern",E,R[178],64,[[["self"]],["str"]]],[11,"span",E,R[179],64,[[["self"]],["span"]]],[11,"kind",E,"Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind",E,"Consumes ownership of this HIR expression and returns its…",65,[[],["hirkind"]]],[11,"empty",E,"Returns an empty HIR expression.",65,[[],["hir"]]],[11,R[180],E,"Creates a literal HIR expression.",65,[[[R[180]]],["hir"]]],[11,"class",E,"Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor",E,"Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary",E,"Creates a word boundary assertion HIR expression.",65,[[[R[227]]],["hir"]]],[11,R[181],E,"Creates a repetition HIR expression.",65,[[[R[181]]],["hir"]]],[11,"group",E,"Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat",E,"Returns the concatenation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,R[224],E,"Returns the alternation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"dot",E,"Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any",E,"Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,R[184],E,"Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions",E,"Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start",E,R[182],65,[[["self"]],["bool"]]],[11,"is_anchored_end",E,R[182],65,[[["self"]],["bool"]]],[11,"is_line_anchored_start",E,R[182],65,[[["self"]],["bool"]]],[11,"is_line_anchored_end",E,R[182],65,[[["self"]],["bool"]]],[11,"is_any_anchored_start",E,R[183],65,[[["self"]],["bool"]]],[11,"is_any_anchored_end",E,R[183],65,[[["self"]],["bool"]]],[11,R[203],E,"Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_literal",E,"Return true if and only if this HIR is a simple literal.…",65,[[["self"]],["bool"]]],[11,"is_alternation_literal",E,"Return true if and only if this HIR is either a simple…",65,[[["self"]],["bool"]]],[11,R[166],E,"Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs",E,"Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode",E,"Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,R[186],E,"Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate",E,"Negate this character class in place.",52,[[["self"]]]],[11,R[184],E,"Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new",E,R[190],66,[[["i"]],[R[185]]]],[11,"empty",E,R[192],66,[[],[R[185]]]],[11,"push",E,R[193],66,[[["self"],[R[189]]]]],[11,"iter",E,R[194],66,[[["self"]],["classunicodeiter"]]],[11,"ranges",E,R[195],66,[[["self"]]]],[11,R[186],E,R[187],66,[[["self"]]]],[11,"try_case_fold_simple",E,R[187],66,[[["self"]],[[R[15],[R[188]]],[R[188]]]]],[11,"negate",E,"Negate this character class.",66,[[["self"]]]],[11,"union",E,"Union this character class with the given character class,…",66,[[["self"],[R[185]]]]],[11,R[196],E,"Intersect this character class with the given character…",66,[[["self"],[R[185]]]]],[11,R[197],E,"Subtract the given character class from this character…",66,[[["self"],[R[185]]]]],[11,R[198],E,"Compute the symmetric difference of the given character…",66,[[["self"],[R[185]]]]],[11,"new",E,"Create a new Unicode scalar value range for a character…",67,[[["char"]],[R[189]]]],[11,"start",E,R[200],67,[[["self"]],["char"]]],[11,"end",E,R[201],67,[[["self"]],["char"]]],[11,"new",E,R[190],68,[[["i"]],[R[191]]]],[11,"empty",E,R[192],68,[[],[R[191]]]],[11,"push",E,R[193],68,[[["self"],[R[199]]]]],[11,"iter",E,R[194],68,[[["self"]],["classbytesiter"]]],[11,"ranges",E,R[195],68,[[["self"]]]],[11,R[186],E,R[187],68,[[["self"]]]],[11,"negate",E,"Negate this byte class.",68,[[["self"]]]],[11,"union",E,"Union this byte class with the given byte class, in place.",68,[[[R[191]],["self"]]]],[11,R[196],E,"Intersect this byte class with the given byte class, in…",68,[[[R[191]],["self"]]]],[11,R[197],E,"Subtract the given byte class from this byte class, in…",68,[[[R[191]],["self"]]]],[11,R[198],E,"Compute the symmetric difference of the given byte…",68,[[[R[191]],["self"]]]],[11,"is_all_ascii",E,"Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new",E,"Create a new byte range for a character class.",69,[[["u8"]],[R[199]]]],[11,"start",E,R[200],69,[[["self"]],["u8"]]],[11,"end",E,R[201],69,[[["self"]],["u8"]]],[11,R[202],E,"Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,R[203],E,"Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new",R[145],R[204],70,[[],[R[139]]]],[11,"build",E,R[205],70,[[["self"]],["parser"]]],[11,R[206],E,R[207],70,[[["self"],["u32"]],[R[139]]]],[11,"octal",E,R[208],70,[[["self"],["bool"]],[R[139]]]],[11,R[209],E,"When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],[R[139]]]],[11,R[210],E,R[211],70,[[["self"],["bool"]],[R[139]]]],[11,R[212],E,"Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],[R[139]]]],[11,R[213],E,"Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],[R[139]]]],[11,R[214],E,"Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],[R[139]]]],[11,R[215],E,"Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],[R[139]]]],[11,"unicode",E,R[216],70,[[["self"],["bool"]],[R[139]]]],[11,"new",E,R[217],71,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into a high level…",71,[[["str"],["self"]],[["hir"],[R[15],["hir"]]]]],[0,"utf8",E,"Converts ranges of Unicode scalar values to equivalent…",N,N],[3,R[295],R[223],"A single inclusive range of UTF-8 bytes.",N,N],[12,"start",E,"Start of byte range (inclusive).",72,N],[12,"end",E,"End of byte range (inclusive).",72,N],[3,R[297],E,"An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,R[296],E,"Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One",E,"One byte range.",73,N],[13,"Two",E,"Two successive byte ranges.",73,N],[13,"Three",E,"Three successive byte ranges.",73,N],[13,"Four",E,"Four successive byte ranges.",73,N],[11,"as_slice",E,"Returns the underlying sequence of byte ranges as a slice.",73,[[["self"]]]],[11,"len",E,"Returns the number of byte ranges in this sequence.",73,[[["self"]],["usize"]]],[11,"matches",E,"Returns true if and only if a prefix of `bytes` matches…",73,[[["self"]],["bool"]]],[11,"matches",E,"Returns true if and only if the given byte is in this range.",72,[[["self"],["u8"]],["bool"]]],[11,"new",E,"Create a new iterator over UTF-8 byte ranges for the…",74,[[["char"]],["self"]]],[6,"Result",R[145],"A type alias for dealing with errors returned by this crate.",N,N],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[51],E,E,71,[[["self"]],[T]]],[11,R[52],E,E,71,[[["self"],[T]]]],[11,R[12],E,E,71,[[[U]],[R[15]]]],[11,R[13],E,E,71,[[],[R[15]]]],[11,R[17],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"]],[T]]],[11,R[16],E,E,71,[[["self"]],[R[18]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[51],E,E,70,[[["self"]],[T]]],[11,R[52],E,E,70,[[["self"],[T]]]],[11,R[12],E,E,70,[[[U]],[R[15]]]],[11,R[13],E,E,70,[[],[R[15]]]],[11,R[17],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"]],[T]]],[11,R[16],E,E,70,[[["self"]],[R[18]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[114],E,E,75,[[["self"]],["string"]]],[11,R[12],E,E,75,[[[U]],[R[15]]]],[11,R[13],E,E,75,[[],[R[15]]]],[11,R[17],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[["self"]],[T]]],[11,R[16],E,E,75,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",R[122],E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[51],E,E,46,[[["self"]],[T]]],[11,R[52],E,E,46,[[["self"],[T]]]],[11,R[114],E,E,46,[[["self"]],["string"]]],[11,R[12],E,E,46,[[[U]],[R[15]]]],[11,R[13],E,E,46,[[],[R[15]]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[16],E,E,46,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[51],E,E,11,[[["self"]],[T]]],[11,R[52],E,E,11,[[["self"],[T]]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[51],E,E,12,[[["self"]],[T]]],[11,R[52],E,E,12,[[["self"],[T]]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[51],E,E,13,[[["self"]],[T]]],[11,R[52],E,E,13,[[["self"],[T]]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[51],E,E,14,[[["self"]],[T]]],[11,R[52],E,E,14,[[["self"],[T]]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[51],E,E,15,[[["self"]],[T]]],[11,R[52],E,E,15,[[["self"],[T]]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[51],E,E,16,[[["self"]],[T]]],[11,R[52],E,E,16,[[["self"],[T]]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[51],E,E,17,[[["self"]],[T]]],[11,R[52],E,E,17,[[["self"],[T]]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[51],E,E,18,[[["self"]],[T]]],[11,R[52],E,E,18,[[["self"],[T]]]],[11,R[12],E,E,18,[[[U]],[R[15]]]],[11,R[13],E,E,18,[[],[R[15]]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[R[18]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[51],E,E,19,[[["self"]],[T]]],[11,R[52],E,E,19,[[["self"],[T]]]],[11,R[12],E,E,19,[[[U]],[R[15]]]],[11,R[13],E,E,19,[[],[R[15]]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[R[18]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[51],E,E,20,[[["self"]],[T]]],[11,R[52],E,E,20,[[["self"],[T]]]],[11,R[12],E,E,20,[[[U]],[R[15]]]],[11,R[13],E,E,20,[[],[R[15]]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[R[18]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[51],E,E,21,[[["self"]],[T]]],[11,R[52],E,E,21,[[["self"],[T]]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[51],E,E,22,[[["self"]],[T]]],[11,R[52],E,E,22,[[["self"],[T]]]],[11,R[12],E,E,22,[[[U]],[R[15]]]],[11,R[13],E,E,22,[[],[R[15]]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[R[18]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[51],E,E,23,[[["self"]],[T]]],[11,R[52],E,E,23,[[["self"],[T]]]],[11,R[114],E,E,23,[[["self"]],["string"]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[51],E,E,24,[[["self"]],[T]]],[11,R[52],E,E,24,[[["self"],[T]]]],[11,R[114],E,E,24,[[["self"]],["string"]]],[11,R[12],E,E,24,[[[U]],[R[15]]]],[11,R[13],E,E,24,[[],[R[15]]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[R[18]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[51],E,E,25,[[["self"]],[T]]],[11,R[52],E,E,25,[[["self"],[T]]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[51],E,E,26,[[["self"]],[T]]],[11,R[52],E,E,26,[[["self"],[T]]]],[11,R[12],E,E,26,[[[U]],[R[15]]]],[11,R[13],E,E,26,[[],[R[15]]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[R[18]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[51],E,E,27,[[["self"]],[T]]],[11,R[52],E,E,27,[[["self"],[T]]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[51],E,E,28,[[["self"]],[T]]],[11,R[52],E,E,28,[[["self"],[T]]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[51],E,E,29,[[["self"]],[T]]],[11,R[52],E,E,29,[[["self"],[T]]]],[11,R[12],E,E,29,[[[U]],[R[15]]]],[11,R[13],E,E,29,[[],[R[15]]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[R[18]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[51],E,E,30,[[["self"]],[T]]],[11,R[52],E,E,30,[[["self"],[T]]]],[11,R[12],E,E,30,[[[U]],[R[15]]]],[11,R[13],E,E,30,[[],[R[15]]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[R[18]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[51],E,E,31,[[["self"]],[T]]],[11,R[52],E,E,31,[[["self"],[T]]]],[11,R[12],E,E,31,[[[U]],[R[15]]]],[11,R[13],E,E,31,[[],[R[15]]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[R[18]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[51],E,E,32,[[["self"]],[T]]],[11,R[52],E,E,32,[[["self"],[T]]]],[11,R[12],E,E,32,[[[U]],[R[15]]]],[11,R[13],E,E,32,[[],[R[15]]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[R[18]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[51],E,E,33,[[["self"]],[T]]],[11,R[52],E,E,33,[[["self"],[T]]]],[11,R[12],E,E,33,[[[U]],[R[15]]]],[11,R[13],E,E,33,[[],[R[15]]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[R[18]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[51],E,E,34,[[["self"]],[T]]],[11,R[52],E,E,34,[[["self"],[T]]]],[11,R[12],E,E,34,[[[U]],[R[15]]]],[11,R[13],E,E,34,[[],[R[15]]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[R[18]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[51],E,E,35,[[["self"]],[T]]],[11,R[52],E,E,35,[[["self"],[T]]]],[11,R[12],E,E,35,[[[U]],[R[15]]]],[11,R[13],E,E,35,[[],[R[15]]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[16],E,E,35,[[["self"]],[R[18]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[51],E,E,36,[[["self"]],[T]]],[11,R[52],E,E,36,[[["self"],[T]]]],[11,R[12],E,E,36,[[[U]],[R[15]]]],[11,R[13],E,E,36,[[],[R[15]]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[16],E,E,36,[[["self"]],[R[18]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[51],E,E,37,[[["self"]],[T]]],[11,R[52],E,E,37,[[["self"],[T]]]],[11,R[12],E,E,37,[[[U]],[R[15]]]],[11,R[13],E,E,37,[[],[R[15]]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[16],E,E,37,[[["self"]],[R[18]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[51],E,E,38,[[["self"]],[T]]],[11,R[52],E,E,38,[[["self"],[T]]]],[11,R[12],E,E,38,[[[U]],[R[15]]]],[11,R[13],E,E,38,[[],[R[15]]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[16],E,E,38,[[["self"]],[R[18]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[51],E,E,39,[[["self"]],[T]]],[11,R[52],E,E,39,[[["self"],[T]]]],[11,R[12],E,E,39,[[[U]],[R[15]]]],[11,R[13],E,E,39,[[],[R[15]]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[R[18]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[51],E,E,40,[[["self"]],[T]]],[11,R[52],E,E,40,[[["self"],[T]]]],[11,R[12],E,E,40,[[[U]],[R[15]]]],[11,R[13],E,E,40,[[],[R[15]]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[R[18]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[51],E,E,41,[[["self"]],[T]]],[11,R[52],E,E,41,[[["self"],[T]]]],[11,R[12],E,E,41,[[[U]],[R[15]]]],[11,R[13],E,E,41,[[],[R[15]]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[R[18]]]],[11,"into",R[218],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[51],E,E,42,[[["self"]],[T]]],[11,R[52],E,E,42,[[["self"],[T]]]],[11,R[12],E,E,42,[[[U]],[R[15]]]],[11,R[13],E,E,42,[[],[R[15]]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[R[18]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[51],E,E,43,[[["self"]],[T]]],[11,R[52],E,E,43,[[["self"],[T]]]],[11,R[12],E,E,43,[[[U]],[R[15]]]],[11,R[13],E,E,43,[[],[R[15]]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[R[18]]]],[11,"into",R[219],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[15]]]],[11,R[13],E,E,44,[[],[R[15]]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[16],E,E,44,[[["self"]],[R[18]]]],[11,"into",R[156],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[114],E,E,76,[[["self"]],["string"]]],[11,R[12],E,E,76,[[[U]],[R[15]]]],[11,R[13],E,E,76,[[],[R[15]]]],[11,R[17],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[["self"]],[T]]],[11,R[16],E,E,76,[[["self"]],[R[18]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[51],E,E,64,[[["self"]],[T]]],[11,R[52],E,E,64,[[["self"],[T]]]],[11,R[114],E,E,64,[[["self"]],["string"]]],[11,R[12],E,E,64,[[[U]],[R[15]]]],[11,R[13],E,E,64,[[],[R[15]]]],[11,R[17],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"]],[T]]],[11,R[16],E,E,64,[[["self"]],[R[18]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[51],E,E,65,[[["self"]],[T]]],[11,R[52],E,E,65,[[["self"],[T]]]],[11,R[114],E,E,65,[[["self"]],["string"]]],[11,R[12],E,E,65,[[[U]],[R[15]]]],[11,R[13],E,E,65,[[],[R[15]]]],[11,R[17],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"]],[T]]],[11,R[16],E,E,65,[[["self"]],[R[18]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[51],E,E,66,[[["self"]],[T]]],[11,R[52],E,E,66,[[["self"],[T]]]],[11,R[12],E,E,66,[[[U]],[R[15]]]],[11,R[13],E,E,66,[[],[R[15]]]],[11,R[17],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"]],[T]]],[11,R[16],E,E,66,[[["self"]],[R[18]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[50],E,E,77,[[],["i"]]],[11,R[12],E,E,77,[[[U]],[R[15]]]],[11,R[13],E,E,77,[[],[R[15]]]],[11,R[17],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[["self"]],[T]]],[11,R[16],E,E,77,[[["self"]],[R[18]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[51],E,E,67,[[["self"]],[T]]],[11,R[52],E,E,67,[[["self"],[T]]]],[11,R[12],E,E,67,[[[U]],[R[15]]]],[11,R[13],E,E,67,[[],[R[15]]]],[11,R[17],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[["self"]],[T]]],[11,R[16],E,E,67,[[["self"]],[R[18]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[51],E,E,68,[[["self"]],[T]]],[11,R[52],E,E,68,[[["self"],[T]]]],[11,R[12],E,E,68,[[[U]],[R[15]]]],[11,R[13],E,E,68,[[],[R[15]]]],[11,R[17],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"]],[T]]],[11,R[16],E,E,68,[[["self"]],[R[18]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[50],E,E,78,[[],["i"]]],[11,R[12],E,E,78,[[[U]],[R[15]]]],[11,R[13],E,E,78,[[],[R[15]]]],[11,R[17],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[["self"]],[T]]],[11,R[16],E,E,78,[[["self"]],[R[18]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[51],E,E,69,[[["self"]],[T]]],[11,R[52],E,E,69,[[["self"],[T]]]],[11,R[12],E,E,69,[[[U]],[R[15]]]],[11,R[13],E,E,69,[[],[R[15]]]],[11,R[17],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"]],[T]]],[11,R[16],E,E,69,[[["self"]],[R[18]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[51],E,E,47,[[["self"]],[T]]],[11,R[52],E,E,47,[[["self"],[T]]]],[11,R[12],E,E,47,[[[U]],[R[15]]]],[11,R[13],E,E,47,[[],[R[15]]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[16],E,E,47,[[["self"]],[R[18]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[51],E,E,48,[[["self"]],[T]]],[11,R[52],E,E,48,[[["self"],[T]]]],[11,R[12],E,E,48,[[[U]],[R[15]]]],[11,R[13],E,E,48,[[],[R[15]]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[16],E,E,48,[[["self"]],[R[18]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[51],E,E,49,[[["self"]],[T]]],[11,R[52],E,E,49,[[["self"],[T]]]],[11,R[114],E,E,49,[[["self"]],["string"]]],[11,R[12],E,E,49,[[[U]],[R[15]]]],[11,R[13],E,E,49,[[],[R[15]]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[16],E,E,49,[[["self"]],[R[18]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[51],E,E,50,[[["self"]],[T]]],[11,R[52],E,E,50,[[["self"],[T]]]],[11,R[12],E,E,50,[[[U]],[R[15]]]],[11,R[13],E,E,50,[[],[R[15]]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[16],E,E,50,[[["self"]],[R[18]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[51],E,E,51,[[["self"]],[T]]],[11,R[52],E,E,51,[[["self"],[T]]]],[11,R[12],E,E,51,[[[U]],[R[15]]]],[11,R[13],E,E,51,[[],[R[15]]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"]],[T]]],[11,R[16],E,E,51,[[["self"]],[R[18]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[51],E,E,52,[[["self"]],[T]]],[11,R[52],E,E,52,[[["self"],[T]]]],[11,R[12],E,E,52,[[[U]],[R[15]]]],[11,R[13],E,E,52,[[],[R[15]]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"]],[T]]],[11,R[16],E,E,52,[[["self"]],[R[18]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[51],E,E,53,[[["self"]],[T]]],[11,R[52],E,E,53,[[["self"],[T]]]],[11,R[12],E,E,53,[[[U]],[R[15]]]],[11,R[13],E,E,53,[[],[R[15]]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"]],[T]]],[11,R[16],E,E,53,[[["self"]],[R[18]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[51],E,E,54,[[["self"]],[T]]],[11,R[52],E,E,54,[[["self"],[T]]]],[11,R[12],E,E,54,[[[U]],[R[15]]]],[11,R[13],E,E,54,[[],[R[15]]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"]],[T]]],[11,R[16],E,E,54,[[["self"]],[R[18]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[51],E,E,55,[[["self"]],[T]]],[11,R[52],E,E,55,[[["self"],[T]]]],[11,R[12],E,E,55,[[[U]],[R[15]]]],[11,R[13],E,E,55,[[],[R[15]]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"]],[T]]],[11,R[16],E,E,55,[[["self"]],[R[18]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[51],E,E,56,[[["self"]],[T]]],[11,R[52],E,E,56,[[["self"],[T]]]],[11,R[12],E,E,56,[[[U]],[R[15]]]],[11,R[13],E,E,56,[[],[R[15]]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"]],[T]]],[11,R[16],E,E,56,[[["self"]],[R[18]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[51],E,E,57,[[["self"]],[T]]],[11,R[52],E,E,57,[[["self"],[T]]]],[11,R[12],E,E,57,[[[U]],[R[15]]]],[11,R[13],E,E,57,[[],[R[15]]]],[11,R[17],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"]],[T]]],[11,R[16],E,E,57,[[["self"]],[R[18]]]],[11,"into",R[220],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[51],E,E,58,[[["self"]],[T]]],[11,R[52],E,E,58,[[["self"],[T]]]],[11,R[12],E,E,58,[[[U]],[R[15]]]],[11,R[13],E,E,58,[[],[R[15]]]],[11,R[17],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[["self"]],[T]]],[11,R[16],E,E,58,[[["self"]],[R[18]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[51],E,E,59,[[["self"]],[T]]],[11,R[52],E,E,59,[[["self"],[T]]]],[11,R[12],E,E,59,[[[U]],[R[15]]]],[11,R[13],E,E,59,[[],[R[15]]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[["self"]],[T]]],[11,R[16],E,E,59,[[["self"]],[R[18]]]],[11,"into",R[221],E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[12],E,E,60,[[[U]],[R[15]]]],[11,R[13],E,E,60,[[],[R[15]]]],[11,R[17],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[["self"]],[T]]],[11,R[16],E,E,60,[[["self"]],[R[18]]]],[11,"into",R[222],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[51],E,E,61,[[["self"]],[T]]],[11,R[52],E,E,61,[[["self"],[T]]]],[11,R[12],E,E,61,[[[U]],[R[15]]]],[11,R[13],E,E,61,[[],[R[15]]]],[11,R[17],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"]],[T]]],[11,R[16],E,E,61,[[["self"]],[R[18]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[51],E,E,62,[[["self"]],[T]]],[11,R[52],E,E,62,[[["self"],[T]]]],[11,R[12],E,E,62,[[[U]],[R[15]]]],[11,R[13],E,E,62,[[],[R[15]]]],[11,R[17],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"]],[T]]],[11,R[16],E,E,62,[[["self"]],[R[18]]]],[11,"into",R[223],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[51],E,E,72,[[["self"]],[T]]],[11,R[52],E,E,72,[[["self"],[T]]]],[11,R[12],E,E,72,[[[U]],[R[15]]]],[11,R[13],E,E,72,[[],[R[15]]]],[11,R[17],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"]],[T]]],[11,R[16],E,E,72,[[["self"]],[R[18]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[50],E,E,74,[[],["i"]]],[11,R[12],E,E,74,[[[U]],[R[15]]]],[11,R[13],E,E,74,[[],[R[15]]]],[11,R[17],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[["self"]],[T]]],[11,R[16],E,E,74,[[["self"]],[R[18]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[51],E,E,73,[[["self"]],[T]]],[11,R[52],E,E,73,[[["self"],[T]]]],[11,R[12],E,E,73,[[[U]],[R[15]]]],[11,R[13],E,E,73,[[],[R[15]]]],[11,R[17],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[["self"]],[T]]],[11,R[16],E,E,73,[[["self"]],[R[18]]]],[11,"drop",R[122],E,24,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",R[156],E,65,[[["self"]]]],[11,"as_ref",R[220],E,59,[[["self"]]]],[11,"from",R[145],E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"next",R[156],E,77,[[["self"]],[[R[49],[R[189]]],[R[189]]]]],[11,"next",E,E,78,[[["self"]],[[R[199]],[R[49],[R[199]]]]]],[11,"next",R[223],E,74,[[["self"]],[R[49]]]],[11,"clone",R[218],E,42,[[["self"]],[R[139]]]],[11,"clone",E,E,43,[[["self"]],["parser"]]],[11,"clone",R[122],E,46,[[["self"]],["error"]]],[11,"clone",E,E,23,[[["self"]],[R[177]]]],[11,"clone",E,E,1,[[["self"]],["span"]]],[11,"clone",E,E,2,[[["self"]],[R[143]]]],[11,"clone",E,E,3,[[["self"]],[R[140]]]],[11,"clone",E,E,4,[[["self"]],["comment"]]],[11,"clone",E,E,24,[[["self"]],["ast"]]],[11,"clone",E,E,5,[[["self"]],[R[224]]]],[11,"clone",E,E,6,[[["self"]],["concat"]]],[11,"clone",E,E,7,[[["self"]],[R[180]]]],[11,"clone",E,E,25,[[["self"]],[R[233]]]],[11,"clone",E,E,26,[[["self"]],[R[234]]]],[11,"clone",E,E,27,[[["self"]],[R[235]]]],[11,"clone",E,E,28,[[["self"]],["class"]]],[11,"clone",E,E,8,[[["self"]],[R[236]]]],[11,"clone",E,E,29,[[["self"]],[R[237]]]],[11,"clone",E,E,9,[[["self"]],[R[238]]]],[11,"clone",E,E,30,[[["self"]],[R[144]]]],[11,"clone",E,E,10,[[["self"]],[R[185]]]],[11,"clone",E,E,31,[[["self"]],[R[239]]]],[11,"clone",E,E,32,[[["self"]],[R[240]]]],[11,"clone",E,E,11,[[["self"]],[R[241]]]],[11,"clone",E,E,33,[[["self"]],[R[242]]]],[11,"clone",E,E,34,[[["self"]],[R[141]]]],[11,"clone",E,E,12,[[["self"]],[R[243]]]],[11,"clone",E,E,13,[[["self"]],[R[225]]]],[11,"clone",E,E,14,[[["self"]],[R[142]]]],[11,"clone",E,E,35,[[["self"]],[R[244]]]],[11,"clone",E,E,15,[[["self"]],[R[245]]]],[11,"clone",E,E,36,[[["self"]],[R[246]]]],[11,"clone",E,E,16,[[["self"]],[R[181]]]],[11,"clone",E,E,17,[[["self"]],[R[247]]]],[11,"clone",E,E,37,[[["self"]],[R[229]]]],[11,"clone",E,E,38,[[["self"]],[R[230]]]],[11,"clone",E,E,18,[[["self"]],["group"]]],[11,"clone",E,E,39,[[["self"]],[R[228]]]],[11,"clone",E,E,19,[[["self"]],[R[248]]]],[11,"clone",E,E,20,[[["self"]],[R[249]]]],[11,"clone",E,E,21,[[["self"]],["flags"]]],[11,"clone",E,E,22,[[["self"]],[R[226]]]],[11,"clone",E,E,40,[[["self"]],[R[250]]]],[11,"clone",E,E,41,[[["self"]],["flag"]]],[11,"clone",R[145],E,0,[[["self"]],["error"]]],[11,"clone",R[220],E,58,[[["self"]],[R[165]]]],[11,"clone",E,E,59,[[["self"]],[R[180]]]],[11,"clone",R[222],E,61,[[["self"]],[R[169]]]],[11,"clone",E,E,62,[[["self"]],[R[170]]]],[11,"clone",R[156],E,64,[[["self"]],["error"]]],[11,"clone",E,E,49,[[["self"]],[R[177]]]],[11,"clone",E,E,65,[[["self"]],["hir"]]],[11,"clone",E,E,50,[[["self"]],["hirkind"]]],[11,"clone",E,E,51,[[["self"]],[R[180]]]],[11,"clone",E,E,52,[[["self"]],["class"]]],[11,"clone",E,E,66,[[["self"]],[R[185]]]],[11,"clone",E,E,67,[[["self"]],[R[189]]]],[11,"clone",E,E,68,[[["self"]],[R[191]]]],[11,"clone",E,E,69,[[["self"]],[R[199]]]],[11,"clone",E,E,53,[[["self"]],["anchor"]]],[11,"clone",E,E,54,[[["self"]],[R[227]]]],[11,"clone",E,E,47,[[["self"]],["group"]]],[11,"clone",E,E,55,[[["self"]],[R[228]]]],[11,"clone",E,E,48,[[["self"]],[R[181]]]],[11,"clone",E,E,56,[[["self"]],[R[229]]]],[11,"clone",E,E,57,[[["self"]],[R[230]]]],[11,"clone",R[145],E,70,[[["self"]],[R[139]]]],[11,"clone",E,E,71,[[["self"]],["parser"]]],[11,"clone",R[223],E,73,[[["self"]],[R[231]]]],[11,"clone",E,E,72,[[["self"]],[R[232]]]],[11,R[23],R[218],E,42,[[],[R[139]]]],[11,R[23],R[222],E,61,[[],[R[169]]]],[11,R[23],R[156],E,67,[[],[R[189]]]],[11,R[23],E,E,69,[[],[R[199]]]],[11,R[23],R[145],E,70,[[],[R[139]]]],[11,"cmp",R[122],E,1,[[["self"],["span"]],[R[37]]]],[11,"cmp",E,E,2,[[[R[143]],["self"]],[R[37]]]],[11,"cmp",R[220],E,59,[[[R[180]],["self"]],[R[37]]]],[11,"cmp",R[156],E,67,[[["self"],[R[189]]],[R[37]]]],[11,"cmp",E,E,69,[[["self"],[R[199]]],[R[37]]]],[11,"cmp",R[223],E,73,[[[R[231]],["self"]],[R[37]]]],[11,"cmp",E,E,72,[[["self"],[R[232]]],[R[37]]]],[11,"eq",R[122],E,46,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,46,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[177]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[177]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["span"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["span"]],["bool"]]],[11,"eq",E,E,2,[[[R[143]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[143]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[140]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[140]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"eq",E,E,24,[[["self"],["ast"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["ast"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[224]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[224]]],["bool"]]],[11,"eq",E,E,6,[[["concat"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["concat"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[180]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[180]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[233]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[233]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[234]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[235]]],["bool"]]],[11,"eq",E,E,28,[[["class"],["self"]],["bool"]]],[11,"ne",E,E,28,[[["class"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[236]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[236]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[237]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[238]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[238]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[144]]],["bool"]]],[11,"eq",E,E,10,[[[R[185]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[185]],["self"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[239]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[239]]],["bool"]]],[11,"eq",E,E,32,[[[R[240]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[241]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[241]]],["bool"]]],[11,"eq",E,E,33,[[[R[242]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[242]],["self"]],["bool"]]],[11,"eq",E,E,34,[[[R[141]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[141]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[243]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[243]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[225]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[225]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[142]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[142]]],["bool"]]],[11,"eq",E,E,35,[[[R[244]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[245]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[245]],["self"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[246]]],["bool"]]],[11,"eq",E,E,16,[[[R[181]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[181]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[247]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[247]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[229]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[229]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[230]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[230]]],["bool"]]],[11,"eq",E,E,18,[[["group"],["self"]],["bool"]]],[11,"ne",E,E,18,[[["group"],["self"]],["bool"]]],[11,"eq",E,E,39,[[[R[228]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[228]],["self"]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[248]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[248]]],["bool"]]],[11,"eq",E,E,20,[[[R[249]],["self"]],["bool"]]],[11,"ne",E,E,20,[[[R[249]],["self"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["flags"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["flags"]],["bool"]]],[11,"eq",E,E,22,[[[R[226]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[226]],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[250]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[250]],["self"]],["bool"]]],[11,"eq",E,E,41,[[["self"],["flag"]],["bool"]]],[11,"eq",R[145],E,0,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["error"],["self"]],["bool"]]],[11,"eq",R[220],E,58,[[[R[165]],["self"]],["bool"]]],[11,"ne",E,E,58,[[[R[165]],["self"]],["bool"]]],[11,"eq",E,E,59,[[[R[180]],["self"]],["bool"]]],[11,"eq",R[156],E,64,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,64,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,49,[[[R[177]],["self"]],["bool"]]],[11,"eq",E,E,65,[[["hir"],["self"]],["bool"]]],[11,"ne",E,E,65,[[["hir"],["self"]],["bool"]]],[11,"eq",E,E,50,[[["hirkind"],["self"]],["bool"]]],[11,"ne",E,E,50,[[["hirkind"],["self"]],["bool"]]],[11,"eq",E,E,51,[[[R[180]],["self"]],["bool"]]],[11,"ne",E,E,51,[[[R[180]],["self"]],["bool"]]],[11,"eq",E,E,52,[[["class"],["self"]],["bool"]]],[11,"ne",E,E,52,[[["class"],["self"]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[185]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[185]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[189]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[189]]],["bool"]]],[11,"eq",E,E,68,[[[R[191]],["self"]],["bool"]]],[11,"ne",E,E,68,[[[R[191]],["self"]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[199]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[199]]],["bool"]]],[11,"eq",E,E,53,[[["anchor"],["self"]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[227]]],["bool"]]],[11,"eq",E,E,47,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,47,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,55,[[[R[228]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[228]],["self"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[181]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[181]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[229]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[229]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[230]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[230]]],["bool"]]],[11,"eq",R[223],E,73,[[[R[231]],["self"]],["bool"]]],[11,"ne",E,E,73,[[[R[231]],["self"]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[232]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[232]]],["bool"]]],[11,R[61],R[122],E,1,[[["self"],["span"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],E,E,2,[[[R[143]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],R[220],E,59,[[[R[180]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,R[61],R[156],E,67,[[["self"],[R[189]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,67,[[["self"],[R[189]]],["bool"]]],[11,"le",E,E,67,[[["self"],[R[189]]],["bool"]]],[11,"gt",E,E,67,[[["self"],[R[189]]],["bool"]]],[11,"ge",E,E,67,[[["self"],[R[189]]],["bool"]]],[11,R[61],E,E,69,[[["self"],[R[199]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,69,[[["self"],[R[199]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[199]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[199]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[199]]],["bool"]]],[11,R[61],R[223],E,73,[[[R[231]],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,73,[[[R[231]],["self"]],["bool"]]],[11,"le",E,E,73,[[[R[231]],["self"]],["bool"]]],[11,"gt",E,E,73,[[[R[231]],["self"]],["bool"]]],[11,"ge",E,E,73,[[[R[231]],["self"]],["bool"]]],[11,R[61],E,E,72,[[["self"],[R[232]]],[[R[49],[R[37]]],[R[37]]]]],[11,"lt",E,E,72,[[["self"],[R[232]]],["bool"]]],[11,"le",E,E,72,[[["self"],[R[232]]],["bool"]]],[11,"gt",E,E,72,[[["self"],[R[232]]],["bool"]]],[11,"ge",E,E,72,[[["self"],[R[232]]],["bool"]]],[11,"fmt",R[122],E,46,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,24,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[145],E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[156],E,64,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,49,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,65,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,76,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[145],E,75,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[218],E,42,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,43,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[219],E,44,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[122],E,46,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,24,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,25,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,26,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,27,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,28,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,29,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,9,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,30,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,31,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,32,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,11,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,33,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,34,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,35,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,15,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,36,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,37,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,38,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,39,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,19,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,20,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,21,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,22,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,40,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,41,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[145],E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[220],E,58,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,59,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[221],E,60,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[222],E,61,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,62,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[156],E,64,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,49,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,65,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,50,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,51,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,52,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,66,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,77,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,67,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,68,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,78,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,69,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,53,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,54,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,47,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,55,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,48,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,56,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,57,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[145],E,70,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,71,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[156],E,76,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[145],E,75,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[223],E,73,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,72,[[["self"],[R[38]]],[R[15]]]],[11,"deref",R[220],E,59,[[["self"]],["vec"]]],[11,"deref_mut",E,E,59,[[["self"]],["vec"]]],[11,R[251],R[122],E,46,[[["self"]],["str"]]],[11,R[251],R[145],E,0,[[["self"]],["str"]]],[11,R[251],R[156],E,64,[[["self"]],["str"]]],[11,"start",R[122],R[252],45,[[["self"]]]],[11,R[173],E,R[253],45,[[["self"],["ast"]],[R[15]]]],[11,R[174],E,R[254],45,[[["self"],["ast"]],[R[15]]]],[11,R[175],E,R[255],45,[[["self"]],[R[15]]]],[11,R[256],E,R[257],45,[[["self"],[R[141]]],[R[15]]]],[11,R[258],E,R[259],45,[[["self"],[R[141]]],[R[15]]]],[11,R[260],E,R[261],45,[[["self"],[R[142]]],[R[15]]]],[11,R[262],E,R[263],45,[[["self"],[R[142]]],[R[15]]]],[11,R[264],E,R[265],45,[[["self"],[R[142]]],[R[15]]]],[11,"start",R[156],R[266],63,[[["self"]]]],[11,R[173],E,R[267],63,[[["hir"],["self"]],[R[15]]]],[11,R[174],E,R[268],63,[[["hir"],["self"]],[R[15]]]],[11,R[175],E,R[269],63,[[["self"]],[R[15]]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,R[270]],[3,"Comment"],[3,R[129]],[3,"Concat"],[3,R[164]],[3,R[271]],[3,R[272]],[3,R[146]],[3,R[273]],[3,R[274]],[3,R[275]],[3,R[276]],[3,R[125]],[3,R[127]],[3,R[277]],[3,"Group"],[3,R[136]],[3,"SetFlags"],[3,"Flags"],[3,R[278]],[4,R[147]],[4,"Ast"],[4,R[279]],[4,R[280]],[4,R[281]],[4,"Class"],[4,R[282]],[4,R[283]],[4,R[284]],[4,R[285]],[4,"ClassSet"],[4,R[286]],[4,R[287]],[4,R[288]],[4,R[157]],[4,R[162]],[4,R[153]],[4,R[289]],[4,"Flag"],[3,R[137]],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,R[127]],[4,R[147]],[4,"HirKind"],[4,R[164]],[4,"Class"],[4,"Anchor"],[4,R[148]],[4,R[153]],[4,R[157]],[4,R[162]],[3,"Literals"],[3,R[164]],[3,"Printer"],[3,R[290]],[3,R[291]],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,R[146]],[3,R[292]],[3,R[293]],[3,R[294]],[3,R[137]],[3,"Parser"],[3,R[295]],[4,R[296]],[3,R[297]],[3,R[298]],[3,R[299]],[3,R[300]],[3,R[301]]]};
searchIndex["roxmltree"]={"doc":"Represent an XML 1.0 document as a read-only tree.","i":[[3,"TextPos",R[376],R[400],N,N],[12,"row",E,E,0,N],[12,"col",E,E,0,N],[3,"Document",E,"An XML tree container.",N,N],[3,"PI",E,R[377],N,N],[12,"target",E,E,1,N],[12,"value",E,E,1,N],[3,R[391],E,"An attribute.",N,N],[3,R[392],E,"A namespace.",N,N],[3,R[393],E,"An expanded name.",N,N],[3,"Node",E,"A node.",N,N],[3,R[394],E,"Iterator over ancestors.",N,N],[3,R[395],E,"Iterator over previous siblings.",N,N],[3,R[396],E,"Iterator over next siblings.",N,N],[3,R[397],E,"Iterator over first children.",N,N],[3,R[398],E,"Iterator over last children.",N,N],[3,"Children",E,"Iterator over children.",N,N],[3,"Traverse",E,"Iterator which traverses a subtree.",N,N],[3,R[399],E,"Iterator over a node and its descendants.",N,N],[4,"Error",E,"A list of all possible errors.",N,N],[13,"InvalidXmlPrefixUri",E,"The `xmlns:xml` attribute must have an…",2,N],[13,"UnexpectedXmlUri",E,"Only the `xmlns:xml` attribute can have the…",2,N],[13,"UnexpectedXmlnsUri",E,"The http://www.w3.org/2000/xmlns/ URI must not be declared.",2,N],[13,"InvalidElementNamePrefix",E,"`xmlns` can't be used as an element prefix.",2,N],[13,"DuplicatedNamespace",E,"A namespace was already defined on this element.",2,N],[13,"UnknownNamespace",E,"An unknown namespace.",2,N],[13,"UnexpectedCloseTag",E,"Incorrect tree structure.",2,N],[12,"expected","roxmltree::Error",E,2,N],[12,"actual",E,E,2,N],[12,"pos",E,E,2,N],[13,"UnexpectedEntityCloseTag",R[376],"Entity value starts with a close tag.",2,N],[13,"UnknownEntityReference",E,"A reference to an entity that was not defined in the DTD.",2,N],[13,"MalformedEntityReference",E,"A malformed entity reference.",2,N],[13,"EntityReferenceLoop",E,"A possible entity reference loop.",2,N],[13,"InvalidAttributeValue",E,"Attribute value cannot have a `<` character.",2,N],[13,"DuplicatedAttribute",E,"An element has a duplicated attributes.",2,N],[13,"NoRootNode",E,"The XML document must have at least one element.",2,N],[13,"ParserError",E,"Errors detected by the `xmlparser` crate.",2,N],[4,"NodeType",E,"List of supported node types.",N,N],[13,"Root",E,"The root node of the `Document`.",3,N],[13,"Element",E,"An element node.",3,N],[13,"PI",E,R[377],3,N],[13,"Comment",E,"A comment node.",3,N],[13,"Text",E,"A text node.",3,N],[4,"Edge",E,"Open or close edge of a node.",N,N],[13,"Open",E,"Open.",4,N],[13,"Close",E,"Close.",4,N],[11,"pos",E,R[401],2,[[["self"]],[R[316]]]],[11,"parse",E,"Parses the input XML string.",5,[[["str"]],[[R[15],[R[380],"error"]],["error"],[R[380]]]]],[17,"NS_XML_URI",E,"The http://www.w3.org/XML/1998/namespace URI.",N,N],[17,"NS_XMLNS_URI",E,"The http://www.w3.org/2000/xmlns/ URI.",N,N],[11,"root",E,"Returns the root node.",5,[[["self"]],["node"]]],[11,"root_element",E,"Returns the root element of the document.",5,[[["self"]],["node"]]],[11,R[378],E,"Returns an iterator over document's descendant nodes.",5,[[["self"]],[R[378]]]],[11,"text_pos_at",E,"Calculates `TextPos` in the original document from…",5,[[["self"],["usize"]],[R[316]]]],[11,R[379],E,"Returns attribute's namespace URI.",6,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"name",E,"Returns attribute's name.",6,[[["self"]],["str"]]],[11,"value",E,"Returns attribute's value.",6,[[["self"]],["str"]]],[11,"range",E,"Returns attribute's name range in bytes in the original…",6,[[["self"]],[["usize"],["range",["usize"]]]]],[11,"value_range",E,"Returns attribute's value range in bytes in the original…",6,[[["self"]],[["usize"],["range",["usize"]]]]],[11,"name",E,"Returns namespace name/prefix.",7,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"uri",E,"Returns namespace URI.",7,[[["self"]],["str"]]],[11,R[379],E,"Returns a namespace URI.",8,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"name",E,"Returns a local name.",8,[[["self"]],["str"]]],[11,"node_type",E,"Returns node's type.",9,[[["self"]],[R[390]]]],[11,"is_root",E,"Checks that node is a root node.",9,[[["self"]],["bool"]]],[11,"is_element",E,"Checks that node is an element node.",9,[[["self"]],["bool"]]],[11,"is_pi",E,"Checks that node is a processing instruction node.",9,[[["self"]],["bool"]]],[11,"is_comment",E,"Checks that node is a comment node.",9,[[["self"]],["bool"]]],[11,"is_text",E,"Checks that node is a text node.",9,[[["self"]],["bool"]]],[11,R[380],E,"Returns node's document.",9,[[["self"]],[R[380]]]],[11,"tag_name",E,"Returns node's tag name.",9,[[["self"]],[R[383]]]],[11,"has_tag_name",E,"Checks that node has a specified tag name.",9,[[["self"],["n"]],["bool"]]],[11,"default_namespace",E,"Returns node's default namespace URI.",9,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"lookup_prefix",E,"Returns a prefix for a given namespace URI.",9,[[["str"],["self"]],[[R[49],["str"]],["str"]]]],[11,"lookup_namespace_uri",E,"Returns an URI for a given prefix.",9,[[[R[49],["str"]],["str"],["self"]],[[R[49],["str"]],["str"]]]],[11,R[381],E,"Returns element's attribute value.",9,[[["self"],["n"]],[[R[49],["str"]],["str"]]]],[11,"attribute_node",E,"Returns element's attribute object.",9,[[["self"],["n"]],[[R[49],[R[381]]],[R[381]]]]],[11,"has_attribute",E,"Checks that element has a specified attribute.",9,[[["self"],["n"]],["bool"]]],[11,"attributes",E,"Returns element's attributes.",9,[[["self"]]]],[11,"namespaces",E,"Returns element's namespaces.",9,[[["self"]]]],[11,"text",E,"Returns node's text.",9,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"tail",E,"Returns element's tail text.",9,[[["self"]],[[R[49],["str"]],["str"]]]],[11,"pi",E,"Returns node as Processing Instruction.",9,[[["self"]],[[R[49],["pi"]],["pi"]]]],[11,"parent",E,"Returns the parent of this node.",9,[[["self"]],[R[49]]]],[11,"parent_element",E,"Returns the parent element of this node.",9,[[["self"]],[R[49]]]],[11,"prev_sibling",E,"Returns the previous sibling of this node.",9,[[["self"]],[R[49]]]],[11,"prev_sibling_element",E,"Returns the previous sibling element of this node.",9,[[["self"]],[R[49]]]],[11,"next_sibling",E,"Returns the next sibling of this node.",9,[[["self"]],[R[49]]]],[11,"next_sibling_element",E,"Returns the next sibling element of this node.",9,[[["self"]],[R[49]]]],[11,"first_child",E,"Returns the first child of this node.",9,[[["self"]],[R[49]]]],[11,"first_element_child",E,"Returns the first element child of this node.",9,[[["self"]],[R[49]]]],[11,"last_child",E,"Returns the last child of this node.",9,[[["self"]],[R[49]]]],[11,"last_element_child",E,"Returns the last element child of this node.",9,[[["self"]],[R[49]]]],[11,"has_siblings",E,"Returns true if this node has siblings.",9,[[["self"]],["bool"]]],[11,"has_children",E,"Returns true if this node has children.",9,[[["self"]],["bool"]]],[11,R[382],E,"Returns an iterator over ancestor nodes starting at this…",9,[[["self"]],[R[382]]]],[11,"prev_siblings",E,"Returns an iterator over previous sibling nodes.",9,[[["self"]],[R[384]]]],[11,"next_siblings",E,"Returns an iterator over next sibling nodes.",9,[[["self"]],[R[385]]]],[11,"first_children",E,"Returns an iterator over first children nodes.",9,[[["self"]],[R[386]]]],[11,"last_children",E,"Returns an iterator over last children nodes.",9,[[["self"]],[R[387]]]],[11,R[388],E,"Returns an iterator over children nodes.",9,[[["self"]],[R[388]]]],[11,R[389],E,"Returns an iterator which traverses the subtree starting…",9,[[["self"]],[R[389]]]],[11,R[378],E,"Returns an iterator over this node and its descendants.",9,[[["self"]],[R[378]]]],[11,"range",E,"Returns node's range in bytes in the original document.",9,[[["self"]],[["usize"],["range",["usize"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[50],E,E,10,[[],["i"]]],[11,R[51],E,E,10,[[["self"]],[T]]],[11,R[52],E,E,10,[[["self"],[T]]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[50],E,E,11,[[],["i"]]],[11,R[51],E,E,11,[[["self"]],[T]]],[11,R[52],E,E,11,[[["self"],[T]]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[50],E,E,12,[[],["i"]]],[11,R[51],E,E,12,[[["self"]],[T]]],[11,R[52],E,E,12,[[["self"],[T]]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[50],E,E,13,[[],["i"]]],[11,R[51],E,E,13,[[["self"]],[T]]],[11,R[52],E,E,13,[[["self"],[T]]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[50],E,E,14,[[],["i"]]],[11,R[51],E,E,14,[[["self"]],[T]]],[11,R[52],E,E,14,[[["self"],[T]]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[50],E,E,15,[[],["i"]]],[11,R[51],E,E,15,[[["self"]],[T]]],[11,R[52],E,E,15,[[["self"],[T]]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[50],E,E,16,[[],["i"]]],[11,R[51],E,E,16,[[["self"]],[T]]],[11,R[52],E,E,16,[[["self"],[T]]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[50],E,E,17,[[],["i"]]],[11,R[51],E,E,17,[[["self"]],[T]]],[11,R[52],E,E,17,[[["self"],[T]]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[["error"],[R[15],["error"]]]]],[11,"eq",E,E,0,[[[R[316]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[316]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[["error"],[R[15],["error"]]]]],[11,"clone",E,E,0,[[["self"]],[R[316]]]],[11,"from",E,E,2,[[["error"]],["self"]]],[11,"from",E,E,8,[[["str"]],["self"]]],[11,"from",E,E,8,[[],["self"]]],[11,"next",E,E,10,[[["self"]],[R[49]]]],[11,"next",E,E,11,[[["self"]],[R[49]]]],[11,"next",E,E,12,[[["self"]],[R[49]]]],[11,"next",E,E,13,[[["self"]],[R[49]]]],[11,"next",E,E,14,[[["self"]],[R[49]]]],[11,"next",E,E,15,[[["self"]],[R[49]]]],[11,"next",E,E,16,[[["self"]],[R[49]]]],[11,"next",E,E,17,[[["self"]],[R[49]]]],[11,R[55],E,E,15,[[["self"]],[R[49]]]],[11,"clone",E,E,3,[[["self"]],[R[390]]]],[11,"clone",E,E,1,[[["self"]],["pi"]]],[11,"clone",E,E,6,[[["self"]],[R[381]]]],[11,"clone",E,E,7,[[["self"]],[R[379]]]],[11,"clone",E,E,8,[[["self"]],[R[383]]]],[11,"clone",E,E,9,[[["self"]],["node"]]],[11,"clone",E,E,10,[[["self"]],[R[382]]]],[11,"clone",E,E,11,[[["self"]],[R[384]]]],[11,"clone",E,E,12,[[["self"]],[R[385]]]],[11,"clone",E,E,13,[[["self"]],[R[386]]]],[11,"clone",E,E,14,[[["self"]],[R[387]]]],[11,"clone",E,E,15,[[["self"]],[R[388]]]],[11,"clone",E,E,4,[[["self"]],["edge"]]],[11,"clone",E,E,16,[[["self"]],[R[389]]]],[11,"clone",E,E,17,[[["self"]],[R[378]]]],[11,"eq",E,E,3,[[[R[390]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["pi"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["pi"]],["bool"]]],[11,"eq",E,E,6,[[[R[381]],["self"]],["bool"]]],[11,"eq",E,E,7,[[[R[379]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[379]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[383]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[383]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["edge"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["edge"]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[38]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[38]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,R[251],E,E,2,[[["self"]],["str"]]],[11,"new",E,R[402],0,[[["u32"]],[R[316]]]]],"p":[[3,"TextPos"],[3,"PI"],[4,"Error"],[4,"NodeType"],[4,"Edge"],[3,"Document"],[3,R[391]],[3,R[392]],[3,R[393]],[3,"Node"],[3,R[394]],[3,R[395]],[3,R[396]],[3,R[397]],[3,R[398]],[3,"Children"],[3,"Traverse"],[3,R[399]]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","i":[[3,R[43],"rustc_demangle","Representation of a demangled symbol name.",N,N],[3,R[44],E,"Error returned from the `try_demangle` function below when…",N,N],[5,R[41],E,"De-mangles a Rust symbol into a more readable version",N,[[["str"]],[R[41]]]],[5,"try_demangle",E,"The same as `demangle`, except return an `Err` if the…",N,[[["str"]],[[R[41]],[R[42]],[R[15],[R[41],R[42]]]]]],[11,R[65],E,"Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"clone",E,E,1,[[["self"]],[R[42]]]]],"p":[[3,R[43]],[3,R[44]]]};
searchIndex["rustyline"]={"doc":"Readline for Rust","i":[[3,"Context",R[1408],"Completion/suggestion context",N,N],[3,"Editor",E,"Line editor",N,N],[3,"Iter",E,"Edited lines iterator",N,N],[4,"Anchor",E,"Where to paste (relative to cursor position)",N,N],[13,"After",E,E,0,N],[13,"Before",E,E,0,N],[4,"At",E,"Where to move with respect to word boundary",N,N],[13,"Start",E,E,1,N],[13,"BeforeEnd",E,E,1,N],[13,"AfterEnd",E,E,1,N],[4,"CharSearch",E,"Vi character search",N,N],[13,"Forward",E,E,2,N],[13,"ForwardBefore",E,E,2,N],[13,"Backward",E,E,2,N],[13,"BackwardAfter",E,E,2,N],[4,"Cmd",E,"Commands",N,N],[13,"Abort",E,"abort",3,N],[13,"AcceptLine",E,"accept-line",3,N],[13,"BeginningOfHistory",E,"beginning-of-history",3,N],[13,"CapitalizeWord",E,"capitalize-word",3,N],[13,"ClearScreen",E,"clear-screen",3,N],[13,"Complete",E,"complete",3,N],[13,"CompleteBackward",E,"complete-backward",3,N],[13,"CompleteHint",E,"complete-hint",3,N],[13,"DowncaseWord",E,"downcase-word",3,N],[13,"EndOfFile",E,"vi-eof-maybe",3,N],[13,"EndOfHistory",E,"end-of-history",3,N],[13,"ForwardSearchHistory",E,"forward-search-history",3,N],[13,"HistorySearchBackward",E,"history-search-backward",3,N],[13,"HistorySearchForward",E,"history-search-forward",3,N],[13,"Insert",E,E,3,N],[13,"Interrupt",E,E,3,N],[13,"Kill",E,"backward-delete-char, backward-kill-line,…",3,N],[13,"Move",E,"backward-char, backward-word, beginning-of-line,…",3,N],[13,"NextHistory",E,"next-history",3,N],[13,"Noop",E,E,3,N],[13,"Overwrite",E,"vi-replace",3,N],[13,"PreviousHistory",E,"previous-history",3,N],[13,"QuotedInsert",E,"quoted-insert",3,N],[13,"ReplaceChar",E,"vi-change-char",3,N],[13,"Replace",E,"vi-change-to, vi-substitute",3,N],[13,"ReverseSearchHistory",E,"reverse-search-history",3,N],[13,"SelfInsert",E,"self-insert",3,N],[13,"Suspend",E,E,3,N],[13,"TransposeChars",E,"transpose-chars",3,N],[13,"TransposeWords",E,"transpose-words",3,N],[13,"Undo",E,"undo",3,N],[13,"Unknown",E,E,3,N],[13,"UpcaseWord",E,"upcase-word",3,N],[13,"ViYankTo",E,"vi-yank-to",3,N],[13,"Yank",E,"yank, vi-put",3,N],[13,"YankPop",E,"yank-pop",3,N],[4,"Movement",E,"Where to move",N,N],[13,"WholeLine",E,E,4,N],[13,"BeginningOfLine",E,"beginning-of-line",4,N],[13,"EndOfLine",E,"end-of-line",4,N],[13,"BackwardWord",E,"backward-word, vi-prev-word",4,N],[13,"ForwardWord",E,"forward-word, vi-end-word, vi-next-word",4,N],[13,"ViCharSearch",E,"vi-char-search",4,N],[13,"ViFirstPrint",E,"vi-first-print",4,N],[13,"BackwardChar",E,"backward-char",4,N],[13,"ForwardChar",E,"forward-char",4,N],[4,"Word",E,"Different word definitions",N,N],[13,"Big",E,"non-blanks characters",5,N],[13,"Emacs",E,"alphanumeric characters",5,N],[13,"Vi",E,"alphanumeric (and '_') characters",5,N],[4,"KeyPress",E,E,N,N],[13,"UnknownEscSeq",E,E,6,N],[13,"Backspace",E,E,6,N],[13,"BackTab",E,E,6,N],[13,"BracketedPasteStart",E,E,6,N],[13,"BracketedPasteEnd",E,E,6,N],[13,"Char",E,E,6,N],[13,"ControlDown",E,E,6,N],[13,"ControlLeft",E,E,6,N],[13,"ControlRight",E,E,6,N],[13,"ControlUp",E,E,6,N],[13,"Ctrl",E,E,6,N],[13,"Delete",E,E,6,N],[13,"Down",E,E,6,N],[13,"End",E,E,6,N],[13,"Enter",E,E,6,N],[13,"Esc",E,E,6,N],[13,"F",E,E,6,N],[13,"Home",E,E,6,N],[13,"Insert",E,E,6,N],[13,"Left",E,E,6,N],[13,"Meta",E,E,6,N],[13,"Null",E,E,6,N],[13,"PageDown",E,E,6,N],[13,"PageUp",E,E,6,N],[13,"Right",E,E,6,N],[13,"ShiftDown",E,E,6,N],[13,"ShiftLeft",E,E,6,N],[13,"ShiftRight",E,E,6,N],[13,"ShiftUp",E,E,6,N],[13,"Tab",E,E,6,N],[13,"Up",E,E,6,N],[0,"completion",E,"Completion API",N,N],[3,"Pair",R[1416],E,N,N],[12,"display",E,E,7,N],[12,R[1388],E,E,7,N],[3,R[1434],E,"A `Completer` for file and folder names.",N,N],[4,"Quote",E,E,N,N],[13,"Double",E,E,8,N],[13,"Single",E,E,8,N],[13,"None",E,E,8,N],[5,"unescape",E,"Remove escape char",N,[[["str"],[R[49],["char"]],["char"]],[["str"],["cow",["str"]]]]],[5,"escape",E,"Escape any `break_chars` in `input` string with…",N,[[[R[49],["char"]],["string"],["char"],["quote"]],["string"]]],[5,"extract_word",E,"Given a `line` and a cursor `pos`ition, try to find…",N,[[[R[49],["char"]],["usize"],["char"],["str"]]]],[5,R[1387],E,E,N,[[],[[R[49],["str"]],["str"]]]],[8,"Candidate",E,"A completion candidate.",N,N],[10,"display",E,"Text to display when listing alternatives.",9,[[["self"]],["str"]]],[10,R[1388],E,"Text to insert in line.",9,[[["self"]],["str"]]],[8,"Completer",E,"To be called for tab-completion.",N,N],[16,"Candidate",E,E,10,N],[11,"complete",E,R[1409],10,[[["str"],["usize"],["context"],["self"]],[R[15]]]],[11,"update",E,"Updates the edited `line` with the `elected` candidate.",10,[[["str"],["usize"],["linebuffer"],["self"]]]],[11,"new",E,E,11,[[],["self"]]],[11,"complete_path",E,E,11,[[["str"],["self"],["usize"]],[R[15]]]],[0,"config",R[1408],"Customize line editor",N,N],[3,"Config",R[1417],"User preferences",N,N],[3,"Builder",E,"Configuration builder",N,N],[4,"BellStyle",E,"Beep or flash or nothing",N,N],[13,"Audible",E,"Beep",12,N],[13,"None",E,"Silent",12,N],[13,"Visible",E,"Flash screen (not supported)",12,N],[4,R[1435],E,E,N,N],[13,"AlwaysAdd",E,E,13,N],[13,"IgnoreConsecutive",E,"a line will not be added to the history if it matches the…",13,N],[4,R[1436],E,E,N,N],[13,"Circular",E,"Complete the next full match (like in Vim by default)",14,N],[13,"List",E,"Complete till longest match. When more than one match,…",14,N],[4,"EditMode",E,"Style of editing / Standard keymaps",N,N],[13,"Emacs",E,E,15,N],[13,"Vi",E,E,15,N],[4,"ColorMode",E,"Colorization mode",N,N],[13,"Enabled",E,E,16,N],[13,"Forced",E,E,16,N],[13,"Disabled",E,E,16,N],[4,R[1437],E,"Should the editor use stdout or stderr",N,N],[13,"Stderr",E,E,17,N],[13,"Stdout",E,E,17,N],[8,"Configurer",E,E,N,N],[10,R[1423],E,E,18,[[["self"]],["config"]]],[11,R[1424],E,R[1396],18,[[["self"],["usize"]]]],[11,R[1425],E,R[1389],18,[[["self"],["bool"]]]],[11,R[1426],E,R[1390],18,[[["self"],["bool"]]]],[11,"set_completion_type",E,R[1399],18,[[["self"],[R[1391]]]]],[11,"set_completion_prompt_limit",E,R[1401],18,[[["self"],["usize"]]]],[11,"set_keyseq_timeout",E,"Timeout for ambiguous key sequences in milliseconds.",18,[[["self"],["i32"]]]],[11,"set_edit_mode",E,R[1403],18,[[["editmode"],["self"]]]],[11,"set_auto_add_history",E,R[1392],18,[[["self"],["bool"]]]],[11,"set_bell_style",E,R[1405],18,[[["self"],[R[1430]]]]],[11,R[1427],E,R[1406],18,[[["self"],[R[1428]]]]],[11,"set_output_stream",E,"Whether to use stdout or stderr",18,[[["self"],[R[1393]]]]],[11,"set_tab_stop",E,R[1394],18,[[["self"],["usize"]]]],[11,R[567],E,E,19,[[],[R[567]]]],[11,R[1395],E,"Tell the maximum length (i.e. number of entries) for the…",19,[[["self"]],["usize"]]],[11,"history_duplicates",E,R[1389],19,[[["self"]],[R[1431]]]],[11,R[1397],E,R[1390],19,[[["self"]],["bool"]]],[11,R[1398],E,E,19,[[["self"]],[R[1391]]]],[11,R[1400],E,E,19,[[["self"]],["usize"]]],[11,R[1402],E,E,19,[[["self"]],["i32"]]],[11,"edit_mode",E,E,19,[[["self"]],["editmode"]]],[11,R[1404],E,R[1392],19,[[["self"]],["bool"]]],[11,"bell_style",E,"Bell style: beep, flash or nothing.",19,[[["self"]],[R[1430]]]],[11,"color_mode",E,"Tell if colors should be enabled.",19,[[["self"]],[R[1428]]]],[11,R[1407],E,E,19,[[["self"]],[R[1393]]]],[11,"tab_stop",E,R[1394],19,[[["self"]],["usize"]]],[11,"new",E,E,20,[[],["self"]]],[11,R[1395],E,R[1396],20,[[["usize"]],["self"]]],[11,"history_ignore_dups",E,R[1389],20,[[["bool"]],["self"]]],[11,R[1397],E,R[1390],20,[[["bool"]],["self"]]],[11,R[1398],E,R[1399],20,[[[R[1391]]],["self"]]],[11,R[1400],E,R[1401],20,[[["usize"]],["self"]]],[11,R[1402],E,"Timeout for ambiguous key sequences in milliseconds.…",20,[[["i32"]],["self"]]],[11,"edit_mode",E,R[1403],20,[[["editmode"]],["self"]]],[11,R[1404],E,R[1392],20,[[["bool"]],["self"]]],[11,"bell_style",E,R[1405],20,[[[R[1430]]],["self"]]],[11,"color_mode",E,R[1406],20,[[[R[1428]]],["self"]]],[11,R[1407],E,"Whether to use stdout or stderr.",20,[[[R[1393]]],["self"]]],[11,"tab_stop",E,R[1394],20,[[["usize"]],["self"]]],[11,"build",E,E,20,[[],["config"]]],[0,"error",R[1408],"Contains error type for handling I/O and Errno errors",N,N],[4,R[1438],R[1418],"The error type for Rustyline errors that can arise from…",N,N],[13,"Io",E,"I/O Error",21,N],[13,"Eof",E,"EOF (Ctrl-D)",21,N],[13,"Interrupted",E,"Ctrl-C",21,N],[13,"Utf8Error",E,"Chars Error",21,N],[13,"Errno",E,"Unix Error from syscall",21,N],[0,"highlight",R[1408],"Syntax highlighting",N,N],[3,R[1440],R[1419],E,N,N],[8,R[1439],E,"Syntax highlighter with ANSI color. Rustyline will try to…",N,N],[11,"highlight",E,R[1409],22,[[["usize"],["self"],["str"]],[["str"],["cow",["str"]]]]],[11,"highlight_prompt",E,"Takes the `prompt` and returns the highlighted version…",22,[[["self"],["str"],["bool"]],[["cow",["str"]],["str"]]]],[11,"highlight_hint",E,"Takes the `hint` and returns the highlighted version (with…",22,[[["self"],["str"]],[["str"],["cow",["str"]]]]],[11,"highlight_candidate",E,"Takes the completion `candidate` and returns the…",22,[[["str"],["self"],[R[1391]]],[["cow",["str"]],["str"]]]],[11,R[1429],E,"Tells if `line` needs to be highlighted when a specific…",22,[[["str"],["self"],["usize"]],["bool"]]],[11,"new",E,E,23,[[],["self"]]],[0,"hint",R[1408],"Hints (suggestions at the right of the prompt as you type).",N,N],[3,R[1441],R[1420],E,N,N],[8,"Hinter",E,"Hints provider",N,N],[11,"hint",E,R[1409],24,[[["str"],["usize"],["context"],["self"]],[["string"],[R[49],["string"]]]]],[0,"history",R[1408],"History API",N,N],[3,"History",R[1421],"Current state of the history.",N,N],[3,"Iter",E,"History iterator.",N,N],[4,"Direction",E,"Search direction",N,N],[13,"Forward",E,E,25,N],[13,"Reverse",E,E,25,N],[11,"new",E,E,26,[[],["self"]]],[11,R[1411],E,E,26,[[["config"]],["self"]]],[11,"get",E,"Return the history entry at position `index`, starting…",26,[[["self"],["usize"]],[[R[49],["string"]],["string"]]]],[11,"last",E,"Return the last history entry (i.e. previous command)",26,[[["self"]],[[R[49],["string"]],["string"]]]],[11,"add",E,R[1414],26,[[["into",["string"]],["string"],["str"],["self"],["asref",["str"]]],["bool"]]],[11,"len",E,"Return the number of entries in the history.",26,[[["self"]],["usize"]]],[11,R[166],E,"Return true if the history has no entry.",26,[[["self"]],["bool"]]],[11,"set_max_len",E,"Set the maximum length for the history. This function can…",26,[[["self"],["usize"]]]],[11,"save",E,R[1413],26,[[["self"],["p"]],[R[15]]]],[11,"load",E,R[1412],26,[[["self"],["p"]],[R[15]]]],[11,"clear",E,"Clear history",26,[[["self"]]]],[11,"search",E,"Search history (start position inclusive [0, len-1]).",26,[[["str"],["usize"],[R[1432]],["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[1442],E,"Anchored search",26,[[["str"],["usize"],[R[1432]],["self"]],[[R[49],["usize"]],["usize"]]]],[11,"iter",E,"Return a forward iterator.",26,[[["self"]],["iter"]]],[11,"should_reset_kill_ring",R[1408],E,3,[[["self"]],["bool"]]],[0,"line_buffer",E,"Line buffer with current cursor position",N,N],[3,"LineBuffer",R[1422],"Represent the current input (text and cursor position).",N,N],[4,"WordAction",E,"Word's case change",N,N],[13,"CAPITALIZE",E,E,27,N],[13,"LOWERCASE",E,E,27,N],[13,"UPPERCASE",E,E,27,N],[11,R[345],E,"Create a new line buffer with the given maximum `capacity`.",28,[[["usize"]],["self"]]],[11,R[65],E,"Extracts a string slice containing the entire buffer.",28,[[["self"]],["str"]]],[11,"into_string",E,"Converts a buffer into a `String` without copying or…",28,[[],["string"]]],[11,"pos",E,"Current cursor position (byte position)",28,[[["self"]],["usize"]]],[11,"set_pos",E,"Set cursor position (byte position)",28,[[["self"],["usize"]]]],[11,"len",E,"Returns the length of this buffer, in bytes.",28,[[["self"]],["usize"]]],[11,R[166],E,"Returns `true` if this buffer has a length of zero.",28,[[["self"]],["bool"]]],[11,"update",E,"Set line content (`buf`) and cursor position (`pos`).",28,[[["str"],["self"],["usize"]]]],[11,"next_pos",E,"Returns the position of the character just after the…",28,[[["self"],[R[1410]]],[[R[49],["usize"]],["usize"]]]],[11,R[5],E,"Insert the character `ch` at current cursor position and…",28,[[["self"],["char"],[R[1410]]],[[R[49],["bool"]],["bool"]]]],[11,"yank",E,"Yank/paste `text` at current position. Return `None` when…",28,[[["str"],["self"],[R[1410]]],[[R[49],["bool"]],["bool"]]]],[11,"yank_pop",E,"Delete previously yanked text and yank/paste `text` at…",28,[[["str"],["self"],["usize"]],[[R[49],["bool"]],["bool"]]]],[11,"move_backward",E,"Move cursor on the left.",28,[[["self"],[R[1410]]],["bool"]]],[11,"move_forward",E,"Move cursor on the right.",28,[[["self"],[R[1410]]],["bool"]]],[11,"move_home",E,"Move cursor to the start of the line.",28,[[["self"]],["bool"]]],[11,"move_end",E,"Move cursor to the end of the line.",28,[[["self"]],["bool"]]],[11,"delete",E,"Delete the character at the right of the cursor without…",28,[[["self"],[R[1410]]],[["string"],[R[49],["string"]]]]],[11,"backspace",E,"Delete the character at the left of the cursor. Basically…",28,[[["self"],[R[1410]]],["bool"]]],[11,"kill_line",E,"Kill the text from point to the end of the line.",28,[[["self"]],["bool"]]],[11,"discard_line",E,"Kill backward from point to the beginning of the line.",28,[[["self"]],["bool"]]],[11,"transpose_chars",E,"Exchange the char before cursor with the character at…",28,[[["self"]],["bool"]]],[11,"move_to_prev_word",E,"Moves the cursor to the beginning of previous word.",28,[[[R[1410]],["self"],["word"]],["bool"]]],[11,"delete_prev_word",E,"Delete the previous word, maintaining the cursor at the…",28,[[[R[1410]],["self"],["word"]],["bool"]]],[11,"move_to_next_word",E,"Moves the cursor to the end of next word.",28,[[["at"],["word"],[R[1410]],["self"]],["bool"]]],[11,"move_to",E,"Move cursor to the matching character position. Return…",28,[[["self"],[R[1433]],[R[1410]]],["bool"]]],[11,"delete_word",E,"Kill from the cursor to the end of the current word, or,…",28,[[["at"],["word"],[R[1410]],["self"]],["bool"]]],[11,"delete_to",E,E,28,[[["self"],[R[1433]],[R[1410]]],["bool"]]],[11,"edit_word",E,"Alter the next word.",28,[[["self"],["wordaction"]],["bool"]]],[11,"transpose_words",E,"Transpose two words",28,[[["self"],[R[1410]]],["bool"]]],[11,"replace",E,"Replaces the content between [`start`..`end`] with `text`…",28,[[["str"],["usize"],["range",["usize"]],["self"]]]],[11,"insert_str",E,"Insert the `s`tring at the specified position. Return…",28,[[["str"],["self"],["usize"]],["bool"]]],[11,"delete_range",E,"Remove the specified `range` in the line.",28,[[["range",["usize"]],["self"],["usize"]]]],[11,"copy",E,"Return the content between current cursor position and…",28,[[["self"],["movement"]],[["string"],[R[49],["string"]]]]],[11,"kill",E,E,28,[[["self"],["movement"]],["bool"]]],[6,"RepeatCount",R[1408],"The number of times one command should be repeated.",N,N],[6,"Result",E,"The error type for I/O and Linux Syscalls (Errno)",N,N],[8,"Helper",E,"Syntax specific helper.",N,N],[11,"new",E,"Constructor. Visible for testing.",29,[[["history"]],["self"]]],[11,"history",E,R[1415],29,[[["self"]],["history"]]],[11,"history_index",E,"The history index we are currently editing",29,[[["self"]],["usize"]]],[11,"new",E,"Create an editor with the default configuration",30,[[],["self"]]],[11,R[1411],E,"Create an editor with a specific configuration.",30,[[["config"]],["self"]]],[11,"readline",E,"This method will read a line from STDIN and will display a…",30,[[["str"],["self"]],[[R[15],["string"]],["string"]]]],[11,"readline_with_initial",E,"This function behaves in the exact same manner as…",30,[[["str"],["self"]],[[R[15],["string"]],["string"]]]],[11,"load_history",E,R[1412],30,[[["self"],["p"]],[R[15]]]],[11,"save_history",E,R[1413],30,[[["self"],["p"]],[R[15]]]],[11,"add_history_entry",E,R[1414],30,[[["into",["string"]],["string"],["str"],["self"],["asref",["str"]]],["bool"]]],[11,"clear_history",E,"Clear history.",30,[[["self"]]]],[11,"history_mut",E,"Return a mutable reference to the history object.",30,[[["self"]],["history"]]],[11,"history",E,R[1415],30,[[["self"]],["history"]]],[11,"set_helper",E,"Register a callback function to be called for…",30,[[["self"],[R[49]]]]],[11,"helper_mut",E,"Return a mutable reference to the helper.",30,[[["self"]],[[R[49]],["h"]]]],[11,"helper",E,"Return an immutable reference to the helper.",30,[[["self"]],[[R[49]],["h"]]]],[11,"bind_sequence",E,"Bind a sequence to a command.",30,[[["self"],["keypress"],["cmd"]],[[R[49],["cmd"]],["cmd"]]]],[11,"unbind_sequence",E,"Remove a binding for the given sequence.",30,[[["self"],["keypress"]],[[R[49],["cmd"]],["cmd"]]]],[11,"iter",E,"`let mut rl = rustyline::Editor::<()>::new(); for readline…",30,[[["self"],["str"]],["iter"]]],[11,"dimensions",E,"If output stream is a tty, this function returns its width…",30,[[["self"]],[R[49]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[15]]]],[11,R[13],E,E,29,[[],[R[15]]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[R[18]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[15]]]],[11,R[13],E,E,30,[[],[R[15]]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[R[18]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[50],E,E,31,[[],["i"]]],[11,R[12],E,E,31,[[[U]],[R[15]]]],[11,R[13],E,E,31,[[],[R[15]]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",R[1416],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[15]]]],[11,R[13],E,E,11,[[],[R[15]]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",R[1417],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[51],E,E,19,[[["self"]],[T]]],[11,R[52],E,E,19,[[["self"],[T]]]],[11,R[12],E,E,19,[[[U]],[R[15]]]],[11,R[13],E,E,19,[[],[R[15]]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[R[18]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[15]]]],[11,R[13],E,E,20,[[],[R[15]]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[R[18]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[51],E,E,12,[[["self"]],[T]]],[11,R[52],E,E,12,[[["self"],[T]]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[51],E,E,13,[[["self"]],[T]]],[11,R[52],E,E,13,[[["self"],[T]]]],[11,R[12],E,E,13,[[[U]],[R[15]]]],[11,R[13],E,E,13,[[],[R[15]]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[R[18]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[51],E,E,14,[[["self"]],[T]]],[11,R[52],E,E,14,[[["self"],[T]]]],[11,R[12],E,E,14,[[[U]],[R[15]]]],[11,R[13],E,E,14,[[],[R[15]]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[R[18]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[51],E,E,15,[[["self"]],[T]]],[11,R[52],E,E,15,[[["self"],[T]]]],[11,R[12],E,E,15,[[[U]],[R[15]]]],[11,R[13],E,E,15,[[],[R[15]]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[R[18]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[51],E,E,16,[[["self"]],[T]]],[11,R[52],E,E,16,[[["self"],[T]]]],[11,R[12],E,E,16,[[[U]],[R[15]]]],[11,R[13],E,E,16,[[],[R[15]]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[R[18]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[51],E,E,17,[[["self"]],[T]]],[11,R[52],E,E,17,[[["self"],[T]]]],[11,R[12],E,E,17,[[[U]],[R[15]]]],[11,R[13],E,E,17,[[],[R[15]]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[R[18]]]],[11,"into",R[1418],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[114],E,E,21,[[["self"]],["string"]]],[11,R[12],E,E,21,[[[U]],[R[15]]]],[11,R[13],E,E,21,[[],[R[15]]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[R[18]]]],[11,"into",R[1419],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[15]]]],[11,R[13],E,E,23,[[],[R[15]]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[R[18]]]],[11,"into",R[1420],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[15]]]],[11,R[13],E,E,32,[[],[R[15]]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[R[18]]]],[11,"into",R[1421],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[15]]]],[11,R[13],E,E,26,[[],[R[15]]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[R[18]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[50],E,E,33,[[],["i"]]],[11,R[12],E,E,33,[[[U]],[R[15]]]],[11,R[13],E,E,33,[[],[R[15]]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[R[18]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[51],E,E,25,[[["self"]],[T]]],[11,R[52],E,E,25,[[["self"],[T]]]],[11,R[12],E,E,25,[[[U]],[R[15]]]],[11,R[13],E,E,25,[[],[R[15]]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[R[18]]]],[11,"into",R[1422],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[15]]]],[11,R[13],E,E,28,[[],[R[15]]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[R[18]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[51],E,E,27,[[["self"]],[T]]],[11,R[52],E,E,27,[[["self"],[T]]]],[11,R[12],E,E,27,[[[U]],[R[15]]]],[11,R[13],E,E,27,[[],[R[15]]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[R[18]]]],[11,"display",R[1416],E,7,[[["self"]],["str"]]],[11,R[1388],E,E,7,[[["self"]],["str"]]],[11,"complete",E,E,11,[[["str"],["usize"],["context"],["self"]],[R[15]]]],[11,R[1423],R[1417],E,20,[[["self"]],["config"]]],[11,R[1423],R[1408],E,30,[[["self"]],["config"]]],[11,R[1424],E,E,30,[[["self"],["usize"]]]],[11,R[1425],E,E,30,[[["self"],["bool"]]]],[11,R[1426],E,E,30,[[["self"],["bool"]]]],[11,R[1427],E,E,30,[[["self"],[R[1428]]]]],[11,"highlight",R[1419],E,23,[[["usize"],["self"],["str"]],[["str"],["cow",["str"]]]]],[11,R[1429],E,E,23,[[["str"],["self"],["usize"]],["bool"]]],[11,"hint",R[1420],E,32,[[["str"],["usize"],["context"],["self"]],[["string"],[R[49],["string"]]]]],[11,"from",R[1418],E,21,[[["error"]],["self"]]],[11,"from",E,E,21,[[[R[177]]],["self"]]],[11,"from",E,E,21,[[["error"]],["self"]]],[11,"next",R[1421],E,33,[[["self"]],[["string"],[R[49],["string"]]]]],[11,R[53],E,E,33,[[["self"]]]],[11,"next",R[1408],E,31,[[["self"]],[[R[15],["string"]],[R[49],[R[15]]]]]],[11,R[55],R[1421],E,33,[[["self"]],[["string"],[R[49],["string"]]]]],[11,"clone",R[1416],E,8,[[["self"]],["quote"]]],[11,"clone",R[1417],E,19,[[["self"]],["config"]]],[11,"clone",E,E,12,[[["self"]],[R[1430]]]],[11,"clone",E,E,13,[[["self"]],[R[1431]]]],[11,"clone",E,E,14,[[["self"]],[R[1391]]]],[11,"clone",E,E,15,[[["self"]],["editmode"]]],[11,"clone",E,E,16,[[["self"]],[R[1428]]]],[11,"clone",E,E,17,[[["self"]],[R[1393]]]],[11,"clone",R[1421],E,25,[[["self"]],[R[1432]]]],[11,"clone",R[1408],E,3,[[["self"]],["cmd"]]],[11,"clone",E,E,5,[[["self"]],["word"]]],[11,"clone",E,E,1,[[["self"]],["at"]]],[11,"clone",E,E,0,[[["self"]],["anchor"]]],[11,"clone",E,E,2,[[["self"]],[R[1433]]]],[11,"clone",E,E,4,[[["self"]],["movement"]]],[11,"clone",E,E,6,[[["self"]],["keypress"]]],[11,"clone",R[1422],E,27,[[["self"]],["wordaction"]]],[11,R[23],R[1416],E,11,[[],["self"]]],[11,R[23],R[1417],E,19,[[],["self"]]],[11,R[23],E,E,12,[[],["self"]]],[11,R[23],E,E,20,[[],[R[567]]]],[11,R[23],R[1419],E,23,[[],["matchingbrackethighlighter"]]],[11,R[23],R[1421],E,26,[[],["history"]]],[11,"eq",R[1416],E,8,[[["self"],["quote"]],["bool"]]],[11,"eq",R[1417],E,19,[[["config"],["self"]],["bool"]]],[11,"ne",E,E,19,[[["config"],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[1430]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1431]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[1391]]],["bool"]]],[11,"eq",E,E,15,[[["self"],["editmode"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1428]]],["bool"]]],[11,"eq",E,E,17,[[[R[1393]],["self"]],["bool"]]],[11,"eq",R[1421],E,25,[[[R[1432]],["self"]],["bool"]]],[11,"eq",R[1408],E,3,[[["self"],["cmd"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["cmd"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["word"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["at"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["anchor"]],["bool"]]],[11,"eq",E,E,2,[[[R[1433]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[1433]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["movement"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["movement"]],["bool"]]],[11,"eq",E,E,6,[[["keypress"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["keypress"],["self"]],["bool"]]],[11,"fmt",R[1418],E,21,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1416],E,8,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1417],E,19,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,15,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,20,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1418],E,21,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1421],E,25,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1408],E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1422],E,28,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",R[1408],E,30,[[["self"],[R[38]]],[R[15]]]],[11,"deref",R[1422],E,28,[[["self"]],["str"]]],[11,"index",R[1421],E,26,[[["self"],["usize"]],["string"]]],[11,"hash",R[1408],E,6,[[["self"],["__h"]]]],[11,R[251],R[1418],E,21,[[["self"]],["str"]]],[11,R[1133],R[1417],E,17,[[["self"]],["rawfd"]]]],"p":[[4,"Anchor"],[4,"At"],[4,"CharSearch"],[4,"Cmd"],[4,"Movement"],[4,"Word"],[4,"KeyPress"],[3,"Pair"],[4,"Quote"],[8,"Candidate"],[8,"Completer"],[3,R[1434]],[4,"BellStyle"],[4,R[1435]],[4,R[1436]],[4,"EditMode"],[4,"ColorMode"],[4,R[1437]],[8,"Configurer"],[3,"Config"],[3,"Builder"],[4,R[1438]],[8,R[1439]],[3,R[1440]],[8,"Hinter"],[4,"Direction"],[3,"History"],[4,"WordAction"],[3,"LineBuffer"],[3,"Context"],[3,"Editor"],[3,"Iter"],[3,R[1441]],[3,"Iter"]]};
searchIndex["shell_words"]={"doc":"Process command line according to parsing rules of Unix…","i":[[3,R[348],"shell_words","An error returned when shell parsing fails.",N,N],[5,"split",E,"Splits command line into separate arguments, in much the…",N,[[["str"]],[[R[15],["vec",R[347]]],[R[347]],["vec",["string"]]]]],[5,"quote",E,"Escapes special characters in a string, so that it will…",N,[[["str"]],[["str"],["cow",["str"]]]]],[5,"join",E,"Joins arguments into a single command line suitable for…",N,[[["i"]],["string"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"clone",E,E,0,[[["self"]],[R[347]]]],[11,"eq",E,E,0,[[["self"],[R[347]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,R[251],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[348]]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","i":[[4,R[302],"strsim",E,N,N],[13,"DifferentLengthArgs",E,E,0,N],[5,"hamming",E,"Calculates the number of positions in the two strings…",N,[[["str"]],["hammingresult"]]],[5,"jaro",E,"Calculates the Jaro similarity between two strings. The…",N,[[["str"]],["f64"]]],[5,"jaro_winkler",E,"Like Jaro but gives a boost to strings that have a common…",N,[[["str"]],["f64"]]],[5,"levenshtein",E,"Calculates the minimum number of insertions, deletions,…",N,[[["str"]],["usize"]]],[5,"normalized_levenshtein",E,"Calculates a normalized score of the Levenshtein algorithm…",N,[[["str"]],["f64"]]],[5,"osa_distance",E,"Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"]],["usize"]]],[5,"damerau_levenshtein",E,"Like optimal string alignment, but substrings can be…",N,[[["str"]],["usize"]]],[5,"normalized_damerau_levenshtein",E,"Calculates a normalized score of the Damerau–Levenshtein…",N,[[["str"]],["f64"]]],[6,"HammingResult",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"eq",E,E,0,[[["strsimerror"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]]],"p":[[4,R[302]]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,R[358],"textwrap","Simple and default way to split words: splitting on…",N,N],[3,R[359],E,"Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"Wrapper",E,"A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width",E,"The width in columns at which the text will be wrapped.",0,N],[12,R[350],E,"Indentation used for the first line of output.",0,N],[12,R[351],E,"Indentation used for subsequent lines of output.",0,N],[12,R[352],E,"Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter",E,"The method for splitting words. If the `hyphenation`…",0,N],[3,R[360],E,"An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter",E,"An iterator over the lines of the input string which…",N,N],[5,"dedent",E,"Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[5,"indent",E,"Add prefix to each non-empty line.",N,[[["str"]],["string"]]],[5,"fill",E,"Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["string"]]],[5,"wrap",E,"Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,R[353],E,"Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],[[R[355],[R[349]]],[R[349]]]]],[8,R[357],E,"An interface for splitting words.",N,N],[10,"split",E,"Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new",E,"Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[[R[356],[R[349]]],[R[349]]]]],[11,"with_splitter",E,"Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],[R[356]]]],[11,R[350],E,"Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],[R[356]]]],[11,R[351],E,"Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],[R[356]]]],[11,R[352],E,"Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],[R[356]]]],[11,"fill",E,"Fill a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],["string"]]],[11,"wrap",E,"Wrap a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[["cow",["str"]],["vec",["cow"]]]]],[11,R[353],E,R[354],0,[[["str"],["self"]],["wrapiter"]]],[11,"into_wrap_iter",E,R[354],0,[[["str"]],[R[355]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[50],E,E,4,[[],["i"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[50],E,E,5,[[],["i"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"split",E,E,3,[[["self"],["str"]],["vec"]]],[11,"split",E,E,2,[[["self"],["str"]],["vec"]]],[11,"next",E,E,4,[[["self"]],[[R[49],["cow"]],["cow",["str"]]]]],[11,"next",E,E,5,[[["self"]],[[R[49],["cow"]],["cow",["str"]]]]],[11,"clone",E,E,3,[[["self"]],["nohyphenation"]]],[11,"clone",E,E,2,[[["self"]],[R[349]]]],[11,"clone",E,E,0,[[["self"]],[R[356]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]]],"p":[[3,"Wrapper"],[8,R[357]],[3,R[358]],[3,R[359]],[3,R[360]],[3,"WrapIter"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","i":[[3,R[373],"thread_local","An iterator that moves out of a `CachedThreadLocal`.",N,N],[3,R[374],E,"Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[3,R[371],E,"Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[3,R[372],E,"Thread-local variable wrapper",N,N],[3,R[375],E,"Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,R[60],E,"An iterator that moves out of a `ThreadLocal`.",N,N],[11,"new",E,"Creates a new empty `CachedThreadLocal`.",0,[[],[R[369]]]],[11,"get",E,R[362],0,[[["self"]],[[T],[R[49]]]]],[11,"get_or",E,R[361],0,[[["self"],["f"]],[T]]],[11,R[363],E,R[361],0,[[["self"],["f"]],[[R[15]],[T]]]],[11,R[364],E,R[365],0,[[["self"]],["cacheditermut"]]],[11,"clear",E,R[366],0,[[["self"]]]],[11,R[367],E,R[368],0,[[["self"]],[T]]],[11,"new",E,"Creates a new empty `ThreadLocal`.",1,[[],[R[370]]]],[11,"get",E,R[362],1,[[["self"]],[[T],[R[49]]]]],[11,"get_or",E,R[361],1,[[["self"],["f"]],[T]]],[11,R[363],E,R[361],1,[[["self"],["f"]],[[R[15]],[T]]]],[11,R[364],E,R[365],1,[[["self"]],["itermut"]]],[11,"clear",E,R[366],1,[[["self"]]]],[11,R[367],E,R[368],1,[[["self"]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[50],E,E,2,[[],["i"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[50],E,E,3,[[],["i"]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[50],E,E,0,[[],["i"]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[50],E,E,1,[[],["i"]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[50],E,E,4,[[],["i"]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[50],E,E,5,[[],["i"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[[T],[R[49]]]]],[11,R[53],E,E,3,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[49]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"next",E,E,4,[[["self"]],[[T],[R[49]]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[49]]]],[11,R[53],E,E,5,[[["self"]]]],[11,R[50],E,E,0,[[],["cachedintoiter"]]],[11,R[50],E,E,1,[[],["intoiter"]]],[11,R[23],E,E,0,[[],[R[369]]]],[11,R[23],E,E,1,[[],[R[370]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]]],"p":[[3,R[371]],[3,R[372]],[3,R[373]],[3,R[374]],[3,R[375]],[3,R[60]]]};
searchIndex["unicode_segmentation"]={"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,R[78],"unicode_segmentation","External iterator for a string's grapheme clusters.",N,N],[3,R[77],E,"External iterator for grapheme clusters and byte offsets.",N,N],[3,R[79],E,"Cursor-based segmenter for grapheme clusters.",N,N],[3,R[81],E,"External iterator for a string's word boundaries.",N,N],[3,R[80],E,"External iterator for word boundaries and byte offsets.",N,N],[3,R[83],E,R[62],N,N],[3,R[84],E,"External iterator for a string's sentence boundaries.",N,N],[3,R[85],E,"External iterator for sentence boundaries and byte offsets.",N,N],[3,R[86],E,R[62],N,N],[4,R[76],E,"An error return indicating that not enough content was…",N,N],[13,"PreContext",E,"More pre-context is needed. The caller should call…",0,N],[13,"PrevChunk",E,"When requesting `prev_boundary`, the cursor is moving past…",0,N],[13,"NextChunk",E,"When requesting `next_boundary`, the cursor is moving past…",0,N],[13,"InvalidOffset",E,"An error returned when the chunk given does not contain…",0,N],[11,R[65],E,R[63],1,[[["self"]],["str"]]],[11,R[65],E,R[63],2,[[["self"]],["str"]]],[11,"new",E,"Create a new cursor. The string and initial offset are…",3,[[["usize"],["bool"]],[R[70]]]],[11,"set_cursor",E,"Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor",E,"The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context",E,"Provide additional pre-context when it is needed to decide…",3,[[["str"],["self"],["usize"]]]],[11,"is_boundary",E,"Determine whether the current cursor location is a…",3,[[["str"],["self"],["usize"]],[[R[64]],[R[15],["bool",R[64]]],["bool"]]]],[11,"next_boundary",E,"Find the next boundary after the current cursor position.…",3,[[["str"],["self"],["usize"]],[[R[64]],[R[15],[R[49],R[64]]],[R[49],["usize"]]]]],[11,"prev_boundary",E,"Find the previous boundary after the current cursor…",3,[[["str"],["self"],["usize"]],[[R[64]],[R[15],[R[49],R[64]]],[R[49],["usize"]]]]],[11,R[65],E,R[63],4,[[["self"]],["str"]]],[11,R[65],E,R[63],5,[[["self"]],["str"]]],[17,R[87],E,"The version of Unicode that this version of…",N,N],[8,R[82],E,"Methods for segmenting strings according to Unicode…",N,N],[10,R[66],E,"Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],[R[66]]]],[10,"grapheme_indices",E,"Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],[R[69]]]],[10,"unicode_words",E,"Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds",E,R[67],6,[[["self"]],[R[71]]]],[10,"split_word_bound_indices",E,R[68],6,[[["self"]],[R[72]]]],[10,"unicode_sentences",E,R[67],6,[[["self"]],[R[73]]]],[10,"split_sentence_bounds",E,R[67],6,[[["self"]],[R[74]]]],[10,"split_sentence_bound_indices",E,R[68],6,[[["self"]],[R[75]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[50],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[50],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[50],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[50],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[50],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[50],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[50],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[50],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"eq",E,E,0,[[["self"],[R[64]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[64]]],["bool"]]],[11,"next",E,E,1,[[["self"]],[R[49]]]],[11,R[53],E,E,1,[[["self"]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"next",E,E,7,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"next",E,E,4,[[["self"]],[R[49]]]],[11,R[53],E,E,4,[[["self"]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"next",E,E,10,[[["self"]],[["str"],[R[49],["str"]]]]],[11,R[53],E,E,8,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"next",E,E,9,[[["self"]],[R[49]]]],[11,R[53],E,E,9,[[["self"]]]],[11,R[55],E,E,1,[[["self"]],[R[49]]]],[11,R[55],E,E,2,[[["self"]],[["str"],[R[49],["str"]]]]],[11,R[55],E,E,7,[[["self"]],[["str"],[R[49],["str"]]]]],[11,R[55],E,E,4,[[["self"]],[R[49]]]],[11,R[55],E,E,5,[[["self"]],[["str"],[R[49],["str"]]]]],[11,"clone",E,E,1,[[["self"]],[R[69]]]],[11,"clone",E,E,2,[[["self"]],[R[66]]]],[11,"clone",E,E,3,[[["self"]],[R[70]]]],[11,"clone",E,E,5,[[["self"]],[R[71]]]],[11,"clone",E,E,4,[[["self"]],[R[72]]]],[11,"clone",E,E,10,[[["self"]],[R[73]]]],[11,"clone",E,E,8,[[["self"]],[R[74]]]],[11,"clone",E,E,9,[[["self"]],[R[75]]]]],"p":[[4,R[76]],[3,R[77]],[3,R[78]],[3,R[79]],[3,R[80]],[3,R[81]],[8,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[3,R[86]]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","i":[[17,R[87],"unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,R[35],E,"Methods for determining displayed width of Unicode…",N,N],[10,"width",E,R[32],0,[[],[["usize"],[R[49],["usize"]]]]],[10,R[33],E,R[32],0,[[],[["usize"],[R[49],["usize"]]]]],[8,R[36],E,"Methods for determining displayed width of Unicode strings.",N,N],[10,"width",E,R[34],1,[[["self"]],["usize"]]],[10,R[33],E,R[34],1,[[["self"]],["usize"]]]],"p":[[8,R[35]],[8,R[36]]]};
searchIndex["utf8parse"]={"doc":"A table-driven UTF-8 Parser","i":[[3,"Parser","utf8parse","A parser for Utf8 Characters",N,N],[8,R[88],E,"Handles codepoint and invalid sequence events from the…",N,N],[10,"codepoint",E,"Called whenever a codepoint is parsed successfully",0,[[["self"],["char"]]]],[10,"invalid_sequence",E,"Called when an invalid_sequence is detected",0,[[["self"]]]],[11,"new",E,"Create a new Parser",1,[[],["parser"]]],[11,"advance",E,"Advance the parser",1,[[["u8"],["self"],["r"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]]],"p":[[8,R[88]],[3,"Parser"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,R[57],E,"A vacant Entry.",N,N],[3,R[58],E,"An occupied Entry.",N,N],[3,"Iter",E,"An iterator over the key-value pairs of a map.",N,N],[3,R[375],E,"An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys",E,"An iterator over the keys of a map.",N,N],[3,"Values",E,R[46],N,N],[3,R[59],E,R[46],N,N],[3,R[60],E,"A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain",E,"A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry",0,N],[13,"Occupied",E,"An occupied Entry",0,N],[11,"new",E,"Creates an empty `VecMap`.",1,[[],["self"]]],[11,R[345],E,"Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity",E,"Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len",E,"Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact",E,"Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit",E,"Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys",E,"Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values",E,R[47],1,[[["self"]],["values"]]],[11,"values_mut",E,R[47],1,[[["self"]],["valuesmut"]]],[11,"iter",E,R[48],1,[[["self"]],["iter"]]],[11,R[364],E,R[48],1,[[["self"]],["itermut"]]],[11,"append",E,"Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,"split_off",E,"Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain",E,R[48],1,[[["self"]],["drain"]]],[11,"len",E,"Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,R[166],E,"Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear",E,"Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],[["v"],[R[49]]]]],[11,"contains_key",E,"Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],[[R[49]],["v"]]]],[11,R[5],E,"Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],[R[49]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],[R[49]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain",E,"Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert",E,"Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,R[5],E,"Sets the value of the entry with the VacantEntry's key,…",2,[[["v"]],["v"]]],[11,"get",E,"Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut",E,"Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",3,[[],["v"]]],[11,R[5],E,"Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",3,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[50],E,E,1,[[],["i"]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[50],E,E,4,[[],["i"]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[50],E,E,5,[[],["i"]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[50],E,E,6,[[],["i"]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[50],E,E,7,[[],["i"]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[50],E,E,8,[[],["i"]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[50],E,E,9,[[],["i"]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[50],E,E,10,[[],["i"]]],[11,R[12],E,E,10,[[[U]],[R[15]]]],[11,R[13],E,E,10,[[],[R[15]]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,"next",E,E,4,[[["self"]],[R[49]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[49]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[49]]]],[11,R[53],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[53],E,E,6,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[["v"],[R[49]]]]],[11,R[53],E,E,7,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[[R[49]],["v"]]]],[11,R[53],E,E,8,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[49]]]],[11,R[53],E,E,9,[[["self"]]]],[11,"extend",E,E,1,[[["self"],[R[54]]]]],[11,"extend",E,E,1,[[["self"],[R[54]]]]],[11,R[50],E,R[48],1,[[],["intoiter"]]],[11,R[55],E,E,4,[[["self"]],[R[49]]]],[11,R[55],E,E,5,[[["self"]],[R[49]]]],[11,R[55],E,E,10,[[["self"]],[R[49]]]],[11,R[55],E,E,6,[[["self"]],[[R[49],["usize"]],["usize"]]]],[11,R[55],E,E,7,[[["self"]],[["v"],[R[49]]]]],[11,R[55],E,E,8,[[["self"]],[[R[49]],["v"]]]],[11,R[55],E,E,9,[[["self"]],[R[49]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone_from",E,E,1,[[["self"],["self"]]]],[11,"clone",E,E,4,[[["self"]],["iter"]]],[11,"clone",E,E,6,[[["self"]],["keys"]]],[11,"clone",E,E,7,[[["self"]],["values"]]],[11,R[23],E,E,1,[[],["self"]]],[11,"cmp",E,E,1,[[["self"]],[R[37]]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,R[61],E,E,1,[[["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"index",E,E,1,[[["self"],["usize"]],["v"]]],[11,"index",E,E,1,[[["self"],["usize"]],["v"]]],[11,R[56],E,E,1,[[["self"],["usize"]],["v"]]],[11,R[56],E,E,1,[[["self"],["usize"]],["v"]]],[11,"hash",E,E,1,[[["self"],["h"]]]],[11,R[346],E,E,1,[[[R[54]]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,R[57]],[3,R[58]],[3,"Iter"],[3,R[375]],[3,"Keys"],[3,"Values"],[3,R[59]],[3,R[60]],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable",E,"A safe version of `intrinsincs::unreachable`.",N,[[["void"]]]],[8,R[39],E,"Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap",E,"Get the value out of a wrapper.",0,[[],[T]]],[8,R[40],E,"Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err",E,"Get the error out of a wrapper.",1,[[],["e"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,"clone",E,E,2,[[["self"]],["void"]]],[11,"eq",E,E,2,[[[T],["self"]],["bool"]]],[11,R[61],E,E,2,[[[T],["self"]],[[R[49],[R[37]]],[R[37]]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,R[251],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[49],["error"]],["error"]]]]],"p":[[8,R[39]],[8,R[40]],[4,"Void"]]};
searchIndex["xmlparser"]={"doc":"xmlparser is a low-level, pull-based, zero-allocation XML…","i":[[3,"TextPos",R[304],R[400],N,N],[12,"row",E,E,0,N],[12,"col",E,E,0,N],[3,"Stream",E,"A streaming XML parsing interface.",N,N],[3,"StrSpan",E,"A string slice.",N,N],[3,R[325],E,"Tokenizer for the XML structure.",N,N],[4,"Error",E,"An XML parser errors.",N,N],[13,"InvalidDeclaration",E,E,1,N],[13,"InvalidComment",E,E,1,N],[13,"InvalidPI",E,E,1,N],[13,"InvalidDoctype",E,E,1,N],[13,"InvalidEntity",E,E,1,N],[13,"InvalidElement",E,E,1,N],[13,"InvalidAttribute",E,E,1,N],[13,"InvalidCdata",E,E,1,N],[13,"InvalidCharData",E,E,1,N],[13,"UnknownToken",E,E,1,N],[4,R[320],E,"A stream parser errors.",N,N],[13,"UnexpectedEndOfStream",E,"The steam ended earlier than we expected.",2,N],[13,"InvalidName",E,"An invalid name.",2,N],[13,"NonXmlChar",E,"A non-XML character has occurred.",2,N],[13,"InvalidChar",E,R[303],2,N],[13,"InvalidCharMultiple",E,R[303],2,N],[13,"InvalidQuote",E,"An unexpected character instead of `\"` or `'`.",2,N],[13,"InvalidSpace",E,"An unexpected character instead of an XML space.",2,N],[13,"InvalidString",E,"An unexpected string.",2,N],[13,"InvalidReference",E,"An invalid reference.",2,N],[13,"InvalidExternalID",E,"An invalid ExternalID in the DTD.",2,N],[13,"InvalidCommentData",E,"Comment cannot contain `--`.",2,N],[13,"InvalidCommentEnd",E,"Comment cannot end with `-`.",2,N],[13,"InvalidCharacterData",E,"A Character Data node contains an invalid data.",2,N],[4,R[321],E,"Representation of the Reference value.",N,N],[13,"Entity",E,"An entity reference.",3,N],[13,"Char",E,"A character reference.",3,N],[4,"Token",E,"An XML token.",N,N],[13,"Declaration",E,"Declaration token.",4,N],[12,"version",R[305],E,4,N],[12,"encoding",E,E,4,N],[12,"standalone",E,E,4,N],[12,"span",E,E,4,N],[13,"ProcessingInstruction",R[304],"Processing instruction token.",4,N],[12,"target",R[305],E,4,N],[12,"content",E,E,4,N],[12,"span",E,E,4,N],[13,"Comment",R[304],"Comment token.",4,N],[12,"text",R[305],E,4,N],[12,"span",E,E,4,N],[13,"DtdStart",R[304],"DOCTYPE start token.",4,N],[12,"name",R[305],E,4,N],[12,R[306],E,E,4,N],[12,"span",E,E,4,N],[13,"EmptyDtd",R[304],"Empty DOCTYPE token.",4,N],[12,"name",R[305],E,4,N],[12,R[306],E,E,4,N],[12,"span",E,E,4,N],[13,"EntityDeclaration",R[304],"ENTITY token.",4,N],[12,"name",R[305],E,4,N],[12,"definition",E,E,4,N],[12,"span",E,E,4,N],[13,"DtdEnd",R[304],"DOCTYPE end token.",4,N],[12,"span",R[305],E,4,N],[13,"ElementStart",R[304],"Element start token.",4,N],[12,"prefix",R[305],E,4,N],[12,"local",E,E,4,N],[12,"span",E,E,4,N],[13,R[391],R[304],"Attribute token.",4,N],[12,"prefix",R[305],E,4,N],[12,"local",E,E,4,N],[12,"value",E,E,4,N],[12,"span",E,E,4,N],[13,R[307],R[304],"Element end token.",4,N],[12,"end",R[305],E,4,N],[12,"span",E,E,4,N],[13,"Text",R[304],"Text token.",4,N],[12,"text",R[305],E,4,N],[13,"Cdata",R[304],"CDATA token.",4,N],[12,"text",R[305],E,4,N],[12,"span",E,E,4,N],[4,R[307],R[304],"`ElementEnd` token.",N,N],[13,"Open",E,"Indicates `>`",5,N],[13,"Close",E,"Indicates `</name>`",5,N],[13,"Empty",E,"Indicates `/>`",5,N],[4,R[308],E,"Representation of the ExternalID value.",N,N],[13,"System",E,E,6,N],[13,"Public",E,E,6,N],[4,R[322],E,"Representation of the EntityDef value.",N,N],[13,"EntityValue",E,E,7,N],[13,R[308],E,E,7,N],[11,"pos",E,R[401],1,[[["self"]],[R[316]]]],[11,"new",E,R[402],0,[[["u32"]],[R[316]]]],[11,"from_substr",E,"Creates a new stream from a specified `text` substring.",8,[[["str"],["range",["usize"]],["usize"]],["self"]]],[11,"span",E,"Returns an underling string span.",8,[[["self"]],[R[311]]]],[11,"pos",E,"Returns current position.",8,[[["self"]],["usize"]]],[11,"jump_to_end",E,"Sets current position equal to the end.",8,[[["self"]]]],[11,"at_end",E,"Checks if the stream is reached the end.",8,[[["self"]],["bool"]]],[11,"curr_byte",E,R[310],8,[[["self"]],[[R[15],["u8",R[309]]],[R[309]],["u8"]]]],[11,"curr_byte_unchecked",E,R[310],8,[[["self"]],["u8"]]],[11,"next_byte",E,"Returns a next byte from a current stream position.",8,[[["self"]],[[R[15],["u8",R[309]]],[R[309]],["u8"]]]],[11,"advance",E,"Advances by `n` bytes.",8,[[["self"],["usize"]]]],[11,R[1442],E,"Checks that the stream starts with a selected text.",8,[[["self"]],["bool"]]],[11,"consume_byte",E,"Consumes the current byte if it's equal to the provided…",8,[[["self"],["u8"]],[[R[15],[R[309]]],[R[309]]]]],[11,"try_consume_byte",E,"Tries to consume the current byte if it's equal to the…",8,[[["self"],["u8"]],["bool"]]],[11,"skip_string",E,"Skips selected string.",8,[[["self"]],[[R[15],[R[309]]],[R[309]]]]],[11,"consume_bytes",E,"Consumes bytes by the predicate and returns them.",8,[[["self"],["f"]],[R[311]]]],[11,"skip_bytes",E,"Skips bytes by the predicate.",8,[[["self"],["f"]]]],[11,"consume_chars",E,"Consumes chars by the predicate and returns them.",8,[[["self"],["f"]],[[R[311]],[R[309]],[R[15],[R[311],R[309]]]]]],[11,"skip_chars",E,"Skips chars by the predicate.",8,[[["self"],["f"]],[[R[15],[R[309]]],[R[309]]]]],[11,"slice_back",E,"Slices data from `pos` to the current position.",8,[[["self"],["usize"]],[R[311]]]],[11,"slice_tail",E,"Slices data from the current position to the end.",8,[[["self"]],[R[311]]]],[11,"skip_spaces",E,"Skips whitespaces.",8,[[["self"]]]],[11,"starts_with_space",E,"Checks if the stream is starts with a space.",8,[[["self"]],["bool"]]],[11,"consume_spaces",E,"Consumes whitespaces.",8,[[["self"]],[[R[15],[R[309]]],[R[309]]]]],[11,"try_consume_reference",E,"Consumes an XML character reference if there is one.",8,[[["self"]],[[R[49],[R[312]]],[R[312]]]]],[11,"consume_reference",E,"Consumes an XML reference.",8,[[["self"]],[[R[312]],[R[309]],[R[15],[R[312],R[309]]]]]],[11,"consume_name",E,"Consumes an XML name and returns it.",8,[[["self"]],[[R[311]],[R[309]],[R[15],[R[311],R[309]]]]]],[11,"skip_name",E,"Skips an XML name.",8,[[["self"]],[[R[15],[R[309]]],[R[309]]]]],[11,"consume_qname",E,"Consumes a qualified XML name and returns it.",8,[[["self"]],[[R[309]],[R[15],[R[309]]]]]],[11,"consume_eq",E,"Consumes `=`.",8,[[["self"]],[[R[15],[R[309]]],[R[309]]]]],[11,"consume_quote",E,"Consumes quote.",8,[[["self"]],[[R[15],["u8",R[309]]],[R[309]],["u8"]]]],[11,"gen_text_pos",E,"Calculates a current absolute position.",8,[[["self"]],[R[316]]]],[11,"gen_text_pos_from",E,"Calculates an absolute position at `pos`.",8,[[["self"],["usize"]],[R[316]]]],[11,"start",E,"Returns a start position of the span.",9,[[["self"]],["usize"]]],[11,"end",E,R[313],9,[[["self"]],["usize"]]],[11,"range",E,R[313],9,[[["self"]],[["range",["usize"]],["usize"]]]],[11,R[65],E,"Returns a span slice.",9,[[["self"]],["str"]]],[8,R[323],E,R[314],N,N],[10,"is_xml_name_start",E,"Checks if the value is within the NameStartChar range.",10,[[["self"]],["bool"]]],[10,R[315],E,"Checks if the value is within the NameChar range.",10,[[["self"]],["bool"]]],[10,"is_xml_char",E,"Checks if the value is within the Char range.",10,[[["self"]],["bool"]]],[8,R[324],E,R[314],N,N],[10,"is_xml_digit",E,"Checks if a byte is a digit.",11,[[["self"]],["bool"]]],[10,"is_xml_hex_digit",E,"Checks if a byte is a hex digit.",11,[[["self"]],["bool"]]],[10,"is_xml_space",E,"Checks if a byte is a space.",11,[[["self"]],["bool"]]],[10,"is_xml_letter",E,"Checks if a byte is an ASCII char.",11,[[["self"]],["bool"]]],[10,R[315],E,"Checks if a byte is within the ASCII Char range.",11,[[["self"]],["bool"]]],[11,"from_fragment",E,"Enables document fragment parsing.",12,[[["str"],["range",["usize"]],["usize"]],["self"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[15]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[15]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[18]]]],[11,R[51],E,E,0,[[["self"]],[T]]],[11,R[52],E,E,0,[[["self"],[T]]]],[11,R[114],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[15]]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[15]]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[18]]]],[11,R[51],E,E,8,[[["self"]],[T]]],[11,R[52],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[15]]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[],[R[15]]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[R[18]]]],[11,R[51],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"],[T]]]],[11,R[114],E,E,9,[[["self"]],["string"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[15]]]],[11,R[50],E,E,12,[[],["i"]]],[11,"into",E,E,12,[[],[U]]],[11,R[13],E,E,12,[[],[R[15]]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[R[18]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[15]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[15]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[18]]]],[11,R[51],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"],[T]]]],[11,R[114],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[15]]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[],[R[15]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[18]]]],[11,R[51],E,E,2,[[["self"]],[T]]],[11,R[52],E,E,2,[[["self"],[T]]]],[11,R[114],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[15]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[15]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[18]]]],[11,R[51],E,E,3,[[["self"]],[T]]],[11,R[52],E,E,3,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[15]]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[15]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[18]]]],[11,R[51],E,E,4,[[["self"]],[T]]],[11,R[52],E,E,4,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[15]]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[15]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[18]]]],[11,R[51],E,E,5,[[["self"]],[T]]],[11,R[52],E,E,5,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[15]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[],[R[15]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[18]]]],[11,R[51],E,E,6,[[["self"]],[T]]],[11,R[52],E,E,6,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[15]]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[15]]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[18]]]],[11,R[51],E,E,7,[[["self"]],[T]]],[11,R[52],E,E,7,[[["self"],[T]]]],[11,"from",E,E,8,[[["str"]],["self"]]],[11,"from",E,E,8,[[[R[311]]],["self"]]],[11,"from",E,E,9,[[["str"]],["self"]]],[11,"from",E,E,12,[[["str"]],["self"]]],[11,"fmt",E,E,1,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,2,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,0,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,9,[[[R[38]],["self"]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[38]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[38]]],[R[15]]]],[11,"eq",E,E,0,[[["self"],[R[316]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[316]]],["bool"]]],[11,"eq",E,E,3,[[[R[312]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[312]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["stream"],["self"]],["bool"]]],[11,"ne",E,E,8,[[["stream"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[311]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[311]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["token"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["token"]],["bool"]]],[11,"eq",E,E,5,[[[R[317]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[317]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[318]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[318]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[319]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[319]]],["bool"]]],[11,"deref",E,E,9,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[49]]]],[11,"clone",E,E,1,[[["self"]],["error"]]],[11,"clone",E,E,2,[[["self"]],[R[309]]]],[11,"clone",E,E,0,[[["self"]],[R[316]]]],[11,"clone",E,E,3,[[["self"]],[R[312]]]],[11,"clone",E,E,8,[[["self"]],["stream"]]],[11,"clone",E,E,9,[[["self"]],[R[311]]]],[11,"clone",E,E,4,[[["self"]],["token"]]],[11,"clone",E,E,5,[[["self"]],[R[317]]]],[11,"clone",E,E,6,[[["self"]],[R[318]]]],[11,"clone",E,E,7,[[["self"]],[R[319]]]],[11,R[251],E,E,1,[[["self"]],["str"]]],[11,R[251],E,E,2,[[["self"]],["str"]]]],"p":[[3,"TextPos"],[4,"Error"],[4,R[320]],[4,R[321]],[4,"Token"],[4,R[307]],[4,R[308]],[4,R[322]],[3,"Stream"],[3,"StrSpan"],[8,R[323]],[8,R[324]],[3,R[325]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);